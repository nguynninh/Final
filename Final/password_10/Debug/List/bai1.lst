
AVRASM ver. 2.1.30  D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_10\Debug\List\bai1.asm Sat Dec 21 16:29:33 2024

D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_10\Debug\List\bai1.asm(1090): warning: Register r4 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_10\Debug\List\bai1.asm(1091): warning: Register r5 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_10\Debug\List\bai1.asm(1092): warning: Register r6 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_10\Debug\List\bai1.asm(1093): warning: Register r7 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_10\Debug\List\bai1.asm(1094): warning: Register r8 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_10\Debug\List\bai1.asm(1095): warning: Register r9 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128A
                 ;Program type           : Application
                 ;Clock frequency        : 8,000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128A
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _miss=R4
                 	.DEF _miss_msb=R5
                 	.DEF _counter=R6
                 	.DEF _counter_msb=R7
                 	.DEF _dem_sai=R8
                 	.DEF _dem_sai_msb=R9
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0189 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 01b9 	JMP  _timer0_ovf_isr
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _font5x7:
000046 0705
000047 6020
000048 0000
000049 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
00004a 0000
00004b 5f00
00004c 0000
00004d 0700      	.DB  0x0,0x0,0x0,0x5F,0x0,0x0,0x0,0x7
00004e 0700
00004f 1400
000050 147f
000051 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
000052 2a24
000053 2a7f
000054 2312
000055 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
000056 6264
000057 4936
000058 2255
000059 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
00005a 0305
00005b 0000
00005c 1c00
00005d 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
00005e 0000
00005f 2241
000060 001c
000061 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
000062 2a1c
000063 0808
000064 3e08
000065 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
000066 5000
000067 0030
000068 0800
000069 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
00006a 0808
00006b 3000
00006c 0030
00006d 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
00006e 0810
00006f 0204
000070 513e
000071 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
000072 003e
000073 7f42
000074 0040
000075 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
000076 4951
000077 2146
000078 4541
000079 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
00007a 1418
00007b 7f12
00007c 2710
00007d 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
00007e 3945
00007f 4a3c
000080 4949
000081 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
000082 0971
000083 0305
000084 4936
000085 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
000086 0636
000087 4949
000088 1e29
000089 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
00008a 0036
00008b 0000
00008c 3656
00008d 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
00008e 0800
00008f 2214
000090 1441
000091 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
000092 1414
000093 2241
000094 0814
000095 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
000096 5101
000097 0609
000098 4932
000099 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
00009a 7e3e
00009b 1111
00009c 7e11
00009d 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
00009e 4949
00009f 3e36
0000a0 4141
0000a1 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
0000a2 417f
0000a3 2241
0000a4 7f1c
0000a5 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
0000a6 4149
0000a7 097f
0000a8 0109
0000a9 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
0000aa 4141
0000ab 3251
0000ac 087f
0000ad 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
0000ae 007f
0000af 7f41
0000b0 0041
0000b1 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
0000b2 3f41
0000b3 7f01
0000b4 1408
0000b5 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
0000b6 407f
0000b7 4040
0000b8 7f40
0000b9 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
0000ba 7f02
0000bb 047f
0000bc 1008
0000bd 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
0000be 4141
0000bf 3e41
0000c0 097f
0000c1 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
0000c2 3e06
0000c3 5141
0000c4 5e21
0000c5 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
0000c6 2919
0000c7 4646
0000c8 4949
0000c9 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
0000ca 0101
0000cb 017f
0000cc 3f01
0000cd 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
0000ce 3f40
0000cf 201f
0000d0 2040
0000d1 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
0000d2 1820
0000d3 7f20
0000d4 1463
0000d5 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000d6 0363
0000d7 7804
0000d8 0304
0000d9 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000da 4549
0000db 0043
0000dc 7f00
0000dd 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000de 0402
0000df 1008
0000e0 4120
0000e1 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000e2 0000
0000e3 0204
0000e4 0201
0000e5 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000e6 4040
0000e7 4040
0000e8 0100
0000e9 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000ea 2000
0000eb 5454
0000ec 7854
0000ed 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000ee 4444
0000ef 3838
0000f0 4444
0000f1 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000f2 4438
0000f3 4844
0000f4 387f
0000f5 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000f6 1854
0000f7 7e08
0000f8 0109
0000f9 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000fa 5414
0000fb 3c54
0000fc 087f
0000fd 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000fe 0078
0000ff 7d44
000100 0040
000101 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
000102 3d44
000103 0000
000104 107f
000105 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
000106 4100
000107 407f
000108 7c00
000109 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
00010a 7804
00010b 087c
00010c 0404
00010d 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
00010e 4444
00010f 3844
000110 147c
000111 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
000112 0808
000113 1414
000114 7c18
000115 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
000116 0404
000117 4808
000118 5454
000119 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
00011a 3f04
00011b 4044
00011c 3c20
00011d 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
00011e 7c20
00011f 201c
000120 2040
000121 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
000122 3040
000123 3c40
000124 2844
000125 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
000126 0c44
000127 5050
000128 3c50
000129 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
00012a 4c54
00012b 0044
00012c 3608
00012d 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
00012e 0000
00012f 007f
000130 0000
000131 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
000132 0008
000133 0102
000134 0402
000135 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
000136 4141
000137 7f41      	.DB  0x41,0x41,0x41,0x7F
                 __glcd_mask:
000138 0100
000139 0703
00013a 1f0f
00013b 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_10\Debug\List\bai1.asm(1204): warning: .cseg .db misalignment - padding zero byte
00013c 00ff      	.DB  0xFF
                 _tbl10_G103:
00013d 2710
00013e 03e8
00013f 0064
000140 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000141 0001      	.DB  0x1,0x0
                 _tbl16_G103:
000142 1000
000143 0100
000144 0010
000145 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000146 0000
000147 0000      	.DB  0x0,0x0,0x0,0x0
000148 0000      	.DB  0x0,0x0
                 
                 _0x3:
000149 0000
00014a 0001
00014b 0002
00014c 0003      	.DB  0x0,0x0,0x1,0x0,0x2,0x0,0x3,0x0
00014d 0004
00014e 0005
00014f 0006
000150 0007      	.DB  0x4,0x0,0x5,0x0,0x6,0x0,0x7,0x0
D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_10\Debug\List\bai1.asm(1219): warning: .cseg .db misalignment - padding zero byte
000151 0008      	.DB  0x8
                 _0x0:
000152 684e
000153 7061
000154 7020
000155 7361      	.DB  0x4E,0x68,0x61,0x70,0x20,0x70,0x61,0x73
000156 0073
000157 684e
000158 7061
000159 7020      	.DB  0x73,0x0,0x4E,0x68,0x61,0x70,0x20,0x70
00015a 7361
00015b 3f73
00015c 7000
00015d 7361      	.DB  0x61,0x73,0x73,0x3F,0x0,0x70,0x61,0x73
00015e 2073
00015f 6173
000160 3f69
000161 7000      	.DB  0x73,0x20,0x73,0x61,0x69,0x3F,0x0,0x70
000162 7361
000163 2073
000164 7564
000165 676e      	.DB  0x61,0x73,0x73,0x20,0x64,0x75,0x6E,0x67
D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_10\Debug\List\bai1.asm(1226): warning: .cseg .db misalignment - padding zero byte
000166 0000      	.DB  0x0
                 _0x2080060:
D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_10\Debug\List\bai1.asm(1228): warning: .cseg .db misalignment - padding zero byte
000167 0001      	.DB  0x1
                 _0x2080000:
000168 4e2d
000169 4e41
00016a 4900
00016b 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_10\Debug\List\bai1.asm(1231): warning: .cseg .db misalignment - padding zero byte
00016c 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00016d 0006      	.DW  0x06
00016e 0004      	.DW  0x04
00016f 028c      	.DW  __REG_VARS*2
                 
000170 0011      	.DW  0x11
000171 055c      	.DW  _keypad
000172 0292      	.DW  _0x3*2
                 
000173 000a      	.DW  0x0A
000174 0500      	.DW  _0x2A
000175 02a4      	.DW  _0x0*2
                 
000176 000b      	.DW  0x0B
000177 050a      	.DW  _0x2A+10
000178 02ae      	.DW  _0x0*2+10
                 
000179 000b      	.DW  0x0B
00017a 0515      	.DW  _0x2A+21
00017b 02ae      	.DW  _0x0*2+10
                 
00017c 000b      	.DW  0x0B
00017d 0520      	.DW  _0x2A+32
00017e 02ae      	.DW  _0x0*2+10
                 
00017f 000a      	.DW  0x0A
000180 052b      	.DW  _0x2A+43
000181 02b9      	.DW  _0x0*2+21
                 
000182 000a      	.DW  0x0A
000183 0535      	.DW  _0x2A+53
000184 02c3      	.DW  _0x0*2+31
                 
000185 0001      	.DW  0x01
000186 0772      	.DW  __seed_G104
000187 02ce      	.DW  _0x2080060*2
                 
                 _0xFFFFFFFF:
000188 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000189 94f8      	CLI
00018a 27ee      	CLR  R30
00018b bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00018c e0f1      	LDI  R31,1
00018d bff5      	OUT  MCUCR,R31
00018e bfe5      	OUT  MCUCR,R30
00018f 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
000191 e08d      	LDI  R24,(14-2)+1
000192 e0a2      	LDI  R26,2
000193 27bb      	CLR  R27
                 __CLEAR_REG:
000194 93ed      	ST   X+,R30
000195 958a      	DEC  R24
000196 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000197 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000198 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000199 e0a0      	LDI  R26,LOW(__SRAM_START)
00019a e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
00019b 93ed      	ST   X+,R30
00019c 9701      	SBIW R24,1
00019d f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00019e edea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00019f e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0001a0 9185      	LPM  R24,Z+
0001a1 9195      	LPM  R25,Z+
0001a2 9700      	SBIW R24,0
0001a3 f061      	BREQ __GLOBAL_INI_END
0001a4 91a5      	LPM  R26,Z+
0001a5 91b5      	LPM  R27,Z+
0001a6 9005      	LPM  R0,Z+
0001a7 9015      	LPM  R1,Z+
0001a8 01bf      	MOVW R22,R30
0001a9 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0001aa 9005      	LPM  R0,Z+
0001ab 920d      	ST   X+,R0
0001ac 9701      	SBIW R24,1
0001ad f7e1      	BRNE __GLOBAL_INI_LOOP
0001ae 01fb      	MOVW R30,R22
0001af cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0001b0 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0001b1 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0001b2 bfed      	OUT  SPL,R30
0001b3 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0001b4 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0001b5 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0001b6 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0001b7 940c 0302 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;/*
                 ; * bai1.c
                 ; *
                 ; * Created: 12/8/2022 9:06:36 PM
                 ; * Author: Who
                 ; */
                 ;
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <glcd.h>
                 ;#include <font5x7.h>
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <eeprom.h>
                 ;
                 ;// macro for easier usage
                 ;#define read_eeprom_word(address) eeprom_read_word ((const unsigned int*)address)
                 ;#define write_eeprom_word(address,value) eeprom_write_word ((unsigned int*)address,(unsigned int)value)
                 ;#define update_eeprom_word(address,value) eeprom_update_word ((unsigned int*)address,(unsigned int)value)
                 ;unsigned int EEMEM my_eeprom;
                 ;
                 ;int keypad[3][3] = {0,1,2,3,4,5,6,7,8};
                 
                 	.DSEG
                 ;char tmp[10];
                 ;int miss = 0;
                 ;int counter = 0;
                 ;int dem_sai = 0;
                 ;
                 ;// Timer 0 overflow interrupt service routine with 1 ms
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0000 001E {
                 
                 	.CSEG
                 _timer0_ovf_isr:
                 ; .FSTART _timer0_ovf_isr
0001b9 920a      	ST   -Y,R0
0001ba 93ea      	ST   -Y,R30
0001bb 93fa      	ST   -Y,R31
0001bc b7ef      	IN   R30,SREG
0001bd 93ea      	ST   -Y,R30
                 ; 0000 001F     TCNT0=0x06;
0001be e0e6      	LDI  R30,LOW(6)
0001bf bfe2      	OUT  0x32,R30
                 ; 0000 0020     // Place your code here
                 ; 0000 0021     if (miss >= 3) {
0001c0 e0e3      	LDI  R30,LOW(3)
0001c1 e0f0      	LDI  R31,HIGH(3)
0001c2 164e      	CP   R4,R30
0001c3 065f      	CPC  R5,R31
0001c4 f0bc      	BRLT _0x4
                 ; 0000 0022         if (counter == 2000)
0001c5 ede0      	LDI  R30,LOW(2000)
0001c6 e0f7      	LDI  R31,HIGH(2000)
0001c7 15e6      	CP   R30,R6
0001c8 05f7      	CPC  R31,R7
0001c9 f411      	BRNE _0x5
                 ; 0000 0023             counter  = 0;
0001ca 2466      	CLR  R6
0001cb 2477      	CLR  R7
                 ; 0000 0024 
                 ; 0000 0025         if (counter == 0) {
                 _0x5:
0001cc 2c06      	MOV  R0,R6
0001cd 2807      	OR   R0,R7
0001ce f411      	BRNE _0x6
                 ; 0000 0026             PORTD.4 = 0;
0001cf 9894      	CBI  0x12,4
                 ; 0000 0027             PORTD.5 = 1;
0001d0 9a95      	SBI  0x12,5
                 ; 0000 0028         }
                 ; 0000 0029 
                 ; 0000 002A         if (counter == 1000) {
                 _0x6:
0001d1 eee8      	LDI  R30,LOW(1000)
0001d2 e0f3      	LDI  R31,HIGH(1000)
0001d3 15e6      	CP   R30,R6
0001d4 05f7      	CPC  R31,R7
0001d5 f411      	BRNE _0xB
                 ; 0000 002B             PORTD.5 = 0;
0001d6 9895      	CBI  0x12,5
                 ; 0000 002C             PORTD.4 = 1;
0001d7 9a94      	SBI  0x12,4
                 ; 0000 002D         }
                 ; 0000 002E         counter++;
                 _0xB:
0001d8 01f3      	MOVW R30,R6
0001d9 9631      	ADIW R30,1
0001da 013f      	MOVW R6,R30
                 ; 0000 002F     }
                 ; 0000 0030     else {
0001db c002      	RJMP _0x10
                 _0x4:
                 ; 0000 0031         PORTD.4 = 0;
0001dc 9894      	CBI  0x12,4
                 ; 0000 0032         PORTD.5 = 0;
0001dd 9895      	CBI  0x12,5
                 ; 0000 0033     }
                 _0x10:
                 ; 0000 0034 }
0001de 91e9      	LD   R30,Y+
0001df bfef      	OUT  SREG,R30
0001e0 91f9      	LD   R31,Y+
0001e1 91e9      	LD   R30,Y+
0001e2 9009      	LD   R0,Y+
0001e3 9518      	RETI
                 ; .FEND
                 ;
                 ;
                 ;// "inherited" from tai lieu thuc hanh
                 ;int read() {
                 ; 0000 0038 int read() {
                 _read:
                 ; .FSTART _read
                 ; 0000 0039     char a, i, j;
                 ; 0000 003A     for(j = 0; j < 3; j++ ){
0001e4 940e 0967 	CALL __SAVELOCR4
                 ;	a -> R17
                 ;	i -> R16
                 ;	j -> R19
0001e6 e030      	LDI  R19,LOW(0)
                 _0x16:
0001e7 3033      	CPI  R19,3
0001e8 f5a0      	BRSH _0x17
                 ; 0000 003B         if (j == 0) PORTF = 0b11111101;
0001e9 3030      	CPI  R19,0
0001ea f419      	BRNE _0x18
0001eb efed      	LDI  R30,LOW(253)
0001ec 93e0 0062 	STS  98,R30
                 ; 0000 003C         if (j == 1) PORTF = 0b11110111;
                 _0x18:
0001ee 3031      	CPI  R19,1
0001ef f419      	BRNE _0x19
0001f0 efe7      	LDI  R30,LOW(247)
0001f1 93e0 0062 	STS  98,R30
                 ; 0000 003D         if (j == 2) PORTF = 0b11011111;
                 _0x19:
0001f3 3032      	CPI  R19,2
0001f4 f419      	BRNE _0x1A
0001f5 edef      	LDI  R30,LOW(223)
0001f6 93e0 0062 	STS  98,R30
                 ; 0000 003E         for(i = 0; i < 3; i++){
                 _0x1A:
0001f8 e000      	LDI  R16,LOW(0)
                 _0x1C:
0001f9 3003      	CPI  R16,3
0001fa f500      	BRSH _0x1D
                 ; 0000 003F             if (i == 0){
0001fb 3000      	CPI  R16,0
0001fc f441      	BRNE _0x1E
                 ; 0000 0040                 a = PINF&0x04;
0001fd b1e0      	IN   R30,0x0
0001fe 70e4      	ANDI R30,LOW(0x4)
0001ff 2f1e      	MOV  R17,R30
                 ; 0000 0041                 if(a != 0x04)
000200 3014      	CPI  R17,4
000201 f019      	BREQ _0x1F
                 ; 0000 0042                     return keypad[i][j];
000202 940e 0869 	CALL SUBOPT_0x0
000204 c031      	RJMP _0x214000B
                 ; 0000 0043             }
                 _0x1F:
                 ; 0000 0044             if (i == 1){
                 _0x1E:
000205 3001      	CPI  R16,1
000206 f441      	BRNE _0x20
                 ; 0000 0045                 a = PINF&0x10;
000207 b1e0      	IN   R30,0x0
000208 71e0      	ANDI R30,LOW(0x10)
000209 2f1e      	MOV  R17,R30
                 ; 0000 0046                 if (a != 0x10)
00020a 3110      	CPI  R17,16
00020b f019      	BREQ _0x21
                 ; 0000 0047                     return keypad[i][j];
00020c 940e 0869 	CALL SUBOPT_0x0
00020e c027      	RJMP _0x214000B
                 ; 0000 0048             }
                 _0x21:
                 ; 0000 0049             if (i == 2){
                 _0x20:
00020f 3002      	CPI  R16,2
000210 f441      	BRNE _0x22
                 ; 0000 004A                 a = PINF&0x01;
000211 b1e0      	IN   R30,0x0
000212 70e1      	ANDI R30,LOW(0x1)
000213 2f1e      	MOV  R17,R30
                 ; 0000 004B                 if (a != 0x01)
000214 3011      	CPI  R17,1
000215 f019      	BREQ _0x23
                 ; 0000 004C                     return keypad[i][j];
000216 940e 0869 	CALL SUBOPT_0x0
000218 c01d      	RJMP _0x214000B
                 ; 0000 004D             }
                 _0x23:
                 ; 0000 004E         }
                 _0x22:
000219 5f0f      	SUBI R16,-1
00021a cfde      	RJMP _0x1C
                 _0x1D:
                 ; 0000 004F     }
00021b 5f3f      	SUBI R19,-1
00021c cfca      	RJMP _0x16
                 _0x17:
                 ; 0000 0050     return -1;
00021d efef      	LDI  R30,LOW(65535)
00021e efff      	LDI  R31,HIGH(65535)
00021f 940e 096e 	CALL __LOADLOCR4
000221 c014      	RJMP _0x214000B
                 ; 0000 0051 }
                 ; .FEND
                 ;
                 ;void mainScreen(unsigned char * c, int pass) {
                 ; 0000 0053 void mainScreen(unsigned char * c, int pass) {
                 _mainScreen:
                 ; .FSTART _mainScreen
                 ; 0000 0054     glcd_clear();
000222 940e 087a 	CALL SUBOPT_0x1
                 ;	*c -> Y+2
                 ;	pass -> Y+0
                 ; 0000 0055     glcd_outtextxy(15, 20, c);
000224 81ac      	LDD  R26,Y+4
000225 81bd      	LDD  R27,Y+4+1
000226 940e 0798 	CALL _glcd_outtextxy
                 ; 0000 0056     if (pass != -1) {
000228 81a8      	LD   R26,Y
000229 81b9      	LDD  R27,Y+1
00022a 3faf      	CPI  R26,LOW(0xFFFF)
00022b efef      	LDI  R30,HIGH(0xFFFF)
00022c 07be      	CPC  R27,R30
00022d f041      	BREQ _0x24
                 ; 0000 0057         itoa(pass, tmp);
00022e 81e8      	LD   R30,Y
00022f 81f9      	LDD  R31,Y+1
000230 940e 0883 	CALL SUBOPT_0x2
                 ; 0000 0058         glcd_outtextxy(30, 30, tmp);
000232 e6ae      	LDI  R26,LOW(_tmp)
000233 e0b5      	LDI  R27,HIGH(_tmp)
000234 940e 0798 	CALL _glcd_outtextxy
                 ; 0000 0059     }
                 ; 0000 005A }
                 _0x24:
                 _0x214000B:
000236 9624      	ADIW R28,4
000237 9508      	RET
                 ; .FEND
                 ;
                 ;void mainScreen2(unsigned char * c, char pass[], int pos) {
                 ; 0000 005C void mainScreen2(unsigned char * c, char pass[], int pos) {
                 _mainScreen2:
                 ; .FSTART _mainScreen2
                 ; 0000 005D     glcd_clear();
000238 940e 087a 	CALL SUBOPT_0x1
                 ;	*c -> Y+4
                 ;	pass -> Y+2
                 ;	pos -> Y+0
                 ; 0000 005E     glcd_outtextxy(15, 20, c);
00023a 81ae      	LDD  R26,Y+6
00023b 81bf      	LDD  R27,Y+6+1
00023c 940e 0798 	CALL _glcd_outtextxy
                 ; 0000 005F     if (pass != -1) {
00023e 81aa      	LDD  R26,Y+2
00023f 81bb      	LDD  R27,Y+2+1
000240 3faf      	CPI  R26,LOW(0xFFFF)
000241 efef      	LDI  R30,HIGH(0xFFFF)
000242 07be      	CPC  R27,R30
000243 f041      	BREQ _0x25
                 ; 0000 0060         glcd_outtextxy(pos, 30, pass);
000244 81e8      	LD   R30,Y
000245 93ea      	ST   -Y,R30
000246 e1ee      	LDI  R30,LOW(30)
000247 93ea      	ST   -Y,R30
000248 81ac      	LDD  R26,Y+4
000249 81bd      	LDD  R27,Y+4+1
00024a 940e 0798 	CALL _glcd_outtextxy
                 ; 0000 0061     }
                 ; 0000 0062 }
                 _0x25:
00024c 940c 04a8 	JMP  _0x2140009
                 ; .FEND
                 ;
                 ;void mainScreen3(unsigned char * c, int pass, int pos, char pass_ano[]) {
                 ; 0000 0064 void mainScreen3(unsigned char * c, int pass, int pos, char pass_ano[]) {
                 _mainScreen3:
                 ; .FSTART _mainScreen3
                 ; 0000 0065     glcd_clear();
00024e 940e 087a 	CALL SUBOPT_0x1
                 ;	*c -> Y+6
                 ;	pass -> Y+4
                 ;	pos -> Y+2
                 ;	pass_ano -> Y+0
                 ; 0000 0066     glcd_outtextxy(15, 20, c);
000250 85a8      	LDD  R26,Y+8
000251 85b9      	LDD  R27,Y+8+1
000252 940e 0798 	CALL _glcd_outtextxy
                 ; 0000 0067     if (pass != -1) {
000254 81ac      	LDD  R26,Y+4
000255 81bd      	LDD  R27,Y+4+1
000256 3faf      	CPI  R26,LOW(0xFFFF)
000257 efef      	LDI  R30,HIGH(0xFFFF)
000258 07be      	CPC  R27,R30
000259 f081      	BREQ _0x26
                 ; 0000 0068         itoa(pass, tmp);
00025a 81ec      	LDD  R30,Y+4
00025b 81fd      	LDD  R31,Y+4+1
00025c 940e 0883 	CALL SUBOPT_0x2
                 ; 0000 0069         glcd_outtextxy(30, 30, pass_ano);
00025e 81aa      	LDD  R26,Y+2
00025f 81bb      	LDD  R27,Y+2+1
000260 940e 0798 	CALL _glcd_outtextxy
                 ; 0000 006A         glcd_outtextxy(pos, 30, tmp);
000262 81ea      	LDD  R30,Y+2
000263 93ea      	ST   -Y,R30
000264 e1ee      	LDI  R30,LOW(30)
000265 93ea      	ST   -Y,R30
000266 e6ae      	LDI  R26,LOW(_tmp)
000267 e0b5      	LDI  R27,HIGH(_tmp)
000268 940e 0798 	CALL _glcd_outtextxy
                 ; 0000 006B     }
                 ; 0000 006C }
                 _0x26:
00026a 940c 0796 	JMP  _0x2140006
                 ; .FEND
                 ;
                 ;void exe() {
                 ; 0000 006E void exe() {
                 _exe:
                 ; .FSTART _exe
                 ; 0000 006F     //char pass_ano[3];
                 ; 0000 0070     unsigned int input_times = 0, input = -1, pass = 0, require = 108, reader;
                 ; 0000 0071 //    reader = read_eeprom_word(&my_eeprom);
                 ; 0000 0072 //    if (reader >= 100 && reader <= 999)
                 ; 0000 0073 //        require = reader;
                 ; 0000 0074     dem_sai = 0;
00026c 9724      	SBIW R28,4
00026d e6ec      	LDI  R30,LOW(108)
00026e 83ea      	STD  Y+2,R30
00026f e0e0      	LDI  R30,LOW(0)
000270 83eb      	STD  Y+3,R30
000271 940e 0965 	CALL __SAVELOCR6
                 ;	input_times -> R16,R17
                 ;	input -> R18,R19
                 ;	pass -> R20,R21
                 ;	require -> Y+8
                 ;	reader -> Y+6
000273 940e 088d 	CALL SUBOPT_0x3
000275 2488      	CLR  R8
000276 2499      	CLR  R9
                 ; 0000 0075     while (pass != require) {
                 _0x27:
000277 85e8      	LDD  R30,Y+8
000278 85f9      	LDD  R31,Y+8+1
000279 17e4      	CP   R30,R20
00027a 07f5      	CPC  R31,R21
00027b f409      	BRNE PC+2
00027c c071      	RJMP _0x29
                 ; 0000 0076         char pass_ano[3];
                 ; 0000 0077         pass_ano[0]=' ';
00027d 9723      	SBIW R28,3
                 ;	require -> Y+11
                 ;	reader -> Y+9
                 ;	pass_ano -> Y+0
00027e e2e0      	LDI  R30,LOW(32)
00027f 83e8      	ST   Y,R30
                 ; 0000 0078         pass_ano[1]=' ';
000280 83e9      	STD  Y+1,R30
                 ; 0000 0079         pass_ano[2]=' ';
000281 83ea      	STD  Y+2,R30
                 ; 0000 007A         mainScreen("Nhap pass", -1);
                +
000282 e0e0     +LDI R30 , LOW ( _0x2A + ( 0 ) )
000283 e0f5     +LDI R31 , HIGH ( _0x2A + ( 0 ) )
                 	__POINTW1MN _0x2A,0
000284 93fa      	ST   -Y,R31
000285 93ea      	ST   -Y,R30
000286 efaf      	LDI  R26,LOW(65535)
000287 efbf      	LDI  R27,HIGH(65535)
000288 df99      	RCALL _mainScreen
                 ; 0000 007B         while (input_times != 3) {
                 _0x2B:
000289 e0e3      	LDI  R30,LOW(3)
00028a e0f0      	LDI  R31,HIGH(3)
00028b 17e0      	CP   R30,R16
00028c 07f1      	CPC  R31,R17
00028d f1e9      	BREQ _0x2D
                 ; 0000 007C             input = read();
00028e df55      	RCALL _read
00028f 019f      	MOVW R18,R30
                 ; 0000 007D             delay_ms(200);
000290 eca8      	LDI  R26,LOW(200)
000291 e0b0      	LDI  R27,0
000292 940e 0919 	CALL _delay_ms
                 ; 0000 007E             if (input != -1) {
000294 efef      	LDI  R30,LOW(65535)
000295 efff      	LDI  R31,HIGH(65535)
000296 17e2      	CP   R30,R18
000297 07f3      	CPC  R31,R19
000298 f189      	BREQ _0x2E
                 ; 0000 007F                 input_times++;
                +
000299 5f0f     +SUBI R16 , LOW ( - 1 )
00029a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 0080                 pass = pass * 10 + input;
                +
00029b e0aa     +LDI R26 , 10
00029c 9fa4     +MUL R26 , R20
00029d 01f0     +MOVW R30 , R0
00029e 9fa5     +MUL R26 , R21
00029f 0df0     +ADD R31 , R0
                 	__MULBNWRU 20,21,10
0002a0 0fe2      	ADD  R30,R18
0002a1 1ff3      	ADC  R31,R19
0002a2 01af      	MOVW R20,R30
                 ; 0000 0081                 mainScreen2("Nhap pass?", pass_ano, 30);
                +
0002a3 e0ea     +LDI R30 , LOW ( _0x2A + ( 10 ) )
0002a4 e0f5     +LDI R31 , HIGH ( _0x2A + ( 10 ) )
                 	__POINTW1MN _0x2A,10
0002a5 940e 0894 	CALL SUBOPT_0x4
                 ; 0000 0082                 mainScreen3("Nhap pass?", input, 30+(input_times-1)*4+input_times, pass_ano);
                +
0002a7 e1e5     +LDI R30 , LOW ( _0x2A + ( 21 ) )
0002a8 e0f5     +LDI R31 , HIGH ( _0x2A + ( 21 ) )
                 	__POINTW1MN _0x2A,21
0002a9 93fa      	ST   -Y,R31
0002aa 93ea      	ST   -Y,R30
0002ab 933a      	ST   -Y,R19
0002ac 932a      	ST   -Y,R18
0002ad 01f8      	MOVW R30,R16
0002ae 9731      	SBIW R30,1
0002af 940e 0933 	CALL __LSLW2
0002b1 967e      	ADIW R30,30
0002b2 0fe0      	ADD  R30,R16
0002b3 1ff1      	ADC  R31,R17
0002b4 93fa      	ST   -Y,R31
0002b5 93ea      	ST   -Y,R30
0002b6 01de      	MOVW R26,R28
0002b7 9616      	ADIW R26,6
0002b8 df95      	RCALL _mainScreen3
                 ; 0000 0083                 pass_ano[input_times-1] = '*';
0002b9 01f8      	MOVW R30,R16
0002ba 9731      	SBIW R30,1
0002bb 01de      	MOVW R26,R28
0002bc 0fae      	ADD  R26,R30
0002bd 1fbf      	ADC  R27,R31
0002be e2ea      	LDI  R30,LOW(42)
0002bf 93ec      	ST   X,R30
                 ; 0000 0084                 delay_ms(500);
0002c0 efa4      	LDI  R26,LOW(500)
0002c1 e0b1      	LDI  R27,HIGH(500)
0002c2 940e 0919 	CALL _delay_ms
                 ; 0000 0085                 mainScreen2("Nhap pass?", pass_ano, 30);
                +
0002c4 e2e0     +LDI R30 , LOW ( _0x2A + ( 32 ) )
0002c5 e0f5     +LDI R31 , HIGH ( _0x2A + ( 32 ) )
                 	__POINTW1MN _0x2A,32
0002c6 940e 0894 	CALL SUBOPT_0x4
                 ; 0000 0086                 input = -1;
                +
0002c8 ef2f     +LDI R18 , LOW ( - 1 )
0002c9 ef3f     +LDI R19 , HIGH ( - 1 )
                 	__GETWRN 18,19,-1
                 ; 0000 0087             }
                 ; 0000 0088         }
                 _0x2E:
0002ca cfbe      	RJMP _0x2B
                 _0x2D:
                 ; 0000 0089 
                 ; 0000 008A         if (pass != require) {
0002cb 85eb      	LDD  R30,Y+11
0002cc 85fc      	LDD  R31,Y+11+1
0002cd 17e4      	CP   R30,R20
0002ce 07f5      	CPC  R31,R21
0002cf f091      	BREQ _0x2F
                 ; 0000 008B             glcd_clear();
0002d0 d182      	RCALL _glcd_clear
                 ; 0000 008C             glcd_outtextxy(15, 20, "pass sai?");
0002d1 e0ef      	LDI  R30,LOW(15)
0002d2 93ea      	ST   -Y,R30
0002d3 e1e4      	LDI  R30,LOW(20)
0002d4 93ea      	ST   -Y,R30
                +
0002d5 e2ab     +LDI R26 , LOW ( _0x2A + ( 43 ) )
0002d6 e0b5     +LDI R27 , HIGH ( _0x2A + ( 43 ) )
                 	__POINTW2MN _0x2A,43
0002d7 940e 0798 	CALL _glcd_outtextxy
                 ; 0000 008D             input_times = 0;
0002d9 940e 088d 	CALL SUBOPT_0x3
                 ; 0000 008E             input = -1;
                 ; 0000 008F             pass = 0;
                 ; 0000 0090             delay_ms(800);
0002db e2a0      	LDI  R26,LOW(800)
0002dc e0b3      	LDI  R27,HIGH(800)
0002dd 940e 0919 	CALL _delay_ms
                 ; 0000 0091             dem_sai++;
0002df 01f4      	MOVW R30,R8
0002e0 9631      	ADIW R30,1
0002e1 014f      	MOVW R8,R30
                 ; 0000 0092         }
                 ; 0000 0093         miss++;
                 _0x2F:
0002e2 01f2      	MOVW R30,R4
0002e3 9631      	ADIW R30,1
0002e4 012f      	MOVW R4,R30
                 ; 0000 0094         // turn on role 1
                 ; 0000 0095         if (miss == 3) {
0002e5 e0e3      	LDI  R30,LOW(3)
0002e6 e0f0      	LDI  R31,HIGH(3)
0002e7 15e4      	CP   R30,R4
0002e8 05f5      	CPC  R31,R5
0002e9 f411      	BRNE _0x30
                 ; 0000 0096             DDRC.3 = 1;
0002ea 9aa3      	SBI  0x14,3
                 ; 0000 0097             PORTC.3 = 1;
0002eb 9aab      	SBI  0x15,3
                 ; 0000 0098         }
                 ; 0000 0099     }
                 _0x30:
0002ec 9623      	ADIW R28,3
0002ed cf89      	RJMP _0x27
                 _0x29:
                 ; 0000 009A 
                 ; 0000 009B     miss = 0;
0002ee 2444      	CLR  R4
0002ef 2455      	CLR  R5
                 ; 0000 009C     delay_ms(500);
0002f0 efa4      	LDI  R26,LOW(500)
0002f1 e0b1      	LDI  R27,HIGH(500)
0002f2 940e 0919 	CALL _delay_ms
                 ; 0000 009D     glcd_clear();
0002f4 d15e      	RCALL _glcd_clear
                 ; 0000 009E     PORTC.3 = 0;
0002f5 98ab      	CBI  0x15,3
                 ; 0000 009F     glcd_outtextxy(15, 20, "pass dung");
0002f6 e0ef      	LDI  R30,LOW(15)
0002f7 93ea      	ST   -Y,R30
0002f8 e1e4      	LDI  R30,LOW(20)
0002f9 93ea      	ST   -Y,R30
                +
0002fa e3a5     +LDI R26 , LOW ( _0x2A + ( 53 ) )
0002fb e0b5     +LDI R27 , HIGH ( _0x2A + ( 53 ) )
                 	__POINTW2MN _0x2A,53
0002fc 940e 0798 	CALL _glcd_outtextxy
                 ; 0000 00A0 }
0002fe 940e 096c 	CALL __LOADLOCR6
000300 962a      	ADIW R28,10
000301 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x2A:
000500           	.BYTE 0x3F
                 ;
                 ;void main(void)
                 ; 0000 00A3 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 00A4     unsigned int pass = 0, input, input_times = 0;
                 ; 0000 00A5     //init GLCD
                 ; 0000 00A6     GLCDINIT_t glcd_init_data;
                 ; 0000 00A7     glcd_init_data.font=font5x7;
000302 9728      	SBIW R28,8
                 ;	pass -> R16,R17
                 ;	input -> R18,R19
                 ;	input_times -> R20,R21
                 ;	glcd_init_data -> Y+0
                +
000303 e000     +LDI R16 , LOW ( 0 )
000304 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
000305 e040     +LDI R20 , LOW ( 0 )
000306 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
000307 e8ec      	LDI  R30,LOW(_font5x7*2)
000308 e0f0      	LDI  R31,HIGH(_font5x7*2)
000309 83e8      	ST   Y,R30
00030a 83f9      	STD  Y+1,R31
                 ; 0000 00A8     glcd_init_data.temp_coef=140;
00030b 81ee      	LDD  R30,Y+6
00030c 7fec      	ANDI R30,LOW(0xFC)
00030d 83ee      	STD  Y+6,R30
                 ; 0000 00A9     glcd_init_data.bias=4;
00030e 7ee3      	ANDI R30,LOW(0xE3)
00030f 61e0      	ORI  R30,0x10
000310 83ee      	STD  Y+6,R30
                 ; 0000 00AA     glcd_init_data.vlcd=66;
000311 81ef      	LDD  R30,Y+7
000312 78e0      	ANDI R30,LOW(0x80)
000313 64e2      	ORI  R30,LOW(0x42)
000314 83ef      	STD  Y+7,R30
                 ; 0000 00AB     glcd_init(&glcd_init_data);
000315 01de      	MOVW R26,R28
000316 d095      	RCALL _glcd_init
                 ; 0000 00AC 
                 ; 0000 00AD     DDRF = 0b11101010;
000317 eeea      	LDI  R30,LOW(234)
000318 93e0 0061 	STS  97,R30
                 ; 0000 00AE     DDRD.5 = 1;
00031a 9a8d      	SBI  0x11,5
                 ; 0000 00AF     DDRD.4 = 1;
00031b 9a8c      	SBI  0x11,4
                 ; 0000 00B0 
                 ; 0000 00B1     //init Timer/Counter 0 with time period = 1 ms
                 ; 0000 00B2     ASSR=0<<AS0;
00031c e0e0      	LDI  R30,LOW(0)
00031d bfe0      	OUT  0x30,R30
                 ; 0000 00B3     TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (1<<CS01) | (1<<CS00);
00031e e0e3      	LDI  R30,LOW(3)
00031f bfe3      	OUT  0x33,R30
                 ; 0000 00B4     TCNT0=0x06;
000320 e0e6      	LDI  R30,LOW(6)
000321 bfe2      	OUT  0x32,R30
                 ; 0000 00B5     OCR0=0x00;
000322 e0e0      	LDI  R30,LOW(0)
000323 bfe1      	OUT  0x31,R30
                 ; 0000 00B6     TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
000324 e0e1      	LDI  R30,LOW(1)
000325 bfe7      	OUT  0x37,R30
                 ; 0000 00B7     ETIMSK=(0<<TICIE3) | (0<<OCIE3A) | (0<<OCIE3B) | (0<<TOIE3) | (0<<OCIE3C) | (0<<OCIE1C);
000326 e0e0      	LDI  R30,LOW(0)
000327 93e0 007d 	STS  125,R30
                 ; 0000 00B8     #asm("sei")
000329 9478      	sei
                 ; 0000 00B9     exe();
00032a df41      	RCALL _exe
                 ; 0000 00BA     delay_ms(1500);
00032b edac      	LDI  R26,LOW(1500)
00032c e0b5      	LDI  R27,HIGH(1500)
00032d 940e 0919 	CALL _delay_ms
                 ; 0000 00BB 
                 ; 0000 00BC     // mainScreen("NEW PASS?", -1);
                 ; 0000 00BD     // while (input_times != 3) {
                 ; 0000 00BE     //         input = read();
                 ; 0000 00BF     //         delay_ms(200);
                 ; 0000 00C0     //         if (input != -1) {
                 ; 0000 00C1     //             input_times++;
                 ; 0000 00C2     //             pass = pass * 10 + input;
                 ; 0000 00C3     //             mainScreen("NEW PASS?", pass);
                 ; 0000 00C4     //             input = -1;
                 ; 0000 00C5     //         }
                 ; 0000 00C6     // }
                 ; 0000 00C7     // update_eeprom_word(&my_eeprom, pass);
                 ; 0000 00C8     // delay_ms(800);
                 ; 0000 00C9     // mainScreen("SAVED", -1);
                 ; 0000 00CA 
                 ; 0000 00CB     while (1)
                 _0x3B:
                 ; 0000 00CC     {
                 ; 0000 00CD 
                 ; 0000 00CE 
                 ; 0000 00CF     }
00032f cfff      	RJMP _0x3B
                 ; 0000 00D0 }
                 _0x3E:
000330 cfff      	RJMP _0x3E
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _pcd8544_delay_G100:
                 ; .FSTART _pcd8544_delay_G100
000331 9508      	RET
                 ; .FEND
                 _pcd8544_wrbus_G100:
                 ; .FSTART _pcd8544_wrbus_G100
000332 93aa      	ST   -Y,R26
000333 931a      	ST   -Y,R17
000334 91e0 0065 	LDS  R30,101
000336 7eef      	ANDI R30,0xEF
000337 93e0 0065 	STS  101,R30
000339 e018      	LDI  R17,LOW(8)
                 _0x2000004:
00033a dff6      	RCALL _pcd8544_delay_G100
00033b 81e9      	LDD  R30,Y+1
00033c 78e0      	ANDI R30,LOW(0x80)
00033d f021      	BREQ _0x2000006
00033e 91e0 0065 	LDS  R30,101
000340 60e2      	ORI  R30,2
000341 c003      	RJMP _0x20000A0
                 _0x2000006:
000342 91e0 0065 	LDS  R30,101
000344 7fed      	ANDI R30,0xFD
                 _0x20000A0:
000345 93e0 0065 	STS  101,R30
000347 81e9      	LDD  R30,Y+1
000348 0fee      	LSL  R30
000349 83e9      	STD  Y+1,R30
00034a dfe6      	RCALL _pcd8544_delay_G100
00034b 91e0 0065 	LDS  R30,101
00034d 60e4      	ORI  R30,4
00034e 93e0 0065 	STS  101,R30
000350 dfe0      	RCALL _pcd8544_delay_G100
000351 91e0 0065 	LDS  R30,101
000353 7feb      	ANDI R30,0xFB
000354 93e0 0065 	STS  101,R30
000356 5011      	SUBI R17,LOW(1)
000357 f711      	BRNE _0x2000004
000358 91e0 0065 	LDS  R30,101
00035a 61e0      	ORI  R30,0x10
00035b 93e0 0065 	STS  101,R30
00035d 8118      	LDD  R17,Y+0
00035e 940c 0801 	JMP  _0x2140003
                 ; .FEND
                 _pcd8544_wrcmd:
                 ; .FSTART _pcd8544_wrcmd
000360 93aa      	ST   -Y,R26
000361 91e0 0065 	LDS  R30,101
000363 7fee      	ANDI R30,0xFE
000364 93e0 0065 	STS  101,R30
000366 81a8      	LD   R26,Y
000367 dfca      	RCALL _pcd8544_wrbus_G100
000368 c0e8      	RJMP _0x214000A
                 ; .FEND
                 _pcd8544_wrdata_G100:
                 ; .FSTART _pcd8544_wrdata_G100
000369 93aa      	ST   -Y,R26
00036a 91e0 0065 	LDS  R30,101
00036c 60e1      	ORI  R30,1
00036d 93e0 0065 	STS  101,R30
00036f 81a8      	LD   R26,Y
000370 dfc1      	RCALL _pcd8544_wrbus_G100
000371 c0df      	RJMP _0x214000A
                 ; .FEND
                 _pcd8544_setaddr_G100:
                 ; .FSTART _pcd8544_setaddr_G100
000372 93aa      	ST   -Y,R26
000373 931a      	ST   -Y,R17
000374 81e9      	LDD  R30,Y+1
000375 95e6      	LSR  R30
000376 95e6      	LSR  R30
000377 95e6      	LSR  R30
000378 2f1e      	MOV  R17,R30
000379 e5e4      	LDI  R30,LOW(84)
00037a 9fe1      	MUL  R30,R17
00037b 01f0      	MOVW R30,R0
00037c 01df      	MOVW R26,R30
00037d 81ea      	LDD  R30,Y+2
00037e e0f0      	LDI  R31,0
00037f 0fea      	ADD  R30,R26
000380 1ffb      	ADC  R31,R27
000381 93e0 0578 	STS  _gfx_addr_G100,R30
000383 93f0 0579 	STS  _gfx_addr_G100+1,R31
000385 2fe1      	MOV  R30,R17
000386 8118      	LDD  R17,Y+0
000387 940c 0848 	JMP  _0x2140002
                 ; .FEND
                 _pcd8544_gotoxy:
                 ; .FSTART _pcd8544_gotoxy
000389 93aa      	ST   -Y,R26
00038a 81e9      	LDD  R30,Y+1
00038b 68e0      	ORI  R30,0x80
00038c 2fae      	MOV  R26,R30
00038d dfd2      	RCALL _pcd8544_wrcmd
00038e 81e9      	LDD  R30,Y+1
00038f 93ea      	ST   -Y,R30
000390 81a9      	LDD  R26,Y+1
000391 dfe0      	RCALL _pcd8544_setaddr_G100
000392 64e0      	ORI  R30,0x40
000393 2fae      	MOV  R26,R30
000394 dfcb      	RCALL _pcd8544_wrcmd
000395 940c 0801 	JMP  _0x2140003
                 ; .FEND
                 _pcd8544_rdbyte:
                 ; .FSTART _pcd8544_rdbyte
000397 93aa      	ST   -Y,R26
000398 81e9      	LDD  R30,Y+1
000399 93ea      	ST   -Y,R30
00039a 81a9      	LDD  R26,Y+1
00039b dfed      	RCALL _pcd8544_gotoxy
00039c 91e0 0578 	LDS  R30,_gfx_addr_G100
00039e 91f0 0579 	LDS  R31,_gfx_addr_G100+1
0003a0 58e6      	SUBI R30,LOW(-_gfx_buffer_G100)
0003a1 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G100)
0003a2 81e0      	LD   R30,Z
0003a3 940c 0801 	JMP  _0x2140003
                 ; .FEND
                 _pcd8544_wrbyte:
                 ; .FSTART _pcd8544_wrbyte
0003a5 93aa      	ST   -Y,R26
0003a6 940e 089e 	CALL SUBOPT_0x5
0003a8 81a8      	LD   R26,Y
0003a9 83a0      	STD  Z+0,R26
0003aa dfbe      	RCALL _pcd8544_wrdata_G100
0003ab c0a5      	RJMP _0x214000A
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
0003ac 93ba      	ST   -Y,R27
0003ad 93aa      	ST   -Y,R26
0003ae 940e 0967 	CALL __SAVELOCR4
0003b0 91e0 0064 	LDS  R30,100
0003b2 61e0      	ORI  R30,0x10
0003b3 940e 08a9 	CALL SUBOPT_0x6
0003b5 61e0      	ORI  R30,0x10
0003b6 93e0 0065 	STS  101,R30
0003b8 91e0 0064 	LDS  R30,100
0003ba 60e4      	ORI  R30,4
0003bb 940e 08a9 	CALL SUBOPT_0x6
0003bd 7feb      	ANDI R30,0xFB
0003be 93e0 0065 	STS  101,R30
0003c0 91e0 0064 	LDS  R30,100
0003c2 60e2      	ORI  R30,2
0003c3 93e0 0064 	STS  100,R30
0003c5 91e0 0064 	LDS  R30,100
0003c7 60e1      	ORI  R30,1
0003c8 93e0 0064 	STS  100,R30
0003ca 91e0 0064 	LDS  R30,100
0003cc 60e8      	ORI  R30,8
0003cd 940e 08a9 	CALL SUBOPT_0x6
0003cf 7fe7      	ANDI R30,0XF7
0003d0 93e0 0065 	STS  101,R30
0003d2 e0aa      	LDI  R26,LOW(10)
0003d3 e0b0      	LDI  R27,0
0003d4 940e 0919 	CALL _delay_ms
0003d6 91e0 0065 	LDS  R30,101
0003d8 60e8      	ORI  R30,8
0003d9 93e0 0065 	STS  101,R30
0003db 81ec      	LDD  R30,Y+4
0003dc 81fd      	LDD  R31,Y+4+1
0003dd 9730      	SBIW R30,0
0003de f121      	BREQ _0x2000008
0003df 81e6      	LDD  R30,Z+6
0003e0 70e3      	ANDI R30,LOW(0x3)
0003e1 2f1e      	MOV  R17,R30
0003e2 81ec      	LDD  R30,Y+4
0003e3 81fd      	LDD  R31,Y+4+1
0003e4 81e6      	LDD  R30,Z+6
0003e5 95e6      	LSR  R30
0003e6 95e6      	LSR  R30
0003e7 70e7      	ANDI R30,LOW(0x7)
0003e8 2f0e      	MOV  R16,R30
0003e9 81ec      	LDD  R30,Y+4
0003ea 81fd      	LDD  R31,Y+4+1
0003eb 81e7      	LDD  R30,Z+7
0003ec 77ef      	ANDI R30,0x7F
0003ed 2f3e      	MOV  R19,R30
0003ee 81ac      	LDD  R26,Y+4
0003ef 81bd      	LDD  R27,Y+4+1
0003f0 940e 0940 	CALL __GETW1P
                +
0003f2 93e0 0543+STS _glcd_state + ( 4 ) , R30
0003f4 93f0 0544+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
0003f6 9612      	ADIW R26,2
0003f7 940e 0940 	CALL __GETW1P
                +
0003f9 93e0 0558+STS _glcd_state + ( 25 ) , R30
0003fb 93f0 0559+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
0003fd 81ac      	LDD  R26,Y+4
0003fe 81bd      	LDD  R27,Y+4+1
0003ff 9614      	ADIW R26,4
000400 940e 0940 	CALL __GETW1P
000402 c00d      	RJMP _0x20000A1
                 _0x2000008:
000403 e010      	LDI  R17,LOW(0)
000404 e003      	LDI  R16,LOW(3)
000405 e332      	LDI  R19,LOW(50)
000406 e0e0      	LDI  R30,LOW(0)
000407 e0f0      	LDI  R31,HIGH(0)
                +
000408 93e0 0543+STS _glcd_state + ( 4 ) , R30
00040a 93f0 0544+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
                +
00040c 93e0 0558+STS _glcd_state + ( 25 ) , R30
00040e 93f0 0559+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
                 _0x20000A1:
                +
000410 93e0 055a+STS _glcd_state + ( 27 ) , R30
000412 93f0 055b+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
000414 e2a1      	LDI  R26,LOW(33)
000415 df4a      	RCALL _pcd8544_wrcmd
000416 2fe1      	MOV  R30,R17
000417 60e4      	ORI  R30,4
000418 2fae      	MOV  R26,R30
000419 df46      	RCALL _pcd8544_wrcmd
00041a 2fe0      	MOV  R30,R16
00041b 61e0      	ORI  R30,0x10
00041c 2fae      	MOV  R26,R30
00041d df42      	RCALL _pcd8544_wrcmd
00041e 2fe3      	MOV  R30,R19
00041f 68e0      	ORI  R30,0x80
000420 2fae      	MOV  R26,R30
000421 df3e      	RCALL _pcd8544_wrcmd
000422 e2a0      	LDI  R26,LOW(32)
000423 df3c      	RCALL _pcd8544_wrcmd
000424 e0a1      	LDI  R26,LOW(1)
000425 d022      	RCALL _glcd_display
000426 e0e1      	LDI  R30,LOW(1)
000427 93e0 053f 	STS  _glcd_state,R30
000429 e0e0      	LDI  R30,LOW(0)
                +
00042a 93e0 0540+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
00042c e0e1      	LDI  R30,LOW(1)
                +
00042d 93e0 0545+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
00042f 93e0 0546+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
000431 93e0 0547+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
000433 efef      	LDI  R30,LOW(255)
                +
000434 93e0 0548+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
000436 e0e1      	LDI  R30,LOW(1)
                +
000437 93e0 054f+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
000439 e5e0     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
00043a e0f5     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
00043b 93fa      	ST   -Y,R31
00043c 93ea      	ST   -Y,R30
00043d efef      	LDI  R30,LOW(255)
00043e 93ea      	ST   -Y,R30
00043f e0a8      	LDI  R26,LOW(8)
000440 e0b0      	LDI  R27,0
000441 940e 07e8 	CALL _memset
000443 d00f      	RCALL _glcd_clear
000444 e0e1      	LDI  R30,LOW(1)
000445 940e 096e 	CALL __LOADLOCR4
000447 c060      	RJMP _0x2140009
                 ; .FEND
                 _glcd_display:
                 ; .FSTART _glcd_display
000448 93aa      	ST   -Y,R26
000449 81e8      	LD   R30,Y
00044a 30e0      	CPI  R30,0
00044b f011      	BREQ _0x200000A
00044c e0ec      	LDI  R30,LOW(12)
00044d c001      	RJMP _0x200000B
                 _0x200000A:
00044e e0e8      	LDI  R30,LOW(8)
                 _0x200000B:
00044f 2fae      	MOV  R26,R30
000450 df0f      	RCALL _pcd8544_wrcmd
                 _0x214000A:
000451 9621      	ADIW R28,1
000452 9508      	RET
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
000453 940e 0967 	CALL __SAVELOCR4
000455 e030      	LDI  R19,0
                +
000456 91e0 0540+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000458 30e0      	CPI  R30,0
000459 f009      	BREQ _0x200000D
00045a ef3f      	LDI  R19,LOW(255)
                 _0x200000D:
00045b e0e0      	LDI  R30,LOW(0)
00045c 93ea      	ST   -Y,R30
00045d e0a0      	LDI  R26,LOW(0)
00045e df2a      	RCALL _pcd8544_gotoxy
                +
00045f ef08     +LDI R16 , LOW ( 504 )
000460 e011     +LDI R17 , HIGH ( 504 )
                 	__GETWRN 16,17,504
                 _0x200000E:
000461 01f8      	MOVW R30,R16
                +
000462 5001     +SUBI R16 , LOW ( 1 )
000463 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
000464 9730      	SBIW R30,0
000465 f019      	BREQ _0x2000010
000466 2fa3      	MOV  R26,R19
000467 df3d      	RCALL _pcd8544_wrbyte
000468 cff8      	RJMP _0x200000E
                 _0x2000010:
000469 e0e0      	LDI  R30,LOW(0)
00046a 93ea      	ST   -Y,R30
00046b e0a0      	LDI  R26,LOW(0)
00046c d340      	RCALL _glcd_moveto
00046d 940e 096e 	CALL __LOADLOCR4
00046f 940c 0867 	JMP  _0x2140001
                 ; .FEND
                 _pcd8544_wrmasked_G100:
                 ; .FSTART _pcd8544_wrmasked_G100
000471 93aa      	ST   -Y,R26
000472 931a      	ST   -Y,R17
000473 81ed      	LDD  R30,Y+5
000474 93ea      	ST   -Y,R30
000475 81ad      	LDD  R26,Y+5
000476 df20      	RCALL _pcd8544_rdbyte
000477 2f1e      	MOV  R17,R30
000478 81e9      	LDD  R30,Y+1
000479 30e7      	CPI  R30,LOW(0x7)
00047a f011      	BREQ _0x2000020
00047b 30e8      	CPI  R30,LOW(0x8)
00047c f439      	BRNE _0x2000021
                 _0x2000020:
00047d 81eb      	LDD  R30,Y+3
00047e 93ea      	ST   -Y,R30
00047f 81aa      	LDD  R26,Y+2
000480 940e 0803 	CALL _glcd_mappixcolor1bit
000482 83eb      	STD  Y+3,R30
000483 c008      	RJMP _0x2000022
                 _0x2000021:
000484 30e3      	CPI  R30,LOW(0x3)
000485 f421      	BRNE _0x2000024
000486 81eb      	LDD  R30,Y+3
000487 95e0      	COM  R30
000488 83eb      	STD  Y+3,R30
000489 c002      	RJMP _0x2000025
                 _0x2000024:
00048a 30e0      	CPI  R30,0
00048b f421      	BRNE _0x2000026
                 _0x2000025:
                 _0x2000022:
00048c 81ea      	LDD  R30,Y+2
00048d 95e0      	COM  R30
00048e 231e      	AND  R17,R30
00048f c002      	RJMP _0x2000027
                 _0x2000026:
000490 30e2      	CPI  R30,LOW(0x2)
000491 f429      	BRNE _0x2000028
                 _0x2000027:
000492 81ea      	LDD  R30,Y+2
000493 81ab      	LDD  R26,Y+3
000494 23ea      	AND  R30,R26
000495 2b1e      	OR   R17,R30
000496 c00e      	RJMP _0x200001E
                 _0x2000028:
000497 30e1      	CPI  R30,LOW(0x1)
000498 f429      	BRNE _0x2000029
000499 81ea      	LDD  R30,Y+2
00049a 81ab      	LDD  R26,Y+3
00049b 23ea      	AND  R30,R26
00049c 271e      	EOR  R17,R30
00049d c007      	RJMP _0x200001E
                 _0x2000029:
00049e 30e4      	CPI  R30,LOW(0x4)
00049f f429      	BRNE _0x200001E
0004a0 81ea      	LDD  R30,Y+2
0004a1 95e0      	COM  R30
0004a2 81ab      	LDD  R26,Y+3
0004a3 2bea      	OR   R30,R26
0004a4 231e      	AND  R17,R30
                 _0x200001E:
0004a5 2fa1      	MOV  R26,R17
0004a6 defe      	RCALL _pcd8544_wrbyte
0004a7 8118      	LDD  R17,Y+0
                 _0x2140009:
0004a8 9626      	ADIW R28,6
0004a9 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
0004aa 93aa      	ST   -Y,R26
0004ab 9723      	SBIW R28,3
0004ac 940e 0965 	CALL __SAVELOCR6
0004ae 89a8      	LDD  R26,Y+16
0004af 35a4      	CPI  R26,LOW(0x54)
0004b0 f448      	BRSH _0x200002C
0004b1 85af      	LDD  R26,Y+15
0004b2 33a0      	CPI  R26,LOW(0x30)
0004b3 f430      	BRSH _0x200002C
0004b4 85ae      	LDD  R26,Y+14
0004b5 30a0      	CPI  R26,LOW(0x0)
0004b6 f019      	BREQ _0x200002C
0004b7 85ad      	LDD  R26,Y+13
0004b8 30a0      	CPI  R26,LOW(0x0)
0004b9 f409      	BRNE _0x200002B
                 _0x200002C:
0004ba c1cc      	RJMP _0x2140008
                 _0x200002B:
0004bb 85ee      	LDD  R30,Y+14
0004bc 87e8      	STD  Y+8,R30
0004bd 89a8      	LDD  R26,Y+16
0004be 27bb      	CLR  R27
0004bf 85ee      	LDD  R30,Y+14
0004c0 e0f0      	LDI  R31,0
0004c1 0fae      	ADD  R26,R30
0004c2 1fbf      	ADC  R27,R31
0004c3 35a5      	CPI  R26,LOW(0x55)
0004c4 e0e0      	LDI  R30,HIGH(0x55)
0004c5 07be      	CPC  R27,R30
0004c6 f020      	BRLO _0x200002E
0004c7 89a8      	LDD  R26,Y+16
0004c8 e5e4      	LDI  R30,LOW(84)
0004c9 1bea      	SUB  R30,R26
0004ca 87ee      	STD  Y+14,R30
                 _0x200002E:
0004cb 852d      	LDD  R18,Y+13
0004cc 85af      	LDD  R26,Y+15
0004cd 27bb      	CLR  R27
0004ce 85ed      	LDD  R30,Y+13
0004cf e0f0      	LDI  R31,0
0004d0 0fae      	ADD  R26,R30
0004d1 1fbf      	ADC  R27,R31
0004d2 97d1      	SBIW R26,49
0004d3 f020      	BRLO _0x200002F
0004d4 85af      	LDD  R26,Y+15
0004d5 e3e0      	LDI  R30,LOW(48)
0004d6 1bea      	SUB  R30,R26
0004d7 87ed      	STD  Y+13,R30
                 _0x200002F:
0004d8 85a9      	LDD  R26,Y+9
0004d9 30a6      	CPI  R26,LOW(0x6)
0004da f009      	BREQ PC+2
0004db c05b      	RJMP _0x2000030
0004dc 85ec      	LDD  R30,Y+12
0004dd 30e1      	CPI  R30,LOW(0x1)
0004de f409      	BRNE _0x2000034
0004df c1a7      	RJMP _0x2140008
                 _0x2000034:
0004e0 30e3      	CPI  R30,LOW(0x3)
0004e1 f439      	BRNE _0x2000037
                +
0004e2 91e0 055a+LDS R30 , _glcd_state + ( 27 )
0004e4 91f0 055b+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
0004e6 9730      	SBIW R30,0
0004e7 f409      	BRNE _0x2000036
0004e8 c19e      	RJMP _0x2140008
                 _0x2000036:
                 _0x2000037:
0004e9 8508      	LDD  R16,Y+8
0004ea 85ed      	LDD  R30,Y+13
0004eb 95e6      	LSR  R30
0004ec 95e6      	LSR  R30
0004ed 95e6      	LSR  R30
0004ee 2f3e      	MOV  R19,R30
0004ef 2fe2      	MOV  R30,R18
0004f0 70e7      	ANDI R30,LOW(0x7)
0004f1 f419      	BRNE _0x2000039
0004f2 85ad      	LDD  R26,Y+13
0004f3 172a      	CP   R18,R26
0004f4 f0e9      	BREQ _0x2000038
                 _0x2000039:
0004f5 2fa0      	MOV  R26,R16
0004f6 27bb      	CLR  R27
0004f7 2fe3      	MOV  R30,R19
0004f8 e0f0      	LDI  R31,0
0004f9 940e 0938 	CALL __MULW12U
0004fb 85aa      	LDD  R26,Y+10
0004fc 85bb      	LDD  R27,Y+10+1
0004fd 940e 08ae 	CALL SUBOPT_0x7
0004ff 9526      	LSR  R18
000500 9526      	LSR  R18
000501 9526      	LSR  R18
000502 2f53      	MOV  R21,R19
                 _0x200003B:
000503 935f      	PUSH R21
000504 5f5f      	SUBI R21,-1
000505 2fe2      	MOV  R30,R18
000506 91af      	POP  R26
000507 17ea      	CP   R30,R26
000508 f048      	BRLO _0x200003D
000509 2f10      	MOV  R17,R16
                 _0x200003E:
00050a 2fe1      	MOV  R30,R17
00050b 5011      	SUBI R17,1
00050c 30e0      	CPI  R30,0
00050d f019      	BREQ _0x2000040
00050e 940e 08b3 	CALL SUBOPT_0x8
000510 cff9      	RJMP _0x200003E
                 _0x2000040:
000511 cff1      	RJMP _0x200003B
                 _0x200003D:
                 _0x2000038:
000512 85ae      	LDD  R26,Y+14
000513 170a      	CP   R16,R26
000514 f111      	BREQ _0x2000041
000515 85ee      	LDD  R30,Y+14
000516 85aa      	LDD  R26,Y+10
000517 85bb      	LDD  R27,Y+10+1
000518 e0f0      	LDI  R31,0
000519 940e 08ae 	CALL SUBOPT_0x7
00051b 85ed      	LDD  R30,Y+13
00051c 70e7      	ANDI R30,LOW(0x7)
00051d f009      	BREQ _0x2000042
00051e 5f3f      	SUBI R19,-LOW(1)
                 _0x2000042:
00051f e020      	LDI  R18,LOW(0)
                 _0x2000043:
000520 932f      	PUSH R18
000521 5f2f      	SUBI R18,-1
000522 2fe3      	MOV  R30,R19
000523 91af      	POP  R26
000524 17ae      	CP   R26,R30
000525 f488      	BRSH _0x2000045
000526 851e      	LDD  R17,Y+14
                 _0x2000046:
000527 931f      	PUSH R17
000528 5f1f      	SUBI R17,-1
000529 2fe0      	MOV  R30,R16
00052a 91af      	POP  R26
00052b 17ae      	CP   R26,R30
00052c f418      	BRSH _0x2000048
00052d 940e 08b3 	CALL SUBOPT_0x8
00052f cff7      	RJMP _0x2000046
                 _0x2000048:
000530 85ee      	LDD  R30,Y+14
000531 81ae      	LDD  R26,Y+6
000532 81bf      	LDD  R27,Y+6+1
000533 e0f0      	LDI  R31,0
000534 940e 08ae 	CALL SUBOPT_0x7
000536 cfe9      	RJMP _0x2000043
                 _0x2000045:
                 _0x2000041:
                 _0x2000030:
000537 85ef      	LDD  R30,Y+15
000538 70e7      	ANDI R30,LOW(0x7)
000539 2f3e      	MOV  R19,R30
                 _0x2000049:
00053a 85ed      	LDD  R30,Y+13
00053b 30e0      	CPI  R30,0
00053c f409      	BRNE PC+2
00053d c149      	RJMP _0x200004B
00053e 85ea      	LDD  R30,Y+10
00053f 85fb      	LDD  R31,Y+10+1
000540 83ee      	STD  Y+6,R30
000541 83ff      	STD  Y+6+1,R31
000542 e010      	LDI  R17,LOW(0)
000543 8908      	LDD  R16,Y+16
000544 3030      	CPI  R19,0
000545 f009      	BREQ PC+2
000546 c063      	RJMP _0x200004C
000547 85ad      	LDD  R26,Y+13
000548 30a8      	CPI  R26,LOW(0x8)
000549 f408      	BRSH PC+2
00054a c05a      	RJMP _0x200004D
00054b 85e9      	LDD  R30,Y+9
00054c 30e0      	CPI  R30,0
00054d f011      	BREQ _0x2000052
00054e 30e3      	CPI  R30,LOW(0x3)
00054f f409      	BRNE _0x2000053
                 _0x2000052:
000550 c002      	RJMP _0x2000054
                 _0x2000053:
000551 30e7      	CPI  R30,LOW(0x7)
000552 f409      	BRNE _0x2000055
                 _0x2000054:
000553 c002      	RJMP _0x2000056
                 _0x2000055:
000554 30e8      	CPI  R30,LOW(0x8)
000555 f409      	BRNE _0x2000057
                 _0x2000056:
000556 c002      	RJMP _0x2000058
                 _0x2000057:
000557 30e9      	CPI  R30,LOW(0x9)
000558 f409      	BRNE _0x2000059
                 _0x2000058:
000559 c002      	RJMP _0x200005A
                 _0x2000059:
00055a 30ea      	CPI  R30,LOW(0xA)
00055b f421      	BRNE _0x200005B
                 _0x200005A:
00055c 930a      	ST   -Y,R16
00055d 89a8      	LDD  R26,Y+16
00055e de2a      	RCALL _pcd8544_gotoxy
00055f c004      	RJMP _0x2000050
                 _0x200005B:
000560 30e6      	CPI  R30,LOW(0x6)
000561 f411      	BRNE _0x2000050
000562 940e 08c0 	CALL SUBOPT_0x9
                 _0x2000050:
                 _0x200005D:
000564 931f      	PUSH R17
000565 5f1f      	SUBI R17,-1
000566 85ee      	LDD  R30,Y+14
000567 91af      	POP  R26
000568 17ae      	CP   R26,R30
000569 f5a0      	BRSH _0x200005F
00056a 85a9      	LDD  R26,Y+9
00056b 30a6      	CPI  R26,LOW(0x6)
00056c f451      	BRNE _0x2000060
00056d 940e 08c4 	CALL SUBOPT_0xA
00056f 93fa      	ST   -Y,R31
000570 93ea      	ST   -Y,R30
000571 940e 089e 	CALL SUBOPT_0x5
000573 81a0      	LD   R26,Z
000574 940e 084a 	CALL _glcd_writemem
000576 c026      	RJMP _0x2000061
                 _0x2000060:
000577 85e9      	LDD  R30,Y+9
000578 30e9      	CPI  R30,LOW(0x9)
000579 f411      	BRNE _0x2000065
00057a e050      	LDI  R21,LOW(0)
00057b c00e      	RJMP _0x2000066
                 _0x2000065:
00057c 30ea      	CPI  R30,LOW(0xA)
00057d f411      	BRNE _0x2000064
00057e ef5f      	LDI  R21,LOW(255)
00057f c00a      	RJMP _0x2000066
                 _0x2000064:
000580 940e 08c4 	CALL SUBOPT_0xA
000582 940e 08cd 	CALL SUBOPT_0xB
000584 2f5e      	MOV  R21,R30
000585 85e9      	LDD  R30,Y+9
000586 30e7      	CPI  R30,LOW(0x7)
000587 f011      	BREQ _0x200006D
000588 30e8      	CPI  R30,LOW(0x8)
000589 f421      	BRNE _0x200006E
                 _0x200006D:
                 _0x2000066:
00058a 940e 08d3 	CALL SUBOPT_0xC
00058c 2f5e      	MOV  R21,R30
00058d c006      	RJMP _0x200006F
                 _0x200006E:
00058e 30e3      	CPI  R30,LOW(0x3)
00058f f411      	BRNE _0x2000071
000590 9550      	COM  R21
000591 c002      	RJMP _0x2000072
                 _0x2000071:
000592 30e0      	CPI  R30,0
000593 f419      	BRNE _0x2000074
                 _0x2000072:
                 _0x200006F:
000594 2fa5      	MOV  R26,R21
000595 ddd3      	RCALL _pcd8544_wrdata_G100
000596 c006      	RJMP _0x200006B
                 _0x2000074:
000597 940e 08d7 	CALL SUBOPT_0xD
000599 efef      	LDI  R30,LOW(255)
00059a 93ea      	ST   -Y,R30
00059b 85ad      	LDD  R26,Y+13
00059c ded4      	RCALL _pcd8544_wrmasked_G100
                 _0x200006B:
                 _0x2000061:
00059d cfc6      	RJMP _0x200005D
                 _0x200005F:
00059e 85ef      	LDD  R30,Y+15
00059f 5fe8      	SUBI R30,-LOW(8)
0005a0 87ef      	STD  Y+15,R30
0005a1 85ed      	LDD  R30,Y+13
0005a2 50e8      	SUBI R30,LOW(8)
0005a3 87ed      	STD  Y+13,R30
0005a4 c0d9      	RJMP _0x2000075
                 _0x200004D:
0005a5 855d      	LDD  R21,Y+13
0005a6 e020      	LDI  R18,LOW(0)
0005a7 e0e0      	LDI  R30,LOW(0)
0005a8 87ed      	STD  Y+13,R30
0005a9 c07e      	RJMP _0x2000076
                 _0x200004C:
0005aa 2fe3      	MOV  R30,R19
0005ab 85ad      	LDD  R26,Y+13
0005ac 0fae      	ADD  R26,R30
0005ad 30a9      	CPI  R26,LOW(0x9)
0005ae f420      	BRSH _0x2000077
0005af 852d      	LDD  R18,Y+13
0005b0 e0e0      	LDI  R30,LOW(0)
0005b1 87ed      	STD  Y+13,R30
0005b2 c003      	RJMP _0x2000078
                 _0x2000077:
0005b3 e0e8      	LDI  R30,LOW(8)
0005b4 1be3      	SUB  R30,R19
0005b5 2f2e      	MOV  R18,R30
                 _0x2000078:
0005b6 933a      	ST   -Y,R19
0005b7 2fa2      	MOV  R26,R18
0005b8 940e 07f8 	CALL _glcd_getmask
0005ba 2f4e      	MOV  R20,R30
0005bb 85e9      	LDD  R30,Y+9
0005bc 30e6      	CPI  R30,LOW(0x6)
0005bd f511      	BRNE _0x200007C
0005be 940e 08c0 	CALL SUBOPT_0x9
                 _0x200007D:
0005c0 931f      	PUSH R17
0005c1 5f1f      	SUBI R17,-1
0005c2 85ee      	LDD  R30,Y+14
0005c3 91af      	POP  R26
0005c4 17ae      	CP   R26,R30
0005c5 f4c8      	BRSH _0x200007F
0005c6 940e 089e 	CALL SUBOPT_0x5
0005c8 81e0      	LD   R30,Z
0005c9 23e4      	AND  R30,R20
0005ca 2fae      	MOV  R26,R30
0005cb 2fe3      	MOV  R30,R19
0005cc 940e 092b 	CALL __LSRB12
0005ce 940e 08dd 	CALL SUBOPT_0xE
0005d0 2fe3      	MOV  R30,R19
0005d1 2fa4      	MOV  R26,R20
0005d2 940e 092b 	CALL __LSRB12
0005d4 95e0      	COM  R30
0005d5 21e1      	AND  R30,R1
0005d6 2b5e      	OR   R21,R30
0005d7 940e 08c4 	CALL SUBOPT_0xA
0005d9 93fa      	ST   -Y,R31
0005da 93ea      	ST   -Y,R30
0005db 2fa5      	MOV  R26,R21
0005dc 940e 084a 	CALL _glcd_writemem
0005de cfe1      	RJMP _0x200007D
                 _0x200007F:
0005df c02c      	RJMP _0x200007B
                 _0x200007C:
0005e0 30e9      	CPI  R30,LOW(0x9)
0005e1 f411      	BRNE _0x2000080
0005e2 e050      	LDI  R21,LOW(0)
0005e3 c003      	RJMP _0x2000081
                 _0x2000080:
0005e4 30ea      	CPI  R30,LOW(0xA)
0005e5 f4a9      	BRNE _0x2000087
0005e6 ef5f      	LDI  R21,LOW(255)
                 _0x2000081:
0005e7 940e 08d3 	CALL SUBOPT_0xC
0005e9 2fae      	MOV  R26,R30
0005ea 2fe3      	MOV  R30,R19
0005eb 940e 0923 	CALL __LSLB12
0005ed 2f5e      	MOV  R21,R30
                 _0x2000084:
0005ee 931f      	PUSH R17
0005ef 5f1f      	SUBI R17,-1
0005f0 85ee      	LDD  R30,Y+14
0005f1 91af      	POP  R26
0005f2 17ae      	CP   R26,R30
0005f3 f430      	BRSH _0x2000086
0005f4 940e 08d7 	CALL SUBOPT_0xD
0005f6 934a      	ST   -Y,R20
0005f7 e0a0      	LDI  R26,LOW(0)
0005f8 de78      	RCALL _pcd8544_wrmasked_G100
0005f9 cff4      	RJMP _0x2000084
                 _0x2000086:
0005fa c011      	RJMP _0x200007B
                 _0x2000087:
                 _0x2000088:
0005fb 931f      	PUSH R17
0005fc 5f1f      	SUBI R17,-1
0005fd 85ee      	LDD  R30,Y+14
0005fe 91af      	POP  R26
0005ff 17ae      	CP   R26,R30
000600 f458      	BRSH _0x200008A
000601 940e 08e8 	CALL SUBOPT_0xF
000603 2fae      	MOV  R26,R30
000604 2fe3      	MOV  R30,R19
000605 940e 0923 	CALL __LSLB12
000607 93ea      	ST   -Y,R30
000608 934a      	ST   -Y,R20
000609 85ad      	LDD  R26,Y+13
00060a de66      	RCALL _pcd8544_wrmasked_G100
00060b cfef      	RJMP _0x2000088
                 _0x200008A:
                 _0x200007B:
00060c 85ed      	LDD  R30,Y+13
00060d 30e0      	CPI  R30,0
00060e f409      	BRNE _0x200008B
00060f c077      	RJMP _0x200004B
                 _0x200008B:
000610 85ad      	LDD  R26,Y+13
000611 30a8      	CPI  R26,LOW(0x8)
000612 f428      	BRSH _0x200008C
000613 85ed      	LDD  R30,Y+13
000614 1be2      	SUB  R30,R18
000615 2f5e      	MOV  R21,R30
000616 e0e0      	LDI  R30,LOW(0)
000617 c003      	RJMP _0x20000A2
                 _0x200008C:
000618 2f53      	MOV  R21,R19
000619 85ed      	LDD  R30,Y+13
00061a 50e8      	SUBI R30,LOW(8)
                 _0x20000A2:
00061b 87ed      	STD  Y+13,R30
00061c e010      	LDI  R17,LOW(0)
00061d 85ef      	LDD  R30,Y+15
00061e 5fe8      	SUBI R30,-LOW(8)
00061f 87ef      	STD  Y+15,R30
000620 e0e8      	LDI  R30,LOW(8)
000621 1be3      	SUB  R30,R19
000622 2f2e      	MOV  R18,R30
000623 8908      	LDD  R16,Y+16
000624 85ea      	LDD  R30,Y+10
000625 85fb      	LDD  R31,Y+10+1
000626 83ee      	STD  Y+6,R30
000627 83ff      	STD  Y+6+1,R31
                 _0x2000076:
000628 2fe5      	MOV  R30,R21
000629 e0f0      	LDI  R31,0
00062a 59e0      	SUBI R30,LOW(-__glcd_mask*2)
00062b 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
00062c 9144      	LPM  R20,Z
00062d 85e9      	LDD  R30,Y+9
00062e 30e6      	CPI  R30,LOW(0x6)
00062f f511      	BRNE _0x2000091
000630 940e 08c0 	CALL SUBOPT_0x9
                 _0x2000092:
000632 931f      	PUSH R17
000633 5f1f      	SUBI R17,-1
000634 85ee      	LDD  R30,Y+14
000635 91af      	POP  R26
000636 17ae      	CP   R26,R30
000637 f4c8      	BRSH _0x2000094
000638 940e 089e 	CALL SUBOPT_0x5
00063a 81e0      	LD   R30,Z
00063b 23e4      	AND  R30,R20
00063c 2fae      	MOV  R26,R30
00063d 2fe2      	MOV  R30,R18
00063e 940e 0923 	CALL __LSLB12
000640 940e 08dd 	CALL SUBOPT_0xE
000642 2fe2      	MOV  R30,R18
000643 2fa4      	MOV  R26,R20
000644 940e 0923 	CALL __LSLB12
000646 95e0      	COM  R30
000647 21e1      	AND  R30,R1
000648 2b5e      	OR   R21,R30
000649 940e 08c4 	CALL SUBOPT_0xA
00064b 93fa      	ST   -Y,R31
00064c 93ea      	ST   -Y,R30
00064d 2fa5      	MOV  R26,R21
00064e 940e 084a 	CALL _glcd_writemem
000650 cfe1      	RJMP _0x2000092
                 _0x2000094:
000651 c02c      	RJMP _0x2000090
                 _0x2000091:
000652 30e9      	CPI  R30,LOW(0x9)
000653 f411      	BRNE _0x2000095
000654 e050      	LDI  R21,LOW(0)
000655 c003      	RJMP _0x2000096
                 _0x2000095:
000656 30ea      	CPI  R30,LOW(0xA)
000657 f4a9      	BRNE _0x200009C
000658 ef5f      	LDI  R21,LOW(255)
                 _0x2000096:
000659 940e 08d3 	CALL SUBOPT_0xC
00065b 2fae      	MOV  R26,R30
00065c 2fe2      	MOV  R30,R18
00065d 940e 092b 	CALL __LSRB12
00065f 2f5e      	MOV  R21,R30
                 _0x2000099:
000660 931f      	PUSH R17
000661 5f1f      	SUBI R17,-1
000662 85ee      	LDD  R30,Y+14
000663 91af      	POP  R26
000664 17ae      	CP   R26,R30
000665 f430      	BRSH _0x200009B
000666 940e 08d7 	CALL SUBOPT_0xD
000668 934a      	ST   -Y,R20
000669 e0a0      	LDI  R26,LOW(0)
00066a de06      	RCALL _pcd8544_wrmasked_G100
00066b cff4      	RJMP _0x2000099
                 _0x200009B:
00066c c011      	RJMP _0x2000090
                 _0x200009C:
                 _0x200009D:
00066d 931f      	PUSH R17
00066e 5f1f      	SUBI R17,-1
00066f 85ee      	LDD  R30,Y+14
000670 91af      	POP  R26
000671 17ae      	CP   R26,R30
000672 f458      	BRSH _0x200009F
000673 940e 08e8 	CALL SUBOPT_0xF
000675 2fae      	MOV  R26,R30
000676 2fe2      	MOV  R30,R18
000677 940e 092b 	CALL __LSRB12
000679 93ea      	ST   -Y,R30
00067a 934a      	ST   -Y,R20
00067b 85ad      	LDD  R26,Y+13
00067c ddf4      	RCALL _pcd8544_wrmasked_G100
00067d cfef      	RJMP _0x200009D
                 _0x200009F:
                 _0x2000090:
                 _0x2000075:
00067e 85e8      	LDD  R30,Y+8
00067f 85aa      	LDD  R26,Y+10
000680 85bb      	LDD  R27,Y+10+1
000681 e0f0      	LDI  R31,0
000682 0fea      	ADD  R30,R26
000683 1ffb      	ADC  R31,R27
000684 87ea      	STD  Y+10,R30
000685 87fb      	STD  Y+10+1,R31
000686 ceb3      	RJMP _0x2000049
                 _0x200004B:
                 _0x2140008:
000687 940e 096c 	CALL __LOADLOCR6
000689 9661      	ADIW R28,17
00068a 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
00068b 940e 08f5 	CALL SUBOPT_0x10
00068d f024      	BRLT _0x2020003
00068e e0e0      	LDI  R30,LOW(0)
00068f e0f0      	LDI  R31,HIGH(0)
000690 940c 0801 	JMP  _0x2140003
                 _0x2020003:
000692 81a8      	LD   R26,Y
000693 81b9      	LDD  R27,Y+1
000694 35a4      	CPI  R26,LOW(0x54)
000695 e0e0      	LDI  R30,HIGH(0x54)
000696 07be      	CPC  R27,R30
000697 f024      	BRLT _0x2020004
000698 e5e3      	LDI  R30,LOW(83)
000699 e0f0      	LDI  R31,HIGH(83)
00069a 940c 0801 	JMP  _0x2140003
                 _0x2020004:
00069c 81e8      	LD   R30,Y
00069d 81f9      	LDD  R31,Y+1
00069e 940c 0801 	JMP  _0x2140003
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
0006a0 940e 08f5 	CALL SUBOPT_0x10
0006a2 f024      	BRLT _0x2020005
0006a3 e0e0      	LDI  R30,LOW(0)
0006a4 e0f0      	LDI  R31,HIGH(0)
0006a5 940c 0801 	JMP  _0x2140003
                 _0x2020005:
0006a7 81a8      	LD   R26,Y
0006a8 81b9      	LDD  R27,Y+1
0006a9 97d0      	SBIW R26,48
0006aa f024      	BRLT _0x2020006
0006ab e2ef      	LDI  R30,LOW(47)
0006ac e0f0      	LDI  R31,HIGH(47)
0006ad 940c 0801 	JMP  _0x2140003
                 _0x2020006:
0006af 81e8      	LD   R30,Y
0006b0 81f9      	LDD  R31,Y+1
0006b1 940c 0801 	JMP  _0x2140003
                 ; .FEND
                 _glcd_getcharw_G101:
                 ; .FSTART _glcd_getcharw_G101
0006b3 93ba      	ST   -Y,R27
0006b4 93aa      	ST   -Y,R26
0006b5 9723      	SBIW R28,3
0006b6 940e 08fc 	CALL SUBOPT_0x11
0006b8 018f      	MOVW R16,R30
0006b9 2e00      	MOV  R0,R16
0006ba 2a01      	OR   R0,R17
0006bb f419      	BRNE _0x202000B
0006bc e0e0      	LDI  R30,LOW(0)
0006bd e0f0      	LDI  R31,HIGH(0)
0006be c05f      	RJMP _0x2140007
                 _0x202000B:
0006bf 940e 0903 	CALL SUBOPT_0x12
0006c1 820f      	STD  Y+7,R0
0006c2 940e 0903 	CALL SUBOPT_0x12
0006c4 820e      	STD  Y+6,R0
0006c5 940e 0903 	CALL SUBOPT_0x12
0006c7 8608      	STD  Y+8,R0
0006c8 85eb      	LDD  R30,Y+11
0006c9 85a8      	LDD  R26,Y+8
0006ca 17ea      	CP   R30,R26
0006cb f418      	BRSH _0x202000C
0006cc e0e0      	LDI  R30,LOW(0)
0006cd e0f0      	LDI  R31,HIGH(0)
0006ce c04f      	RJMP _0x2140007
                 _0x202000C:
0006cf 01f8      	MOVW R30,R16
                +
0006d0 5f0f     +SUBI R16 , LOW ( - 1 )
0006d1 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0006d2 9154      	LPM  R21,Z
0006d3 85a8      	LDD  R26,Y+8
0006d4 27bb      	CLR  R27
0006d5 27ee      	CLR  R30
0006d6 0fa5      	ADD  R26,R21
0006d7 1fbe      	ADC  R27,R30
0006d8 85eb      	LDD  R30,Y+11
0006d9 e0f0      	LDI  R31,0
0006da 17ea      	CP   R30,R26
0006db 07fb      	CPC  R31,R27
0006dc f018      	BRLO _0x202000D
0006dd e0e0      	LDI  R30,LOW(0)
0006de e0f0      	LDI  R31,HIGH(0)
0006df c03e      	RJMP _0x2140007
                 _0x202000D:
0006e0 81ee      	LDD  R30,Y+6
0006e1 95e6      	LSR  R30
0006e2 95e6      	LSR  R30
0006e3 95e6      	LSR  R30
0006e4 2f4e      	MOV  R20,R30
0006e5 81ee      	LDD  R30,Y+6
0006e6 70e7      	ANDI R30,LOW(0x7)
0006e7 f009      	BREQ _0x202000E
0006e8 5f4f      	SUBI R20,-LOW(1)
                 _0x202000E:
0006e9 81ef      	LDD  R30,Y+7
0006ea 30e0      	CPI  R30,0
0006eb f0a1      	BREQ _0x202000F
0006ec 85a9      	LDD  R26,Y+9
0006ed 85ba      	LDD  R27,Y+9+1
0006ee 93ec      	ST   X,R30
0006ef 85a8      	LDD  R26,Y+8
0006f0 85eb      	LDD  R30,Y+11
0006f1 1bea      	SUB  R30,R26
0006f2 e0f0      	LDI  R31,0
0006f3 01df      	MOVW R26,R30
0006f4 81ef      	LDD  R30,Y+7
0006f5 e0f0      	LDI  R31,0
0006f6 940e 0938 	CALL __MULW12U
0006f8 01df      	MOVW R26,R30
0006f9 2fe4      	MOV  R30,R20
0006fa e0f0      	LDI  R31,0
0006fb 940e 0938 	CALL __MULW12U
0006fd 0fe0      	ADD  R30,R16
0006fe 1ff1      	ADC  R31,R17
0006ff c01e      	RJMP _0x2140007
                 _0x202000F:
000700 0198      	MOVW R18,R16
000701 2fe5      	MOV  R30,R21
000702 e0f0      	LDI  R31,0
                +
000703 0f0e     +ADD R16 , R30
000704 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2020010:
000705 85a8      	LDD  R26,Y+8
000706 5faf      	SUBI R26,-LOW(1)
000707 87a8      	STD  Y+8,R26
000708 50a1      	SUBI R26,LOW(1)
000709 85eb      	LDD  R30,Y+11
00070a 17ae      	CP   R26,R30
00070b f460      	BRSH _0x2020012
00070c 01f9      	MOVW R30,R18
                +
00070d 5f2f     +SUBI R18 , LOW ( - 1 )
00070e 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00070f 91a4      	LPM  R26,Z
000710 e0b0      	LDI  R27,0
000711 2fe4      	MOV  R30,R20
000712 e0f0      	LDI  R31,0
000713 940e 0938 	CALL __MULW12U
                +
000715 0f0e     +ADD R16 , R30
000716 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
000717 cfed      	RJMP _0x2020010
                 _0x2020012:
000718 01f9      	MOVW R30,R18
000719 91e4      	LPM  R30,Z
00071a 85a9      	LDD  R26,Y+9
00071b 85ba      	LDD  R27,Y+9+1
00071c 93ec      	ST   X,R30
00071d 01f8      	MOVW R30,R16
                 _0x2140007:
00071e 940e 096c 	CALL __LOADLOCR6
000720 962c      	ADIW R28,12
000721 9508      	RET
                 ; .FEND
                 _glcd_new_line_G101:
                 ; .FSTART _glcd_new_line_G101
000722 e0e0      	LDI  R30,LOW(0)
                +
000723 93e0 0541+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
000725 91a0 0542+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000727 27bb      	CLR  R27
000728 940e 0908 	CALL SUBOPT_0x13
00072a e0f0      	LDI  R31,0
00072b 0fae      	ADD  R26,R30
00072c 1fbf      	ADC  R27,R31
                +
00072d 91e0 0546+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
00072f e0f0      	LDI  R31,0
000730 0fae      	ADD  R26,R30
000731 1fbf      	ADC  R27,R31
000732 df6d      	RCALL _glcd_clipy
                +
000733 93e0 0542+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000735 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
000736 93aa      	ST   -Y,R26
000737 9721      	SBIW R28,1
000738 940e 08fc 	CALL SUBOPT_0x11
00073a 9730      	SBIW R30,0
00073b f409      	BRNE PC+2
00073c c055      	RJMP _0x202001F
00073d 81af      	LDD  R26,Y+7
00073e 30aa      	CPI  R26,LOW(0xA)
00073f f409      	BRNE _0x2020020
000740 c04f      	RJMP _0x2020021
                 _0x2020020:
000741 81ef      	LDD  R30,Y+7
000742 93ea      	ST   -Y,R30
000743 01de      	MOVW R26,R28
000744 9617      	ADIW R26,7
000745 df6d      	RCALL _glcd_getcharw_G101
000746 01af      	MOVW R20,R30
000747 9730      	SBIW R30,0
000748 f409      	BRNE _0x2020022
000749 c04a      	RJMP _0x2140005
                 _0x2020022:
                +
00074a 91e0 0545+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
00074c 81ae      	LDD  R26,Y+6
00074d 0fea      	ADD  R30,R26
00074e 2f3e      	MOV  R19,R30
                +
00074f 91a0 0541+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
000751 27bb      	CLR  R27
000752 e0f0      	LDI  R31,0
000753 0fea      	ADD  R30,R26
000754 1ffb      	ADC  R31,R27
000755 018f      	MOVW R16,R30
                +
000756 3505     +CPI R16 , LOW ( 85 )
000757 e0e0     +LDI R30 , HIGH ( 85 )
000758 071e     +CPC R17 , R30
                 	__CPWRN 16,17,85
000759 f018      	BRLO _0x2020023
00075a 2f03      	MOV  R16,R19
00075b 2711      	CLR  R17
00075c dfc5      	RCALL _glcd_new_line_G101
                 _0x2020023:
                +
00075d 91e0 0541+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
00075f 93ea      	ST   -Y,R30
                +
000760 91e0 0542+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000762 93ea      	ST   -Y,R30
000763 85e8      	LDD  R30,Y+8
000764 93ea      	ST   -Y,R30
000765 940e 0908 	CALL SUBOPT_0x13
000767 93ea      	ST   -Y,R30
000768 e0e1      	LDI  R30,LOW(1)
000769 93ea      	ST   -Y,R30
00076a 935a      	ST   -Y,R21
00076b 934a      	ST   -Y,R20
00076c e0a7      	LDI  R26,LOW(7)
00076d dd3c      	RCALL _glcd_block
                +
00076e 91e0 0541+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000770 81ae      	LDD  R26,Y+6
000771 0fea      	ADD  R30,R26
000772 93ea      	ST   -Y,R30
                +
000773 91e0 0542+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000775 93ea      	ST   -Y,R30
                +
000776 91e0 0545+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000778 93ea      	ST   -Y,R30
000779 940e 0908 	CALL SUBOPT_0x13
00077b 940e 090f 	CALL SUBOPT_0x14
                +
00077d 91e0 0541+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
00077f 93ea      	ST   -Y,R30
                +
000780 91a0 0542+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000782 940e 0908 	CALL SUBOPT_0x13
000784 0fea      	ADD  R30,R26
000785 93ea      	ST   -Y,R30
000786 933a      	ST   -Y,R19
                +
000787 91e0 0546+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000789 940e 090f 	CALL SUBOPT_0x14
00078b e5e4      	LDI  R30,LOW(84)
00078c e0f0      	LDI  R31,HIGH(84)
00078d 17e0      	CP   R30,R16
00078e 07f1      	CPC  R31,R17
00078f f411      	BRNE _0x2020024
                 _0x2020021:
000790 df91      	RCALL _glcd_new_line_G101
000791 c002      	RJMP _0x2140005
                 _0x2020024:
                 _0x202001F:
                +
000792 9300 0541+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
                 _0x2140005:
000794 940e 096c 	CALL __LOADLOCR6
                 _0x2140006:
000796 9628      	ADIW R28,8
000797 9508      	RET
                 ; .FEND
                 _glcd_outtextxy:
                 ; .FSTART _glcd_outtextxy
000798 93ba      	ST   -Y,R27
000799 93aa      	ST   -Y,R26
00079a 931a      	ST   -Y,R17
00079b 81ec      	LDD  R30,Y+4
00079c 93ea      	ST   -Y,R30
00079d 81ac      	LDD  R26,Y+4
00079e d00e      	RCALL _glcd_moveto
                 _0x2020025:
00079f 81a9      	LDD  R26,Y+1
0007a0 81ba      	LDD  R27,Y+1+1
0007a1 91ed      	LD   R30,X+
0007a2 83a9      	STD  Y+1,R26
0007a3 83ba      	STD  Y+1+1,R27
0007a4 2f1e      	MOV  R17,R30
0007a5 30e0      	CPI  R30,0
0007a6 f019      	BREQ _0x2020027
0007a7 2fa1      	MOV  R26,R17
0007a8 df8d      	RCALL _glcd_putchar
0007a9 cff5      	RJMP _0x2020025
                 _0x2020027:
0007aa 8118      	LDD  R17,Y+0
0007ab 940c 07f6 	JMP  _0x2140004
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
0007ad 93aa      	ST   -Y,R26
0007ae 81a9      	LDD  R26,Y+1
0007af 27bb      	CLR  R27
0007b0 deda      	RCALL _glcd_clipx
                +
0007b1 93e0 0541+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
0007b3 81a8      	LD   R26,Y
0007b4 27bb      	CLR  R27
0007b5 deea      	RCALL _glcd_clipy
                +
0007b6 93e0 0542+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
0007b8 940c 0801 	JMP  _0x2140003
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 
                 	.CSEG
                 _itoa:
                 ; .FSTART _itoa
0007ba 93ba      	ST   -Y,R27
0007bb 93aa      	ST   -Y,R26
0007bc 91a9          ld   r26,y+
0007bd 91b9          ld   r27,y+
0007be 91e9          ld   r30,y+
0007bf 91f9          ld   r31,y+
0007c0 9630          adiw r30,0
0007c1 f42a          brpl __itoa0
0007c2 95e0          com  r30
0007c3 95f0          com  r31
0007c4 9631          adiw r30,1
0007c5 e26d          ldi  r22,'-'
0007c6 936d          st   x+,r22
                 __itoa0:
0007c7 94e8          clt
0007c8 e180          ldi  r24,low(10000)
0007c9 e297          ldi  r25,high(10000)
0007ca d00d          rcall __itoa1
0007cb ee88          ldi  r24,low(1000)
0007cc e093          ldi  r25,high(1000)
0007cd d00a          rcall __itoa1
0007ce e684          ldi  r24,100
0007cf 2799          clr  r25
0007d0 d007          rcall __itoa1
0007d1 e08a          ldi  r24,10
0007d2 d005          rcall __itoa1
0007d3 2f6e          mov  r22,r30
0007d4 d010          rcall __itoa5
0007d5 2766          clr  r22
0007d6 936c          st   x,r22
0007d7 9508          ret
                 
                 __itoa1:
0007d8 2766          clr	 r22
                 __itoa2:
0007d9 17e8          cp   r30,r24
0007da 07f9          cpc  r31,r25
0007db f020          brlo __itoa3
0007dc 9563          inc  r22
0007dd 1be8          sub  r30,r24
0007de 0bf9          sbc  r31,r25
0007df f7c9          brne __itoa2
                 __itoa3:
0007e0 2366          tst  r22
0007e1 f411          brne __itoa4
0007e2 f016          brts __itoa5
0007e3 9508          ret
                 __itoa4:
0007e4 9468          set
                 __itoa5:
0007e5 5d60          subi r22,-0x30
0007e6 936d          st   x+,r22
0007e7 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
0007e8 93ba      	ST   -Y,R27
0007e9 93aa      	ST   -Y,R26
0007ea 81b9          ldd  r27,y+1
0007eb 81a8          ld   r26,y
0007ec 9610          adiw r26,0
0007ed f031          breq memset1
0007ee 81fc          ldd  r31,y+4
0007ef 81eb          ldd  r30,y+3
0007f0 816a          ldd  r22,y+2
                 memset0:
0007f1 9361          st   z+,r22
0007f2 9711          sbiw r26,1
0007f3 f7e9          brne memset0
                 memset1:
0007f4 81eb          ldd  r30,y+3
0007f5 81fc          ldd  r31,y+4
                 _0x2140004:
0007f6 9625      	ADIW R28,5
0007f7 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
0007f8 93aa      	ST   -Y,R26
0007f9 81e8      	LD   R30,Y
0007fa e0f0      	LDI  R31,0
0007fb 59e0      	SUBI R30,LOW(-__glcd_mask*2)
0007fc 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
0007fd 91a4      	LPM  R26,Z
0007fe 81e9      	LDD  R30,Y+1
0007ff 940e 0923 	CALL __LSLB12
                 _0x2140003:
000801 9622      	ADIW R28,2
000802 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
000803 93aa      	ST   -Y,R26
000804 931a      	ST   -Y,R17
000805 81e9      	LDD  R30,Y+1
000806 30e7      	CPI  R30,LOW(0x7)
000807 f011      	BREQ _0x20E0007
000808 30ea      	CPI  R30,LOW(0xA)
000809 f419      	BRNE _0x20E0008
                 _0x20E0007:
00080a 9110 053f 	LDS  R17,_glcd_state
00080c c009      	RJMP _0x20E0009
                 _0x20E0008:
00080d 30e9      	CPI  R30,LOW(0x9)
00080e f419      	BRNE _0x20E000B
                +
00080f 9110 0540+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
000811 c004      	RJMP _0x20E0009
                 _0x20E000B:
000812 30e8      	CPI  R30,LOW(0x8)
000813 f4a1      	BRNE _0x20E0005
                +
000814 9110 054f+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x20E0009:
                +
000816 91e0 0540+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000818 30e0      	CPI  R30,0
000819 f049      	BREQ _0x20E000E
00081a 3010      	CPI  R17,0
00081b f019      	BREQ _0x20E000F
00081c efef      	LDI  R30,LOW(255)
00081d 8118      	LDD  R17,Y+0
00081e c029      	RJMP _0x2140002
                 _0x20E000F:
00081f 81ea      	LDD  R30,Y+2
000820 95e0      	COM  R30
000821 8118      	LDD  R17,Y+0
000822 c025      	RJMP _0x2140002
                 _0x20E000E:
000823 3010      	CPI  R17,0
000824 f419      	BRNE _0x20E0011
000825 e0e0      	LDI  R30,LOW(0)
000826 8118      	LDD  R17,Y+0
000827 c020      	RJMP _0x2140002
                 _0x20E0011:
                 _0x20E0005:
000828 81ea      	LDD  R30,Y+2
000829 8118      	LDD  R17,Y+0
00082a c01d      	RJMP _0x2140002
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
00082b 93ba      	ST   -Y,R27
00082c 93aa      	ST   -Y,R26
00082d 81ea      	LDD  R30,Y+2
00082e 30e1      	CPI  R30,LOW(0x1)
00082f f421      	BRNE _0x20E0015
000830 81e8      	LD   R30,Y
000831 81f9      	LDD  R31,Y+1
000832 91e4      	LPM  R30,Z
000833 c014      	RJMP _0x2140002
                 _0x20E0015:
000834 30e2      	CPI  R30,LOW(0x2)
000835 f429      	BRNE _0x20E0016
000836 81a8      	LD   R26,Y
000837 81b9      	LDD  R27,Y+1
000838 940e 0944 	CALL __EEPROMRDB
00083a c00d      	RJMP _0x2140002
                 _0x20E0016:
00083b 30e3      	CPI  R30,LOW(0x3)
00083c f441      	BRNE _0x20E0018
00083d 81a8      	LD   R26,Y
00083e 81b9      	LDD  R27,Y+1
                +
00083f 91e0 0558+LDS R30 , _glcd_state + ( 25 )
000841 91f0 0559+LDS R31 , _glcd_state + ( 25 ) + 1
000843 9509     +ICALL
                 	__CALL1MN _glcd_state,25
000844 c003      	RJMP _0x2140002
                 _0x20E0018:
000845 81a8      	LD   R26,Y
000846 81b9      	LDD  R27,Y+1
000847 91ec      	LD   R30,X
                 _0x2140002:
000848 9623      	ADIW R28,3
000849 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
00084a 93aa      	ST   -Y,R26
00084b 81eb      	LDD  R30,Y+3
00084c 30e0      	CPI  R30,0
00084d f429      	BRNE _0x20E001C
00084e 81e8      	LD   R30,Y
00084f 81a9      	LDD  R26,Y+1
000850 81ba      	LDD  R27,Y+1+1
000851 93ec      	ST   X,R30
000852 c014      	RJMP _0x20E001B
                 _0x20E001C:
000853 30e2      	CPI  R30,LOW(0x2)
000854 f431      	BRNE _0x20E001D
000855 81e8      	LD   R30,Y
000856 81a9      	LDD  R26,Y+1
000857 81ba      	LDD  R27,Y+1+1
000858 940e 0950 	CALL __EEPROMWRB
00085a c00c      	RJMP _0x20E001B
                 _0x20E001D:
00085b 30e3      	CPI  R30,LOW(0x3)
00085c f451      	BRNE _0x20E001B
00085d 81e9      	LDD  R30,Y+1
00085e 81fa      	LDD  R31,Y+1+1
00085f 93fa      	ST   -Y,R31
000860 93ea      	ST   -Y,R30
000861 81aa      	LDD  R26,Y+2
                +
000862 91e0 055a+LDS R30 , _glcd_state + ( 27 )
000864 91f0 055b+LDS R31 , _glcd_state + ( 27 ) + 1
000866 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x20E001B:
                 _0x2140001:
000867 9624      	ADIW R28,4
000868 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _glcd_state:
00053f           	.BYTE 0x1D
                 _keypad:
00055c           	.BYTE 0x12
                 _tmp:
00056e           	.BYTE 0xA
                 _gfx_addr_G100:
000578           	.BYTE 0x2
                 _gfx_buffer_G100:
00057a           	.BYTE 0x1F8
                 __seed_G104:
000772           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x0:
000869 e0a6      	LDI  R26,LOW(6)
00086a 9f0a      	MUL  R16,R26
00086b 01f0      	MOVW R30,R0
00086c 5ae4      	SUBI R30,LOW(-_keypad)
00086d 4ffa      	SBCI R31,HIGH(-_keypad)
00086e 01df      	MOVW R26,R30
00086f 2fe3      	MOV  R30,R19
000870 e0f0      	LDI  R31,0
000871 0fee      	LSL  R30
000872 1fff      	ROL  R31
000873 0fae      	ADD  R26,R30
000874 1fbf      	ADC  R27,R31
000875 940e 0940 	CALL __GETW1P
000877 940e 096e 	CALL __LOADLOCR4
000879 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1:
00087a 93ba      	ST   -Y,R27
00087b 93aa      	ST   -Y,R26
00087c 940e 0453 	CALL _glcd_clear
00087e e0ef      	LDI  R30,LOW(15)
00087f 93ea      	ST   -Y,R30
000880 e1e4      	LDI  R30,LOW(20)
000881 93ea      	ST   -Y,R30
000882 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2:
000883 93fa      	ST   -Y,R31
000884 93ea      	ST   -Y,R30
000885 e6ae      	LDI  R26,LOW(_tmp)
000886 e0b5      	LDI  R27,HIGH(_tmp)
000887 940e 07ba 	CALL _itoa
000889 e1ee      	LDI  R30,LOW(30)
00088a 93ea      	ST   -Y,R30
00088b 93ea      	ST   -Y,R30
00088c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
                +
00088d e000     +LDI R16 , LOW ( 0 )
00088e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
00088f ef2f     +LDI R18 , LOW ( - 1 )
000890 ef3f     +LDI R19 , HIGH ( - 1 )
                 	__GETWRN 18,19,-1
                +
000891 e040     +LDI R20 , LOW ( 0 )
000892 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
000893 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4:
000894 93fa      	ST   -Y,R31
000895 93ea      	ST   -Y,R30
000896 01fe      	MOVW R30,R28
000897 9632      	ADIW R30,2
000898 93fa      	ST   -Y,R31
000899 93ea      	ST   -Y,R30
00089a e1ae      	LDI  R26,LOW(30)
00089b e0b0      	LDI  R27,0
00089c 940c 0238 	JMP  _mainScreen2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x5:
00089e e7a8      	LDI  R26,LOW(_gfx_addr_G100)
00089f e0b5      	LDI  R27,HIGH(_gfx_addr_G100)
0008a0 91ed      	LD   R30,X+
0008a1 91fd      	LD   R31,X+
0008a2 9631      	ADIW R30,1
0008a3 93fe      	ST   -X,R31
0008a4 93ee      	ST   -X,R30
0008a5 9731      	SBIW R30,1
0008a6 58e6      	SUBI R30,LOW(-_gfx_buffer_G100)
0008a7 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G100)
0008a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
0008a9 93e0 0064 	STS  100,R30
0008ab 91e0 0065 	LDS  R30,101
0008ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
0008ae 0fea      	ADD  R30,R26
0008af 1ffb      	ADC  R31,R27
0008b0 83ee      	STD  Y+6,R30
0008b1 83ff      	STD  Y+6+1,R31
0008b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x8:
0008b3 85ec      	LDD  R30,Y+12
0008b4 93ea      	ST   -Y,R30
0008b5 81ef      	LDD  R30,Y+7
0008b6 85f8      	LDD  R31,Y+7+1
0008b7 9631      	ADIW R30,1
0008b8 83ef      	STD  Y+7,R30
0008b9 87f8      	STD  Y+7+1,R31
0008ba 9731      	SBIW R30,1
0008bb 93fa      	ST   -Y,R31
0008bc 93ea      	ST   -Y,R30
0008bd e0a0      	LDI  R26,LOW(0)
0008be 940c 084a 	JMP  _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
0008c0 930a      	ST   -Y,R16
0008c1 89a8      	LDD  R26,Y+16
0008c2 940c 0372 	JMP  _pcd8544_setaddr_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0xA:
0008c4 85ec      	LDD  R30,Y+12
0008c5 93ea      	ST   -Y,R30
0008c6 81ef      	LDD  R30,Y+7
0008c7 85f8      	LDD  R31,Y+7+1
0008c8 9631      	ADIW R30,1
0008c9 83ef      	STD  Y+7,R30
0008ca 87f8      	STD  Y+7+1,R31
0008cb 9731      	SBIW R30,1
0008cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB:
0008cd 2766      	CLR  R22
0008ce 2777      	CLR  R23
0008cf 01df      	MOVW R26,R30
0008d0 01cb      	MOVW R24,R22
0008d1 940c 082b 	JMP  _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
0008d3 935a      	ST   -Y,R21
0008d4 85aa      	LDD  R26,Y+10
0008d5 940c 0803 	JMP  _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xD:
0008d7 930a      	ST   -Y,R16
0008d8 9503      	INC  R16
0008d9 89e8      	LDD  R30,Y+16
0008da 93ea      	ST   -Y,R30
0008db 935a      	ST   -Y,R21
0008dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xE:
0008dd 2f5e      	MOV  R21,R30
0008de 85ec      	LDD  R30,Y+12
0008df 93ea      	ST   -Y,R30
0008e0 81af      	LDD  R26,Y+7
0008e1 85b8      	LDD  R27,Y+7+1
0008e2 2788      	CLR  R24
0008e3 2799      	CLR  R25
0008e4 940e 082b 	CALL _glcd_readmem
0008e6 2e1e      	MOV  R1,R30
0008e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xF:
0008e8 930a      	ST   -Y,R16
0008e9 9503      	INC  R16
0008ea 89e8      	LDD  R30,Y+16
0008eb 93ea      	ST   -Y,R30
0008ec 85ee      	LDD  R30,Y+14
0008ed 93ea      	ST   -Y,R30
0008ee 85e9      	LDD  R30,Y+9
0008ef 85fa      	LDD  R31,Y+9+1
0008f0 9631      	ADIW R30,1
0008f1 87e9      	STD  Y+9,R30
0008f2 87fa      	STD  Y+9+1,R31
0008f3 9731      	SBIW R30,1
0008f4 cfd8      	RJMP SUBOPT_0xB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
0008f5 93ba      	ST   -Y,R27
0008f6 93aa      	ST   -Y,R26
0008f7 81a8      	LD   R26,Y
0008f8 81b9      	LDD  R27,Y+1
0008f9 940e 0961 	CALL __CPW02
0008fb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
0008fc 940e 0965 	CALL __SAVELOCR6
                +
0008fe 91e0 0543+LDS R30 , _glcd_state + ( 4 )
000900 91f0 0544+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000902 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
000903 01f8      	MOVW R30,R16
                +
000904 5f0f     +SUBI R16 , LOW ( - 1 )
000905 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000906 9004      	LPM  R0,Z
000907 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x13:
                +
000908 91e0 0543+LDS R30 , _glcd_state + ( 4 )
00090a 91f0 0544+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
00090c 9631      	ADIW R30,1
00090d 91e4      	LPM  R30,Z
00090e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x14:
00090f 93ea      	ST   -Y,R30
000910 e0e0      	LDI  R30,LOW(0)
000911 93ea      	ST   -Y,R30
000912 e0e0      	LDI  R30,LOW(0)
000913 e0f0      	LDI  R31,HIGH(0)
000914 93fa      	ST   -Y,R31
000915 93ea      	ST   -Y,R30
000916 e0a9      	LDI  R26,LOW(9)
000917 940c 04aa 	JMP  _glcd_block
                 
                 
                 	.CSEG
                 _delay_ms:
000919 9610      	adiw r26,0
00091a f039      	breq __delay_ms1
                 __delay_ms0:
                +
00091b ed80     +LDI R24 , LOW ( 0x7D0 )
00091c e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00091d 9701     +SBIW R24 , 1
00091e f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
00091f 95a8      	wdr
000920 9711      	sbiw r26,1
000921 f7c9      	brne __delay_ms0
                 __delay_ms1:
000922 9508      	ret
                 
                 __LSLB12:
000923 23ee      	TST  R30
000924 2e0e      	MOV  R0,R30
000925 2fea      	MOV  R30,R26
000926 f019      	BREQ __LSLB12R
                 __LSLB12L:
000927 0fee      	LSL  R30
000928 940a      	DEC  R0
000929 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
00092a 9508      	RET
                 
                 __LSRB12:
00092b 23ee      	TST  R30
00092c 2e0e      	MOV  R0,R30
00092d 2fea      	MOV  R30,R26
00092e f019      	BREQ __LSRB12R
                 __LSRB12L:
00092f 95e6      	LSR  R30
000930 940a      	DEC  R0
000931 f7e9      	BRNE __LSRB12L
                 __LSRB12R:
000932 9508      	RET
                 
                 __LSLW2:
000933 0fee      	LSL  R30
000934 1fff      	ROL  R31
000935 0fee      	LSL  R30
000936 1fff      	ROL  R31
000937 9508      	RET
                 
                 __MULW12U:
000938 9ffa      	MUL  R31,R26
000939 2df0      	MOV  R31,R0
00093a 9feb      	MUL  R30,R27
00093b 0df0      	ADD  R31,R0
00093c 9fea      	MUL  R30,R26
00093d 2de0      	MOV  R30,R0
00093e 0df1      	ADD  R31,R1
00093f 9508      	RET
                 
                 __GETW1P:
000940 91ed      	LD   R30,X+
000941 91fc      	LD   R31,X
000942 9711      	SBIW R26,1
000943 9508      	RET
                 
                 __EEPROMRDB:
000944 99e1      	SBIC EECR,EEWE
000945 cffe      	RJMP __EEPROMRDB
000946 93ff      	PUSH R31
000947 b7ff      	IN   R31,SREG
000948 94f8      	CLI
000949 bbae      	OUT  EEARL,R26
00094a bbbf      	OUT  EEARH,R27
00094b 9ae0      	SBI  EECR,EERE
00094c b3ed      	IN   R30,EEDR
00094d bfff      	OUT  SREG,R31
00094e 91ff      	POP  R31
00094f 9508      	RET
                 
                 __EEPROMWRB:
000950 9be1      	SBIS EECR,EEWE
000951 c002      	RJMP __EEPROMWRB1
000952 95a8      	WDR
000953 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
000954 b79f      	IN   R25,SREG
000955 94f8      	CLI
000956 bbae      	OUT  EEARL,R26
000957 bbbf      	OUT  EEARH,R27
000958 9ae0      	SBI  EECR,EERE
000959 b38d      	IN   R24,EEDR
00095a 17e8      	CP   R30,R24
00095b f019      	BREQ __EEPROMWRB0
00095c bbed      	OUT  EEDR,R30
00095d 9ae2      	SBI  EECR,EEMWE
00095e 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
00095f bf9f      	OUT  SREG,R25
000960 9508      	RET
                 
                 __CPW02:
000961 2400      	CLR  R0
000962 160a      	CP   R0,R26
000963 060b      	CPC  R0,R27
000964 9508      	RET
                 
                 __SAVELOCR6:
000965 935a      	ST   -Y,R21
                 __SAVELOCR5:
000966 934a      	ST   -Y,R20
                 __SAVELOCR4:
000967 933a      	ST   -Y,R19
                 __SAVELOCR3:
000968 932a      	ST   -Y,R18
                 __SAVELOCR2:
000969 931a      	ST   -Y,R17
00096a 930a      	ST   -Y,R16
00096b 9508      	RET
                 
                 __LOADLOCR6:
00096c 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00096d 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00096e 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00096f 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000970 8119      	LDD  R17,Y+1
000971 8108      	LD   R16,Y
000972 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128A register use summary:
r0 :  28 r1 :   5 r2 :   0 r3 :   0 r4 :   5 r5 :   3 r6 :   6 r7 :   4 
r8 :   3 r9 :   1 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:  51 r17:  80 r18:  32 r19:  40 r20:  24 r21:  37 r22:  16 r23:   1 
r24:  20 r25:  11 r26: 247 r27:  85 r28:  24 r29:   1 r30: 681 r31: 147 
x  :  18 y  : 409 z  :  24 
Registers used: 27 out of 35 (77.1%)

ATmega128A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  16 add   :  23 
adiw  :  30 and   :   8 andi  :  20 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  36 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   6 
brlt  :   5 brmi  :   0 brne  :  68 brpl  :   1 brsh  :  18 brtc  :   0 
brts  :   1 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  : 114 
cbi   :   5 cbr   :   0 clc   :   0 clh   :   0 cli   :   3 cln   :   0 
clr   :  26 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   9 
cp    :  27 cpc   :  18 cpi   :  76 cpse  :   0 dec   :   3 des   :   0 
elpm  :   0 eor   :   1 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 
ijmp  :   0 in    :   8 inc   :   3 jmp   :  57 ld    :  40 ldd   : 210 
ldi   : 217 lds   :  44 lpm   :  23 lsl   :   5 lsr   :  15 mov   :  82 
movw  :  37 mul   :   7 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 
or    :   6 ori   :  18 out   :  20 pop   :  11 push  :  11 rcall :  51 
ret   :  41 reti  :   1 rjmp  :  92 rol   :   3 ror   :   0 sbc   :   1 
sbci  :  10 sbi   :  10 sbic  :   1 sbis  :   1 sbiw  :  26 sbr   :   0 
sbrc  :   0 sbrs  :   0 sec   :   0 seh   :   0 sei   :   1 sen   :   0 
ser   :   0 ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    : 145 std   :  41 sts   :  44 sub   :   7 subi  :  33 
swap  :   0 tst   :   3 wdr   :   2 
Instructions used: 62 out of 117 (53.0%)

ATmega128A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0012e6   4192    646   4838  131072   3.7%
[.dseg] 0x000100 0x000776      0    630    630    4096  15.4%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 11 warnings
