
AVRASM ver. 2.1.30  D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_11\Debug\List\bai1.asm Sat Dec 21 16:33:41 2024

D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_11\Debug\List\bai1.asm(1090): warning: Register r4 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_11\Debug\List\bai1.asm(1091): warning: Register r5 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_11\Debug\List\bai1.asm(1092): warning: Register r6 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_11\Debug\List\bai1.asm(1093): warning: Register r7 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_11\Debug\List\bai1.asm(1094): warning: Register r8 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_11\Debug\List\bai1.asm(1095): warning: Register r9 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_11\Debug\List\bai1.asm(1096): warning: Register r10 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_11\Debug\List\bai1.asm(1097): warning: Register r11 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128A
                 ;Program type           : Application
                 ;Clock frequency        : 8,000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128A
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _miss=R4
                 	.DEF _miss_msb=R5
                 	.DEF _counter=R6
                 	.DEF _counter_msb=R7
                 	.DEF _dem_sai=R8
                 	.DEF _dem_sai_msb=R9
                 	.DEF _sai_toi_da=R10
                 	.DEF _sai_toi_da_msb=R11
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 018a 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 01ba 	JMP  _timer0_ovf_isr
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _font5x7:
000046 0705
000047 6020
000048 0000
000049 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
00004a 0000
00004b 5f00
00004c 0000
00004d 0700      	.DB  0x0,0x0,0x0,0x5F,0x0,0x0,0x0,0x7
00004e 0700
00004f 1400
000050 147f
000051 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
000052 2a24
000053 2a7f
000054 2312
000055 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
000056 6264
000057 4936
000058 2255
000059 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
00005a 0305
00005b 0000
00005c 1c00
00005d 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
00005e 0000
00005f 2241
000060 001c
000061 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
000062 2a1c
000063 0808
000064 3e08
000065 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
000066 5000
000067 0030
000068 0800
000069 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
00006a 0808
00006b 3000
00006c 0030
00006d 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
00006e 0810
00006f 0204
000070 513e
000071 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
000072 003e
000073 7f42
000074 0040
000075 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
000076 4951
000077 2146
000078 4541
000079 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
00007a 1418
00007b 7f12
00007c 2710
00007d 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
00007e 3945
00007f 4a3c
000080 4949
000081 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
000082 0971
000083 0305
000084 4936
000085 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
000086 0636
000087 4949
000088 1e29
000089 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
00008a 0036
00008b 0000
00008c 3656
00008d 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
00008e 0800
00008f 2214
000090 1441
000091 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
000092 1414
000093 2241
000094 0814
000095 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
000096 5101
000097 0609
000098 4932
000099 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
00009a 7e3e
00009b 1111
00009c 7e11
00009d 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
00009e 4949
00009f 3e36
0000a0 4141
0000a1 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
0000a2 417f
0000a3 2241
0000a4 7f1c
0000a5 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
0000a6 4149
0000a7 097f
0000a8 0109
0000a9 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
0000aa 4141
0000ab 3251
0000ac 087f
0000ad 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
0000ae 007f
0000af 7f41
0000b0 0041
0000b1 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
0000b2 3f41
0000b3 7f01
0000b4 1408
0000b5 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
0000b6 407f
0000b7 4040
0000b8 7f40
0000b9 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
0000ba 7f02
0000bb 047f
0000bc 1008
0000bd 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
0000be 4141
0000bf 3e41
0000c0 097f
0000c1 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
0000c2 3e06
0000c3 5141
0000c4 5e21
0000c5 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
0000c6 2919
0000c7 4646
0000c8 4949
0000c9 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
0000ca 0101
0000cb 017f
0000cc 3f01
0000cd 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
0000ce 3f40
0000cf 201f
0000d0 2040
0000d1 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
0000d2 1820
0000d3 7f20
0000d4 1463
0000d5 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000d6 0363
0000d7 7804
0000d8 0304
0000d9 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000da 4549
0000db 0043
0000dc 7f00
0000dd 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000de 0402
0000df 1008
0000e0 4120
0000e1 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000e2 0000
0000e3 0204
0000e4 0201
0000e5 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000e6 4040
0000e7 4040
0000e8 0100
0000e9 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000ea 2000
0000eb 5454
0000ec 7854
0000ed 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000ee 4444
0000ef 3838
0000f0 4444
0000f1 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000f2 4438
0000f3 4844
0000f4 387f
0000f5 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000f6 1854
0000f7 7e08
0000f8 0109
0000f9 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000fa 5414
0000fb 3c54
0000fc 087f
0000fd 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000fe 0078
0000ff 7d44
000100 0040
000101 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
000102 3d44
000103 0000
000104 107f
000105 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
000106 4100
000107 407f
000108 7c00
000109 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
00010a 7804
00010b 087c
00010c 0404
00010d 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
00010e 4444
00010f 3844
000110 147c
000111 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
000112 0808
000113 1414
000114 7c18
000115 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
000116 0404
000117 4808
000118 5454
000119 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
00011a 3f04
00011b 4044
00011c 3c20
00011d 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
00011e 7c20
00011f 201c
000120 2040
000121 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
000122 3040
000123 3c40
000124 2844
000125 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
000126 0c44
000127 5050
000128 3c50
000129 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
00012a 4c54
00012b 0044
00012c 3608
00012d 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
00012e 0000
00012f 007f
000130 0000
000131 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
000132 0008
000133 0102
000134 0402
000135 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
000136 4141
000137 7f41      	.DB  0x41,0x41,0x41,0x7F
                 __glcd_mask:
000138 0100
000139 0703
00013a 1f0f
00013b 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_11\Debug\List\bai1.asm(1206): warning: .cseg .db misalignment - padding zero byte
00013c 00ff      	.DB  0xFF
                 _tbl10_G103:
00013d 2710
00013e 03e8
00013f 0064
000140 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000141 0001      	.DB  0x1,0x0
                 _tbl16_G103:
000142 1000
000143 0100
000144 0010
000145 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000146 0000
000147 0000      	.DB  0x0,0x0,0x0,0x0
000148 0000
000149 0004      	.DB  0x0,0x0,0x4,0x0
                 
                 _0x3:
00014a 0000
00014b 0001
00014c 0002
00014d 0003      	.DB  0x0,0x0,0x1,0x0,0x2,0x0,0x3,0x0
00014e 0004
00014f 0005
000150 0006
000151 0007      	.DB  0x4,0x0,0x5,0x0,0x6,0x0,0x7,0x0
D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_11\Debug\List\bai1.asm(1221): warning: .cseg .db misalignment - padding zero byte
000152 0008      	.DB  0x8
                 _0x0:
000153 4150
000154 5353
000155 4f57
000156 4452      	.DB  0x50,0x41,0x53,0x53,0x57,0x4F,0x52,0x44
000157 003f
000158 4f4e
000159 003f
00015a 686b      	.DB  0x3F,0x0,0x4E,0x4F,0x3F,0x0,0x6B,0x68
00015b 616f
00015c 7420
00015d 6968
00015e 7465      	.DB  0x6F,0x61,0x20,0x74,0x68,0x69,0x65,0x74
00015f 6220
000160 0069
000161 4150
000162 5353      	.DB  0x20,0x62,0x69,0x0,0x50,0x41,0x53,0x53
000163 4445
D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_11\Debug\List\bai1.asm(1227): warning: .cseg .db misalignment - padding zero byte
000164 0000      	.DB  0x45,0x44,0x0
                 _0x2080060:
D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_11\Debug\List\bai1.asm(1229): warning: .cseg .db misalignment - padding zero byte
000165 0001      	.DB  0x1
                 _0x2080000:
000166 4e2d
000167 4e41
000168 4900
000169 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_11\Debug\List\bai1.asm(1232): warning: .cseg .db misalignment - padding zero byte
00016a 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00016b 0008      	.DW  0x08
00016c 0004      	.DW  0x04
00016d 028c      	.DW  __REG_VARS*2
                 
00016e 0011      	.DW  0x11
00016f 055e      	.DW  _keypad
000170 0294      	.DW  _0x3*2
                 
000171 000a      	.DW  0x0A
000172 0500      	.DW  _0x2D
000173 02a6      	.DW  _0x0*2
                 
000174 000a      	.DW  0x0A
000175 050a      	.DW  _0x2D+10
000176 02a6      	.DW  _0x0*2
                 
000177 000a      	.DW  0x0A
000178 0514      	.DW  _0x2D+20
000179 02a6      	.DW  _0x0*2
                 
00017a 000a      	.DW  0x0A
00017b 051e      	.DW  _0x2D+30
00017c 02a6      	.DW  _0x0*2
                 
00017d 0004      	.DW  0x04
00017e 0528      	.DW  _0x2D+40
00017f 02b0      	.DW  _0x0*2+10
                 
000180 000e      	.DW  0x0E
000181 052c      	.DW  _0x2D+44
000182 02b4      	.DW  _0x0*2+14
                 
000183 0007      	.DW  0x07
000184 053a      	.DW  _0x2D+58
000185 02c2      	.DW  _0x0*2+28
                 
000186 0001      	.DW  0x01
000187 077e      	.DW  __seed_G104
000188 02ca      	.DW  _0x2080060*2
                 
                 _0xFFFFFFFF:
000189 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00018a 94f8      	CLI
00018b 27ee      	CLR  R30
00018c bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00018d e0f1      	LDI  R31,1
00018e bff5      	OUT  MCUCR,R31
00018f bfe5      	OUT  MCUCR,R30
000190 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
000192 e08d      	LDI  R24,(14-2)+1
000193 e0a2      	LDI  R26,2
000194 27bb      	CLR  R27
                 __CLEAR_REG:
000195 93ed      	ST   X+,R30
000196 958a      	DEC  R24
000197 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000198 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000199 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00019a e0a0      	LDI  R26,LOW(__SRAM_START)
00019b e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
00019c 93ed      	ST   X+,R30
00019d 9701      	SBIW R24,1
00019e f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00019f ede6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0001a0 e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0001a1 9185      	LPM  R24,Z+
0001a2 9195      	LPM  R25,Z+
0001a3 9700      	SBIW R24,0
0001a4 f061      	BREQ __GLOBAL_INI_END
0001a5 91a5      	LPM  R26,Z+
0001a6 91b5      	LPM  R27,Z+
0001a7 9005      	LPM  R0,Z+
0001a8 9015      	LPM  R1,Z+
0001a9 01bf      	MOVW R22,R30
0001aa 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0001ab 9005      	LPM  R0,Z+
0001ac 920d      	ST   X+,R0
0001ad 9701      	SBIW R24,1
0001ae f7e1      	BRNE __GLOBAL_INI_LOOP
0001af 01fb      	MOVW R30,R22
0001b0 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0001b1 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0001b2 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0001b3 bfed      	OUT  SPL,R30
0001b4 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0001b5 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0001b6 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0001b7 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0001b8 940c 0323 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;/*
                 ; * bai1.c
                 ; *
                 ; * Created: 12/8/2022 9:06:36 PM
                 ; * Author: Who
                 ; */
                 ;
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <glcd.h>
                 ;#include <font5x7.h>
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <eeprom.h>
                 ;
                 ;// macro for easier usage
                 ;#define read_eeprom_word(address) eeprom_read_word ((const unsigned int*)address)
                 ;#define write_eeprom_word(address,value) eeprom_write_word ((unsigned int*)address,(unsigned int)value)
                 ;#define update_eeprom_word(address,value) eeprom_update_word ((unsigned int*)address,(unsigned int)value)
                 ;unsigned int EEMEM my_eeprom;
                 ;
                 ;int keypad[3][3] = {0,1,2,3,4,5,6,7,8};
                 
                 	.DSEG
                 ;char tmp[10];
                 ;char tmp2[10];
                 ;int miss = 0;
                 ;int counter = 0;
                 ;int dem_sai = 0;
                 ;int sai_toi_da = 4;
                 ;
                 ;// Timer 0 overflow interrupt service routine with 1 ms
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0000 0020 {
                 
                 	.CSEG
                 _timer0_ovf_isr:
                 ; .FSTART _timer0_ovf_isr
0001ba 920a      	ST   -Y,R0
0001bb 93ea      	ST   -Y,R30
0001bc 93fa      	ST   -Y,R31
0001bd b7ef      	IN   R30,SREG
0001be 93ea      	ST   -Y,R30
                 ; 0000 0021     TCNT0=0x06;
0001bf e0e6      	LDI  R30,LOW(6)
0001c0 bfe2      	OUT  0x32,R30
                 ; 0000 0022     // Place your code here
                 ; 0000 0023     if (dem_sai >= sai_toi_da) {
                +
0001c1 148a     +CP R8 , R10
0001c2 049b     +CPC R9 , R11
                 	__CPWRR 8,9,10,11
0001c3 f0bc      	BRLT _0x4
                 ; 0000 0024         if (counter == 2000)
0001c4 ede0      	LDI  R30,LOW(2000)
0001c5 e0f7      	LDI  R31,HIGH(2000)
0001c6 15e6      	CP   R30,R6
0001c7 05f7      	CPC  R31,R7
0001c8 f411      	BRNE _0x5
                 ; 0000 0025             counter  = 0;
0001c9 2466      	CLR  R6
0001ca 2477      	CLR  R7
                 ; 0000 0026 
                 ; 0000 0027         if (counter == 0) {
                 _0x5:
0001cb 2c06      	MOV  R0,R6
0001cc 2807      	OR   R0,R7
0001cd f411      	BRNE _0x6
                 ; 0000 0028             PORTD.4 = 0;
0001ce 9894      	CBI  0x12,4
                 ; 0000 0029             PORTD.5 = 1;
0001cf 9a95      	SBI  0x12,5
                 ; 0000 002A         }
                 ; 0000 002B 
                 ; 0000 002C         if (counter == 1000) {
                 _0x6:
0001d0 eee8      	LDI  R30,LOW(1000)
0001d1 e0f3      	LDI  R31,HIGH(1000)
0001d2 15e6      	CP   R30,R6
0001d3 05f7      	CPC  R31,R7
0001d4 f411      	BRNE _0xB
                 ; 0000 002D             PORTD.5 = 0;
0001d5 9895      	CBI  0x12,5
                 ; 0000 002E             PORTD.4 = 1;
0001d6 9a94      	SBI  0x12,4
                 ; 0000 002F         }
                 ; 0000 0030         counter++;
                 _0xB:
0001d7 01f3      	MOVW R30,R6
0001d8 9631      	ADIW R30,1
0001d9 013f      	MOVW R6,R30
                 ; 0000 0031     }
                 ; 0000 0032     else {
0001da c002      	RJMP _0x10
                 _0x4:
                 ; 0000 0033         PORTD.4 = 0;
0001db 9894      	CBI  0x12,4
                 ; 0000 0034         PORTD.5 = 0;
0001dc 9895      	CBI  0x12,5
                 ; 0000 0035     }
                 _0x10:
                 ; 0000 0036 }
0001dd 91e9      	LD   R30,Y+
0001de bfef      	OUT  SREG,R30
0001df 91f9      	LD   R31,Y+
0001e0 91e9      	LD   R30,Y+
0001e1 9009      	LD   R0,Y+
0001e2 9518      	RETI
                 ; .FEND
                 ;
                 ;
                 ;// "inherited" from tai lieu thuc hanh
                 ;int read() {
                 ; 0000 003A int read() {
                 _read:
                 ; .FSTART _read
                 ; 0000 003B     char a, i, j;
                 ; 0000 003C     for(j = 0; j < 3; j++ ){
0001e3 940e 09ad 	CALL __SAVELOCR4
                 ;	a -> R17
                 ;	i -> R16
                 ;	j -> R19
0001e5 e030      	LDI  R19,LOW(0)
                 _0x16:
0001e6 3033      	CPI  R19,3
0001e7 f5a0      	BRSH _0x17
                 ; 0000 003D         if (j == 0) PORTF = 0b11111101;
0001e8 3030      	CPI  R19,0
0001e9 f419      	BRNE _0x18
0001ea efed      	LDI  R30,LOW(253)
0001eb 93e0 0062 	STS  98,R30
                 ; 0000 003E         if (j == 1) PORTF = 0b11110111;
                 _0x18:
0001ed 3031      	CPI  R19,1
0001ee f419      	BRNE _0x19
0001ef efe7      	LDI  R30,LOW(247)
0001f0 93e0 0062 	STS  98,R30
                 ; 0000 003F         if (j == 2) PORTF = 0b11011111;
                 _0x19:
0001f2 3032      	CPI  R19,2
0001f3 f419      	BRNE _0x1A
0001f4 edef      	LDI  R30,LOW(223)
0001f5 93e0 0062 	STS  98,R30
                 ; 0000 0040         for(i = 0; i < 3; i++){
                 _0x1A:
0001f7 e000      	LDI  R16,LOW(0)
                 _0x1C:
0001f8 3003      	CPI  R16,3
0001f9 f500      	BRSH _0x1D
                 ; 0000 0041             if (i == 0){
0001fa 3000      	CPI  R16,0
0001fb f441      	BRNE _0x1E
                 ; 0000 0042                 a = PINF&0x04;
0001fc b1e0      	IN   R30,0x0
0001fd 70e4      	ANDI R30,LOW(0x4)
0001fe 2f1e      	MOV  R17,R30
                 ; 0000 0043                 if(a != 0x04)
0001ff 3014      	CPI  R17,4
000200 f019      	BREQ _0x1F
                 ; 0000 0044                     return keypad[i][j];
000201 940e 0890 	CALL SUBOPT_0x0
000203 c01a      	RJMP _0x214000D
                 ; 0000 0045             }
                 _0x1F:
                 ; 0000 0046             if (i == 1){
                 _0x1E:
000204 3001      	CPI  R16,1
000205 f441      	BRNE _0x20
                 ; 0000 0047                 a = PINF&0x10;
000206 b1e0      	IN   R30,0x0
000207 71e0      	ANDI R30,LOW(0x10)
000208 2f1e      	MOV  R17,R30
                 ; 0000 0048                 if (a != 0x10)
000209 3110      	CPI  R17,16
00020a f019      	BREQ _0x21
                 ; 0000 0049                     return keypad[i][j];
00020b 940e 0890 	CALL SUBOPT_0x0
00020d c010      	RJMP _0x214000D
                 ; 0000 004A             }
                 _0x21:
                 ; 0000 004B             if (i == 2){
                 _0x20:
00020e 3002      	CPI  R16,2
00020f f441      	BRNE _0x22
                 ; 0000 004C                 a = PINF&0x01;
000210 b1e0      	IN   R30,0x0
000211 70e1      	ANDI R30,LOW(0x1)
000212 2f1e      	MOV  R17,R30
                 ; 0000 004D                 if (a != 0x01)
000213 3011      	CPI  R17,1
000214 f019      	BREQ _0x23
                 ; 0000 004E                     return keypad[i][j];
000215 940e 0890 	CALL SUBOPT_0x0
000217 c006      	RJMP _0x214000D
                 ; 0000 004F             }
                 _0x23:
                 ; 0000 0050         }
                 _0x22:
000218 5f0f      	SUBI R16,-1
000219 cfde      	RJMP _0x1C
                 _0x1D:
                 ; 0000 0051     }
00021a 5f3f      	SUBI R19,-1
00021b cfca      	RJMP _0x16
                 _0x17:
                 ; 0000 0052     return -1;
00021c efef      	LDI  R30,LOW(65535)
00021d efff      	LDI  R31,HIGH(65535)
                 _0x214000D:
00021e 940e 09b4 	CALL __LOADLOCR4
000220 9624      	ADIW R28,4
000221 9508      	RET
                 ; 0000 0053 }
                 ; .FEND
                 ;
                 ;void mainScreen(unsigned char * c, int pass, int remaining) {
                 ; 0000 0055 void mainScreen(unsigned char * c, int pass, int remaining) {
                 _mainScreen:
                 ; .FSTART _mainScreen
                 ; 0000 0056     glcd_clear();
000222 940e 089f 	CALL SUBOPT_0x1
                 ;	*c -> Y+4
                 ;	pass -> Y+2
                 ;	remaining -> Y+0
                 ; 0000 0057     itoa(remaining, tmp2);
                 ; 0000 0058     glcd_outtextxy(5, 10, tmp2);
                 ; 0000 0059     glcd_outtextxy(15, 20, c);
000224 81ae      	LDD  R26,Y+6
000225 81bf      	LDD  R27,Y+6+1
000226 940e 07bf 	CALL _glcd_outtextxy
                 ; 0000 005A     if (pass != -1) {
000228 81aa      	LDD  R26,Y+2
000229 81bb      	LDD  R27,Y+2+1
00022a 3faf      	CPI  R26,LOW(0xFFFF)
00022b efef      	LDI  R30,HIGH(0xFFFF)
00022c 07be      	CPC  R27,R30
00022d f041      	BREQ _0x24
                 ; 0000 005B         itoa(pass, tmp);
00022e 81ea      	LDD  R30,Y+2
00022f 81fb      	LDD  R31,Y+2+1
000230 940e 08b8 	CALL SUBOPT_0x2
                 ; 0000 005C         glcd_outtextxy(30, 30, tmp);
000232 e7a0      	LDI  R26,LOW(_tmp)
000233 e0b5      	LDI  R27,HIGH(_tmp)
000234 940e 07bf 	CALL _glcd_outtextxy
                 ; 0000 005D     }
                 ; 0000 005E }
                 _0x24:
000236 940c 04cf 	JMP  _0x2140009
                 ; .FEND
                 ;
                 ;void mainScreen2(unsigned char * c, char pass[], int pos, int remaining) {
                 ; 0000 0060 void mainScreen2(unsigned char * c, char pass[], int pos, int remaining) {
                 _mainScreen2:
                 ; .FSTART _mainScreen2
                 ; 0000 0061     glcd_clear();
000238 940e 089f 	CALL SUBOPT_0x1
                 ;	*c -> Y+6
                 ;	pass -> Y+4
                 ;	pos -> Y+2
                 ;	remaining -> Y+0
                 ; 0000 0062     itoa(remaining, tmp2);
                 ; 0000 0063     glcd_outtextxy(5, 10, tmp2);
                 ; 0000 0064     glcd_outtextxy(15, 20, c);
00023a 85a8      	LDD  R26,Y+8
00023b 85b9      	LDD  R27,Y+8+1
00023c 940e 07bf 	CALL _glcd_outtextxy
                 ; 0000 0065     if (pass != -1) {
00023e 81ac      	LDD  R26,Y+4
00023f 81bd      	LDD  R27,Y+4+1
000240 3faf      	CPI  R26,LOW(0xFFFF)
000241 efef      	LDI  R30,HIGH(0xFFFF)
000242 07be      	CPC  R27,R30
000243 f041      	BREQ _0x25
                 ; 0000 0066         glcd_outtextxy(pos, 30, pass);
000244 81ea      	LDD  R30,Y+2
000245 93ea      	ST   -Y,R30
000246 e1ee      	LDI  R30,LOW(30)
000247 93ea      	ST   -Y,R30
000248 81ae      	LDD  R26,Y+6
000249 81bf      	LDD  R27,Y+6+1
00024a 940e 07bf 	CALL _glcd_outtextxy
                 ; 0000 0067     }
                 ; 0000 0068 }
                 _0x25:
00024c 940c 07bd 	JMP  _0x2140006
                 ; .FEND
                 ;
                 ;void mainScreen3(unsigned char * c, int pass, int pos, char pass_ano[], int remaining) {
                 ; 0000 006A void mainScreen3(unsigned char * c, int pass, int pos, char pass_ano[], int remaining) {
                 _mainScreen3:
                 ; .FSTART _mainScreen3
                 ; 0000 006B     glcd_clear();
00024e 940e 089f 	CALL SUBOPT_0x1
                 ;	*c -> Y+8
                 ;	pass -> Y+6
                 ;	pos -> Y+4
                 ;	pass_ano -> Y+2
                 ;	remaining -> Y+0
                 ; 0000 006C     itoa(remaining, tmp2);
                 ; 0000 006D     glcd_outtextxy(5, 10, tmp2);
                 ; 0000 006E     glcd_outtextxy(15, 20, c);
000250 85aa      	LDD  R26,Y+10
000251 85bb      	LDD  R27,Y+10+1
000252 940e 07bf 	CALL _glcd_outtextxy
                 ; 0000 006F     if (pass != -1) {
000254 81ae      	LDD  R26,Y+6
000255 81bf      	LDD  R27,Y+6+1
000256 3faf      	CPI  R26,LOW(0xFFFF)
000257 efef      	LDI  R30,HIGH(0xFFFF)
000258 07be      	CPC  R27,R30
000259 f081      	BREQ _0x26
                 ; 0000 0070         itoa(pass, tmp);
00025a 81ee      	LDD  R30,Y+6
00025b 81ff      	LDD  R31,Y+6+1
00025c 940e 08b8 	CALL SUBOPT_0x2
                 ; 0000 0071         glcd_outtextxy(30, 30, pass_ano);
00025e 81ac      	LDD  R26,Y+4
00025f 81bd      	LDD  R27,Y+4+1
000260 940e 07bf 	CALL _glcd_outtextxy
                 ; 0000 0072         glcd_outtextxy(pos, 30, tmp);
000262 81ec      	LDD  R30,Y+4
000263 93ea      	ST   -Y,R30
000264 e1ee      	LDI  R30,LOW(30)
000265 93ea      	ST   -Y,R30
000266 e7a0      	LDI  R26,LOW(_tmp)
000267 e0b5      	LDI  R27,HIGH(_tmp)
000268 940e 07bf 	CALL _glcd_outtextxy
                 ; 0000 0073     }
                 ; 0000 0074 }
                 _0x26:
00026a c0b6      	RJMP _0x214000C
                 ; .FEND
                 ;
                 ;void exe() {
                 ; 0000 0076 void exe() {
                 _exe:
                 ; .FSTART _exe
                 ; 0000 0077     //char pass_ano[3];
                 ; 0000 0078     unsigned int input_times = 0, input = -1, pass = 0, require = 118, reader;
                 ; 0000 0079     reader = read_eeprom_word(&my_eeprom);
00026b 9724      	SBIW R28,4
00026c e7e6      	LDI  R30,LOW(118)
00026d 83ea      	STD  Y+2,R30
00026e e0e0      	LDI  R30,LOW(0)
00026f 83eb      	STD  Y+3,R30
000270 940e 09ab 	CALL __SAVELOCR6
                 ;	input_times -> R16,R17
                 ;	input -> R18,R19
                 ;	pass -> R20,R21
                 ;	require -> Y+8
                 ;	reader -> Y+6
000272 940e 08c2 	CALL SUBOPT_0x3
000274 e0a0      	LDI  R26,LOW(_my_eeprom)
000275 e0b0      	LDI  R27,HIGH(_my_eeprom)
000276 940e 097e 	CALL __EEPROMRDW
000278 83ee      	STD  Y+6,R30
000279 83ff      	STD  Y+6+1,R31
                 ; 0000 007A     if (reader >= 100 && reader <= 999)
00027a 81ae      	LDD  R26,Y+6
00027b 81bf      	LDD  R27,Y+6+1
00027c 36a4      	CPI  R26,LOW(0x64)
00027d e0e0      	LDI  R30,HIGH(0x64)
00027e 07be      	CPC  R27,R30
00027f f020      	BRLO _0x28
000280 3ea8      	CPI  R26,LOW(0x3E8)
000281 e0e3      	LDI  R30,HIGH(0x3E8)
000282 07be      	CPC  R27,R30
000283 f008      	BRLO _0x29
                 _0x28:
000284 c004      	RJMP _0x27
                 _0x29:
                 ; 0000 007B         require = reader;
000285 81ee      	LDD  R30,Y+6
000286 81ff      	LDD  R31,Y+6+1
000287 87e8      	STD  Y+8,R30
000288 87f9      	STD  Y+8+1,R31
                 ; 0000 007C     dem_sai = 0;
                 _0x27:
000289 2488      	CLR  R8
00028a 2499      	CLR  R9
                 ; 0000 007D     while (pass != require) {
                 _0x2A:
00028b 85e8      	LDD  R30,Y+8
00028c 85f9      	LDD  R31,Y+8+1
00028d 17e4      	CP   R30,R20
00028e 07f5      	CPC  R31,R21
00028f f409      	BRNE PC+2
000290 c07e      	RJMP _0x2C
                 ; 0000 007E         char pass_ano[3];
                 ; 0000 007F         pass_ano[0]=' ';
000291 9723      	SBIW R28,3
                 ;	require -> Y+11
                 ;	reader -> Y+9
                 ;	pass_ano -> Y+0
000292 e2e0      	LDI  R30,LOW(32)
000293 83e8      	ST   Y,R30
                 ; 0000 0080         pass_ano[1]=' ';
000294 83e9      	STD  Y+1,R30
                 ; 0000 0081         pass_ano[2]=' ';
000295 83ea      	STD  Y+2,R30
                 ; 0000 0082         mainScreen("PASSWORD?", -1, sai_toi_da-dem_sai);
                +
000296 e0e0     +LDI R30 , LOW ( _0x2D + ( 0 ) )
000297 e0f5     +LDI R31 , HIGH ( _0x2D + ( 0 ) )
                 	__POINTW1MN _0x2D,0
000298 93fa      	ST   -Y,R31
000299 93ea      	ST   -Y,R30
00029a efef      	LDI  R30,LOW(65535)
00029b efff      	LDI  R31,HIGH(65535)
00029c 940e 08c9 	CALL SUBOPT_0x4
00029e df83      	RCALL _mainScreen
                 ; 0000 0083         while (input_times != 3) {
                 _0x2E:
00029f e0e3      	LDI  R30,LOW(3)
0002a0 e0f0      	LDI  R31,HIGH(3)
0002a1 17e0      	CP   R30,R16
0002a2 07f1      	CPC  R31,R17
0002a3 f409      	BRNE PC+2
0002a4 c041      	RJMP _0x30
                 ; 0000 0084             input = read();
0002a5 df3d      	RCALL _read
0002a6 019f      	MOVW R18,R30
                 ; 0000 0085             delay_ms(200);
0002a7 eca8      	LDI  R26,LOW(200)
0002a8 e0b0      	LDI  R27,0
0002a9 940e 0953 	CALL _delay_ms
                 ; 0000 0086             if (input != -1) {
0002ab efef      	LDI  R30,LOW(65535)
0002ac efff      	LDI  R31,HIGH(65535)
0002ad 17e2      	CP   R30,R18
0002ae 07f3      	CPC  R31,R19
0002af f1a9      	BREQ _0x31
                 ; 0000 0087                 input_times++;
                +
0002b0 5f0f     +SUBI R16 , LOW ( - 1 )
0002b1 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 0088                 pass = pass * 10 + input;
                +
0002b2 e0aa     +LDI R26 , 10
0002b3 9fa4     +MUL R26 , R20
0002b4 01f0     +MOVW R30 , R0
0002b5 9fa5     +MUL R26 , R21
0002b6 0df0     +ADD R31 , R0
                 	__MULBNWRU 20,21,10
0002b7 0fe2      	ADD  R30,R18
0002b8 1ff3      	ADC  R31,R19
0002b9 01af      	MOVW R20,R30
                 ; 0000 0089                 mainScreen2("PASSWORD?", pass_ano, 30, sai_toi_da-dem_sai);
                +
0002ba e0ea     +LDI R30 , LOW ( _0x2D + ( 10 ) )
0002bb e0f5     +LDI R31 , HIGH ( _0x2D + ( 10 ) )
                 	__POINTW1MN _0x2D,10
0002bc 940e 08cf 	CALL SUBOPT_0x5
0002be df79      	RCALL _mainScreen2
                 ; 0000 008A                 mainScreen3("PASSWORD?", input, 30+(input_times-1)*4+input_times, pass_ano, sai_toi_da-dem_sai);
                +
0002bf e1e4     +LDI R30 , LOW ( _0x2D + ( 20 ) )
0002c0 e0f5     +LDI R31 , HIGH ( _0x2D + ( 20 ) )
                 	__POINTW1MN _0x2D,20
0002c1 93fa      	ST   -Y,R31
0002c2 93ea      	ST   -Y,R30
0002c3 933a      	ST   -Y,R19
0002c4 932a      	ST   -Y,R18
0002c5 01f8      	MOVW R30,R16
0002c6 9731      	SBIW R30,1
0002c7 940e 096d 	CALL __LSLW2
0002c9 967e      	ADIW R30,30
0002ca 0fe0      	ADD  R30,R16
0002cb 1ff1      	ADC  R31,R17
0002cc 93fa      	ST   -Y,R31
0002cd 93ea      	ST   -Y,R30
0002ce 01fe      	MOVW R30,R28
0002cf 9636      	ADIW R30,6
0002d0 940e 08c9 	CALL SUBOPT_0x4
0002d2 df7b      	RCALL _mainScreen3
                 ; 0000 008B                 pass_ano[input_times-1] = '*';
0002d3 01f8      	MOVW R30,R16
0002d4 9731      	SBIW R30,1
0002d5 01de      	MOVW R26,R28
0002d6 0fae      	ADD  R26,R30
0002d7 1fbf      	ADC  R27,R31
0002d8 e2ea      	LDI  R30,LOW(42)
0002d9 93ec      	ST   X,R30
                 ; 0000 008C                 delay_ms(500);
0002da efa4      	LDI  R26,LOW(500)
0002db e0b1      	LDI  R27,HIGH(500)
0002dc 940e 0953 	CALL _delay_ms
                 ; 0000 008D                 mainScreen2("PASSWORD?", pass_ano, 30, sai_toi_da-dem_sai);
                +
0002de e1ee     +LDI R30 , LOW ( _0x2D + ( 30 ) )
0002df e0f5     +LDI R31 , HIGH ( _0x2D + ( 30 ) )
                 	__POINTW1MN _0x2D,30
0002e0 940e 08cf 	CALL SUBOPT_0x5
0002e2 df55      	RCALL _mainScreen2
                 ; 0000 008E                 input = -1;
                +
0002e3 ef2f     +LDI R18 , LOW ( - 1 )
0002e4 ef3f     +LDI R19 , HIGH ( - 1 )
                 	__GETWRN 18,19,-1
                 ; 0000 008F             }
                 ; 0000 0090         }
                 _0x31:
0002e5 cfb9      	RJMP _0x2E
                 _0x30:
                 ; 0000 0091 
                 ; 0000 0092         if (pass != require) {
0002e6 85eb      	LDD  R30,Y+11
0002e7 85fc      	LDD  R31,Y+11+1
0002e8 17e4      	CP   R30,R20
0002e9 07f5      	CPC  R31,R21
0002ea f091      	BREQ _0x32
                 ; 0000 0093             glcd_clear();
0002eb d18e      	RCALL _glcd_clear
                 ; 0000 0094             glcd_outtextxy(15, 20, "NO?");
0002ec e0ef      	LDI  R30,LOW(15)
0002ed 93ea      	ST   -Y,R30
0002ee e1e4      	LDI  R30,LOW(20)
0002ef 93ea      	ST   -Y,R30
                +
0002f0 e2a8     +LDI R26 , LOW ( _0x2D + ( 40 ) )
0002f1 e0b5     +LDI R27 , HIGH ( _0x2D + ( 40 ) )
                 	__POINTW2MN _0x2D,40
0002f2 940e 07bf 	CALL _glcd_outtextxy
                 ; 0000 0095             input_times = 0;
0002f4 940e 08c2 	CALL SUBOPT_0x3
                 ; 0000 0096             input = -1;
                 ; 0000 0097             pass = 0;
                 ; 0000 0098             delay_ms(800);
0002f6 e2a0      	LDI  R26,LOW(800)
0002f7 e0b3      	LDI  R27,HIGH(800)
0002f8 940e 0953 	CALL _delay_ms
                 ; 0000 0099             dem_sai++;
0002fa 01f4      	MOVW R30,R8
0002fb 9631      	ADIW R30,1
0002fc 014f      	MOVW R8,R30
                 ; 0000 009A         }
                 ; 0000 009B         // bat role 1
                 ; 0000 009C         if (dem_sai == sai_toi_da){
                 _0x32:
                +
0002fd 14a8     +CP R10 , R8
0002fe 04b9     +CPC R11 , R9
                 	__CPWRR 10,11,8,9
0002ff f469      	BRNE _0x33
                 ; 0000 009D             DDRC.3 = 1;
000300 9aa3      	SBI  0x14,3
                 ; 0000 009E             PORTC.3 = 1;
000301 9aab      	SBI  0x15,3
                 ; 0000 009F             glcd_clear();
000302 d177      	RCALL _glcd_clear
                 ; 0000 00A0             glcd_outtextxy(15, 5, "khoa thiet bi");
000303 e0ef      	LDI  R30,LOW(15)
000304 93ea      	ST   -Y,R30
000305 e0e5      	LDI  R30,LOW(5)
000306 93ea      	ST   -Y,R30
                +
000307 e2ac     +LDI R26 , LOW ( _0x2D + ( 44 ) )
000308 e0b5     +LDI R27 , HIGH ( _0x2D + ( 44 ) )
                 	__POINTW2MN _0x2D,44
000309 940e 07bf 	CALL _glcd_outtextxy
                 ; 0000 00A1             return;
00030b 9623      	ADIW R28,3
00030c c012      	RJMP _0x214000B
                 ; 0000 00A2         }
                 ; 0000 00A3         //miss++;
                 ; 0000 00A4         // turn on role 1
                 ; 0000 00A5         // if (miss == 3) {
                 ; 0000 00A6         //     DDRC.3 = 1;
                 ; 0000 00A7         //     PORTC.3 = 1;
                 ; 0000 00A8         // }
                 ; 0000 00A9     }
                 _0x33:
00030d 9623      	ADIW R28,3
00030e cf7c      	RJMP _0x2A
                 _0x2C:
                 ; 0000 00AA 
                 ; 0000 00AB     miss = 0;
00030f 2444      	CLR  R4
000310 2455      	CLR  R5
                 ; 0000 00AC     delay_ms(500);
000311 efa4      	LDI  R26,LOW(500)
000312 e0b1      	LDI  R27,HIGH(500)
000313 940e 0953 	CALL _delay_ms
                 ; 0000 00AD     glcd_clear();
000315 d164      	RCALL _glcd_clear
                 ; 0000 00AE     PORTC.3 = 0;
000316 98ab      	CBI  0x15,3
                 ; 0000 00AF     glcd_outtextxy(15, 20, "PASSED");
000317 e0ef      	LDI  R30,LOW(15)
000318 93ea      	ST   -Y,R30
000319 e1e4      	LDI  R30,LOW(20)
00031a 93ea      	ST   -Y,R30
                +
00031b e3aa     +LDI R26 , LOW ( _0x2D + ( 58 ) )
00031c e0b5     +LDI R27 , HIGH ( _0x2D + ( 58 ) )
                 	__POINTW2MN _0x2D,58
00031d 940e 07bf 	CALL _glcd_outtextxy
                 ; 0000 00B0 }
                 _0x214000B:
00031f 940e 09b2 	CALL __LOADLOCR6
                 _0x214000C:
000321 962a      	ADIW R28,10
000322 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x2D:
000500           	.BYTE 0x41
                 ;
                 ;void main(void)
                 ; 0000 00B3 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 00B4     unsigned int pass = 0, input, input_times = 0;
                 ; 0000 00B5     //init GLCD
                 ; 0000 00B6     GLCDINIT_t glcd_init_data;
                 ; 0000 00B7     glcd_init_data.font=font5x7;
000323 9728      	SBIW R28,8
                 ;	pass -> R16,R17
                 ;	input -> R18,R19
                 ;	input_times -> R20,R21
                 ;	glcd_init_data -> Y+0
                +
000324 e000     +LDI R16 , LOW ( 0 )
000325 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
000326 e040     +LDI R20 , LOW ( 0 )
000327 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
000328 e8ec      	LDI  R30,LOW(_font5x7*2)
000329 e0f0      	LDI  R31,HIGH(_font5x7*2)
00032a 83e8      	ST   Y,R30
00032b 83f9      	STD  Y+1,R31
                 ; 0000 00B8     glcd_init_data.temp_coef=140;
00032c 81ee      	LDD  R30,Y+6
00032d 7fec      	ANDI R30,LOW(0xFC)
00032e 83ee      	STD  Y+6,R30
                 ; 0000 00B9     glcd_init_data.bias=4;
00032f 7ee3      	ANDI R30,LOW(0xE3)
000330 61e0      	ORI  R30,0x10
000331 83ee      	STD  Y+6,R30
                 ; 0000 00BA     glcd_init_data.vlcd=66;
000332 81ef      	LDD  R30,Y+7
000333 78e0      	ANDI R30,LOW(0x80)
000334 64e2      	ORI  R30,LOW(0x42)
000335 83ef      	STD  Y+7,R30
                 ; 0000 00BB     glcd_init(&glcd_init_data);
000336 01de      	MOVW R26,R28
000337 d09b      	RCALL _glcd_init
                 ; 0000 00BC 
                 ; 0000 00BD     DDRF = 0b11101010;
000338 eeea      	LDI  R30,LOW(234)
000339 93e0 0061 	STS  97,R30
                 ; 0000 00BE     DDRD.5 = 1;
00033b 9a8d      	SBI  0x11,5
                 ; 0000 00BF     DDRD.4 = 1;
00033c 9a8c      	SBI  0x11,4
                 ; 0000 00C0 
                 ; 0000 00C1     //init Timer/Counter 0 with time period = 1 ms
                 ; 0000 00C2     ASSR=0<<AS0;
00033d e0e0      	LDI  R30,LOW(0)
00033e bfe0      	OUT  0x30,R30
                 ; 0000 00C3     TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (1<<CS01) | (1<<CS00);
00033f e0e3      	LDI  R30,LOW(3)
000340 bfe3      	OUT  0x33,R30
                 ; 0000 00C4     TCNT0=0x06;
000341 e0e6      	LDI  R30,LOW(6)
000342 bfe2      	OUT  0x32,R30
                 ; 0000 00C5     OCR0=0x00;
000343 e0e0      	LDI  R30,LOW(0)
000344 bfe1      	OUT  0x31,R30
                 ; 0000 00C6     TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
000345 e0e1      	LDI  R30,LOW(1)
000346 bfe7      	OUT  0x37,R30
                 ; 0000 00C7     ETIMSK=(0<<TICIE3) | (0<<OCIE3A) | (0<<OCIE3B) | (0<<TOIE3) | (0<<OCIE3C) | (0<<OCIE1C);
000347 e0e0      	LDI  R30,LOW(0)
000348 93e0 007d 	STS  125,R30
                 ; 0000 00C8     #asm("sei")
00034a 9478      	sei
                 ; 0000 00C9     update_eeprom_word(&my_eeprom, 118);
00034b e0a0      	LDI  R26,LOW(_my_eeprom)
00034c e0b0      	LDI  R27,HIGH(_my_eeprom)
00034d e7e6      	LDI  R30,LOW(118)
00034e e0f0      	LDI  R31,HIGH(118)
00034f 940e 098e 	CALL __EEPROMWRW
                 ; 0000 00CA     exe();
000351 df19      	RCALL _exe
                 ; 0000 00CB     delay_ms(1500);
000352 edac      	LDI  R26,LOW(1500)
000353 e0b5      	LDI  R27,HIGH(1500)
000354 940e 0953 	CALL _delay_ms
                 ; 0000 00CC 
                 ; 0000 00CD     // mainScreen("NEW PASS?", -1);
                 ; 0000 00CE     // while (input_times != 3) {
                 ; 0000 00CF     //         input = read();
                 ; 0000 00D0     //         delay_ms(200);
                 ; 0000 00D1     //         if (input != -1) {
                 ; 0000 00D2     //             input_times++;
                 ; 0000 00D3     //             pass = pass * 10 + input;
                 ; 0000 00D4     //             mainScreen("NEW PASS?", pass);
                 ; 0000 00D5     //             input = -1;
                 ; 0000 00D6     //         }
                 ; 0000 00D7     // }
                 ; 0000 00D8     // update_eeprom_word(&my_eeprom, pass);
                 ; 0000 00D9     // delay_ms(800);
                 ; 0000 00DA     // mainScreen("SAVED", -1);
                 ; 0000 00DB 
                 ; 0000 00DC     while (1)
                 _0x3E:
                 ; 0000 00DD     {
                 ; 0000 00DE 
                 ; 0000 00DF 
                 ; 0000 00E0     }
000356 cfff      	RJMP _0x3E
                 ; 0000 00E1 }
                 _0x41:
000357 cfff      	RJMP _0x41
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _pcd8544_delay_G100:
                 ; .FSTART _pcd8544_delay_G100
000358 9508      	RET
                 ; .FEND
                 _pcd8544_wrbus_G100:
                 ; .FSTART _pcd8544_wrbus_G100
000359 93aa      	ST   -Y,R26
00035a 931a      	ST   -Y,R17
00035b 91e0 0065 	LDS  R30,101
00035d 7eef      	ANDI R30,0xEF
00035e 93e0 0065 	STS  101,R30
000360 e018      	LDI  R17,LOW(8)
                 _0x2000004:
000361 dff6      	RCALL _pcd8544_delay_G100
000362 81e9      	LDD  R30,Y+1
000363 78e0      	ANDI R30,LOW(0x80)
000364 f021      	BREQ _0x2000006
000365 91e0 0065 	LDS  R30,101
000367 60e2      	ORI  R30,2
000368 c003      	RJMP _0x20000A0
                 _0x2000006:
000369 91e0 0065 	LDS  R30,101
00036b 7fed      	ANDI R30,0xFD
                 _0x20000A0:
00036c 93e0 0065 	STS  101,R30
00036e 81e9      	LDD  R30,Y+1
00036f 0fee      	LSL  R30
000370 83e9      	STD  Y+1,R30
000371 dfe6      	RCALL _pcd8544_delay_G100
000372 91e0 0065 	LDS  R30,101
000374 60e4      	ORI  R30,4
000375 93e0 0065 	STS  101,R30
000377 dfe0      	RCALL _pcd8544_delay_G100
000378 91e0 0065 	LDS  R30,101
00037a 7feb      	ANDI R30,0xFB
00037b 93e0 0065 	STS  101,R30
00037d 5011      	SUBI R17,LOW(1)
00037e f711      	BRNE _0x2000004
00037f 91e0 0065 	LDS  R30,101
000381 61e0      	ORI  R30,0x10
000382 93e0 0065 	STS  101,R30
000384 8118      	LDD  R17,Y+0
000385 940c 0828 	JMP  _0x2140003
                 ; .FEND
                 _pcd8544_wrcmd:
                 ; .FSTART _pcd8544_wrcmd
000387 93aa      	ST   -Y,R26
000388 91e0 0065 	LDS  R30,101
00038a 7fee      	ANDI R30,0xFE
00038b 93e0 0065 	STS  101,R30
00038d 81a8      	LD   R26,Y
00038e dfca      	RCALL _pcd8544_wrbus_G100
00038f c0e8      	RJMP _0x214000A
                 ; .FEND
                 _pcd8544_wrdata_G100:
                 ; .FSTART _pcd8544_wrdata_G100
000390 93aa      	ST   -Y,R26
000391 91e0 0065 	LDS  R30,101
000393 60e1      	ORI  R30,1
000394 93e0 0065 	STS  101,R30
000396 81a8      	LD   R26,Y
000397 dfc1      	RCALL _pcd8544_wrbus_G100
000398 c0df      	RJMP _0x214000A
                 ; .FEND
                 _pcd8544_setaddr_G100:
                 ; .FSTART _pcd8544_setaddr_G100
000399 93aa      	ST   -Y,R26
00039a 931a      	ST   -Y,R17
00039b 81e9      	LDD  R30,Y+1
00039c 95e6      	LSR  R30
00039d 95e6      	LSR  R30
00039e 95e6      	LSR  R30
00039f 2f1e      	MOV  R17,R30
0003a0 e5e4      	LDI  R30,LOW(84)
0003a1 9fe1      	MUL  R30,R17
0003a2 01f0      	MOVW R30,R0
0003a3 01df      	MOVW R26,R30
0003a4 81ea      	LDD  R30,Y+2
0003a5 e0f0      	LDI  R31,0
0003a6 0fea      	ADD  R30,R26
0003a7 1ffb      	ADC  R31,R27
0003a8 93e0 0584 	STS  _gfx_addr_G100,R30
0003aa 93f0 0585 	STS  _gfx_addr_G100+1,R31
0003ac 2fe1      	MOV  R30,R17
0003ad 8118      	LDD  R17,Y+0
0003ae 940c 086f 	JMP  _0x2140002
                 ; .FEND
                 _pcd8544_gotoxy:
                 ; .FSTART _pcd8544_gotoxy
0003b0 93aa      	ST   -Y,R26
0003b1 81e9      	LDD  R30,Y+1
0003b2 68e0      	ORI  R30,0x80
0003b3 2fae      	MOV  R26,R30
0003b4 dfd2      	RCALL _pcd8544_wrcmd
0003b5 81e9      	LDD  R30,Y+1
0003b6 93ea      	ST   -Y,R30
0003b7 81a9      	LDD  R26,Y+1
0003b8 dfe0      	RCALL _pcd8544_setaddr_G100
0003b9 64e0      	ORI  R30,0x40
0003ba 2fae      	MOV  R26,R30
0003bb dfcb      	RCALL _pcd8544_wrcmd
0003bc 940c 0828 	JMP  _0x2140003
                 ; .FEND
                 _pcd8544_rdbyte:
                 ; .FSTART _pcd8544_rdbyte
0003be 93aa      	ST   -Y,R26
0003bf 81e9      	LDD  R30,Y+1
0003c0 93ea      	ST   -Y,R30
0003c1 81a9      	LDD  R26,Y+1
0003c2 dfed      	RCALL _pcd8544_gotoxy
0003c3 91e0 0584 	LDS  R30,_gfx_addr_G100
0003c5 91f0 0585 	LDS  R31,_gfx_addr_G100+1
0003c7 57ea      	SUBI R30,LOW(-_gfx_buffer_G100)
0003c8 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G100)
0003c9 81e0      	LD   R30,Z
0003ca 940c 0828 	JMP  _0x2140003
                 ; .FEND
                 _pcd8544_wrbyte:
                 ; .FSTART _pcd8544_wrbyte
0003cc 93aa      	ST   -Y,R26
0003cd 940e 08d8 	CALL SUBOPT_0x6
0003cf 81a8      	LD   R26,Y
0003d0 83a0      	STD  Z+0,R26
0003d1 dfbe      	RCALL _pcd8544_wrdata_G100
0003d2 c0a5      	RJMP _0x214000A
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
0003d3 93ba      	ST   -Y,R27
0003d4 93aa      	ST   -Y,R26
0003d5 940e 09ad 	CALL __SAVELOCR4
0003d7 91e0 0064 	LDS  R30,100
0003d9 61e0      	ORI  R30,0x10
0003da 940e 08e3 	CALL SUBOPT_0x7
0003dc 61e0      	ORI  R30,0x10
0003dd 93e0 0065 	STS  101,R30
0003df 91e0 0064 	LDS  R30,100
0003e1 60e4      	ORI  R30,4
0003e2 940e 08e3 	CALL SUBOPT_0x7
0003e4 7feb      	ANDI R30,0xFB
0003e5 93e0 0065 	STS  101,R30
0003e7 91e0 0064 	LDS  R30,100
0003e9 60e2      	ORI  R30,2
0003ea 93e0 0064 	STS  100,R30
0003ec 91e0 0064 	LDS  R30,100
0003ee 60e1      	ORI  R30,1
0003ef 93e0 0064 	STS  100,R30
0003f1 91e0 0064 	LDS  R30,100
0003f3 60e8      	ORI  R30,8
0003f4 940e 08e3 	CALL SUBOPT_0x7
0003f6 7fe7      	ANDI R30,0XF7
0003f7 93e0 0065 	STS  101,R30
0003f9 e0aa      	LDI  R26,LOW(10)
0003fa e0b0      	LDI  R27,0
0003fb 940e 0953 	CALL _delay_ms
0003fd 91e0 0065 	LDS  R30,101
0003ff 60e8      	ORI  R30,8
000400 93e0 0065 	STS  101,R30
000402 81ec      	LDD  R30,Y+4
000403 81fd      	LDD  R31,Y+4+1
000404 9730      	SBIW R30,0
000405 f121      	BREQ _0x2000008
000406 81e6      	LDD  R30,Z+6
000407 70e3      	ANDI R30,LOW(0x3)
000408 2f1e      	MOV  R17,R30
000409 81ec      	LDD  R30,Y+4
00040a 81fd      	LDD  R31,Y+4+1
00040b 81e6      	LDD  R30,Z+6
00040c 95e6      	LSR  R30
00040d 95e6      	LSR  R30
00040e 70e7      	ANDI R30,LOW(0x7)
00040f 2f0e      	MOV  R16,R30
000410 81ec      	LDD  R30,Y+4
000411 81fd      	LDD  R31,Y+4+1
000412 81e7      	LDD  R30,Z+7
000413 77ef      	ANDI R30,0x7F
000414 2f3e      	MOV  R19,R30
000415 81ac      	LDD  R26,Y+4
000416 81bd      	LDD  R27,Y+4+1
000417 940e 097a 	CALL __GETW1P
                +
000419 93e0 0545+STS _glcd_state + ( 4 ) , R30
00041b 93f0 0546+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
00041d 9612      	ADIW R26,2
00041e 940e 097a 	CALL __GETW1P
                +
000420 93e0 055a+STS _glcd_state + ( 25 ) , R30
000422 93f0 055b+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
000424 81ac      	LDD  R26,Y+4
000425 81bd      	LDD  R27,Y+4+1
000426 9614      	ADIW R26,4
000427 940e 097a 	CALL __GETW1P
000429 c00d      	RJMP _0x20000A1
                 _0x2000008:
00042a e010      	LDI  R17,LOW(0)
00042b e003      	LDI  R16,LOW(3)
00042c e332      	LDI  R19,LOW(50)
00042d e0e0      	LDI  R30,LOW(0)
00042e e0f0      	LDI  R31,HIGH(0)
                +
00042f 93e0 0545+STS _glcd_state + ( 4 ) , R30
000431 93f0 0546+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
                +
000433 93e0 055a+STS _glcd_state + ( 25 ) , R30
000435 93f0 055b+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
                 _0x20000A1:
                +
000437 93e0 055c+STS _glcd_state + ( 27 ) , R30
000439 93f0 055d+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
00043b e2a1      	LDI  R26,LOW(33)
00043c df4a      	RCALL _pcd8544_wrcmd
00043d 2fe1      	MOV  R30,R17
00043e 60e4      	ORI  R30,4
00043f 2fae      	MOV  R26,R30
000440 df46      	RCALL _pcd8544_wrcmd
000441 2fe0      	MOV  R30,R16
000442 61e0      	ORI  R30,0x10
000443 2fae      	MOV  R26,R30
000444 df42      	RCALL _pcd8544_wrcmd
000445 2fe3      	MOV  R30,R19
000446 68e0      	ORI  R30,0x80
000447 2fae      	MOV  R26,R30
000448 df3e      	RCALL _pcd8544_wrcmd
000449 e2a0      	LDI  R26,LOW(32)
00044a df3c      	RCALL _pcd8544_wrcmd
00044b e0a1      	LDI  R26,LOW(1)
00044c d022      	RCALL _glcd_display
00044d e0e1      	LDI  R30,LOW(1)
00044e 93e0 0541 	STS  _glcd_state,R30
000450 e0e0      	LDI  R30,LOW(0)
                +
000451 93e0 0542+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
000453 e0e1      	LDI  R30,LOW(1)
                +
000454 93e0 0547+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
000456 93e0 0548+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
000458 93e0 0549+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
00045a efef      	LDI  R30,LOW(255)
                +
00045b 93e0 054a+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
00045d e0e1      	LDI  R30,LOW(1)
                +
00045e 93e0 0551+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
000460 e5e2     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
000461 e0f5     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
000462 93fa      	ST   -Y,R31
000463 93ea      	ST   -Y,R30
000464 efef      	LDI  R30,LOW(255)
000465 93ea      	ST   -Y,R30
000466 e0a8      	LDI  R26,LOW(8)
000467 e0b0      	LDI  R27,0
000468 940e 080f 	CALL _memset
00046a d00f      	RCALL _glcd_clear
00046b e0e1      	LDI  R30,LOW(1)
00046c 940e 09b4 	CALL __LOADLOCR4
00046e c060      	RJMP _0x2140009
                 ; .FEND
                 _glcd_display:
                 ; .FSTART _glcd_display
00046f 93aa      	ST   -Y,R26
000470 81e8      	LD   R30,Y
000471 30e0      	CPI  R30,0
000472 f011      	BREQ _0x200000A
000473 e0ec      	LDI  R30,LOW(12)
000474 c001      	RJMP _0x200000B
                 _0x200000A:
000475 e0e8      	LDI  R30,LOW(8)
                 _0x200000B:
000476 2fae      	MOV  R26,R30
000477 df0f      	RCALL _pcd8544_wrcmd
                 _0x214000A:
000478 9621      	ADIW R28,1
000479 9508      	RET
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
00047a 940e 09ad 	CALL __SAVELOCR4
00047c e030      	LDI  R19,0
                +
00047d 91e0 0542+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
00047f 30e0      	CPI  R30,0
000480 f009      	BREQ _0x200000D
000481 ef3f      	LDI  R19,LOW(255)
                 _0x200000D:
000482 e0e0      	LDI  R30,LOW(0)
000483 93ea      	ST   -Y,R30
000484 e0a0      	LDI  R26,LOW(0)
000485 df2a      	RCALL _pcd8544_gotoxy
                +
000486 ef08     +LDI R16 , LOW ( 504 )
000487 e011     +LDI R17 , HIGH ( 504 )
                 	__GETWRN 16,17,504
                 _0x200000E:
000488 01f8      	MOVW R30,R16
                +
000489 5001     +SUBI R16 , LOW ( 1 )
00048a 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
00048b 9730      	SBIW R30,0
00048c f019      	BREQ _0x2000010
00048d 2fa3      	MOV  R26,R19
00048e df3d      	RCALL _pcd8544_wrbyte
00048f cff8      	RJMP _0x200000E
                 _0x2000010:
000490 e0e0      	LDI  R30,LOW(0)
000491 93ea      	ST   -Y,R30
000492 e0a0      	LDI  R26,LOW(0)
000493 d340      	RCALL _glcd_moveto
000494 940e 09b4 	CALL __LOADLOCR4
000496 940c 088e 	JMP  _0x2140001
                 ; .FEND
                 _pcd8544_wrmasked_G100:
                 ; .FSTART _pcd8544_wrmasked_G100
000498 93aa      	ST   -Y,R26
000499 931a      	ST   -Y,R17
00049a 81ed      	LDD  R30,Y+5
00049b 93ea      	ST   -Y,R30
00049c 81ad      	LDD  R26,Y+5
00049d df20      	RCALL _pcd8544_rdbyte
00049e 2f1e      	MOV  R17,R30
00049f 81e9      	LDD  R30,Y+1
0004a0 30e7      	CPI  R30,LOW(0x7)
0004a1 f011      	BREQ _0x2000020
0004a2 30e8      	CPI  R30,LOW(0x8)
0004a3 f439      	BRNE _0x2000021
                 _0x2000020:
0004a4 81eb      	LDD  R30,Y+3
0004a5 93ea      	ST   -Y,R30
0004a6 81aa      	LDD  R26,Y+2
0004a7 940e 082a 	CALL _glcd_mappixcolor1bit
0004a9 83eb      	STD  Y+3,R30
0004aa c008      	RJMP _0x2000022
                 _0x2000021:
0004ab 30e3      	CPI  R30,LOW(0x3)
0004ac f421      	BRNE _0x2000024
0004ad 81eb      	LDD  R30,Y+3
0004ae 95e0      	COM  R30
0004af 83eb      	STD  Y+3,R30
0004b0 c002      	RJMP _0x2000025
                 _0x2000024:
0004b1 30e0      	CPI  R30,0
0004b2 f421      	BRNE _0x2000026
                 _0x2000025:
                 _0x2000022:
0004b3 81ea      	LDD  R30,Y+2
0004b4 95e0      	COM  R30
0004b5 231e      	AND  R17,R30
0004b6 c002      	RJMP _0x2000027
                 _0x2000026:
0004b7 30e2      	CPI  R30,LOW(0x2)
0004b8 f429      	BRNE _0x2000028
                 _0x2000027:
0004b9 81ea      	LDD  R30,Y+2
0004ba 81ab      	LDD  R26,Y+3
0004bb 23ea      	AND  R30,R26
0004bc 2b1e      	OR   R17,R30
0004bd c00e      	RJMP _0x200001E
                 _0x2000028:
0004be 30e1      	CPI  R30,LOW(0x1)
0004bf f429      	BRNE _0x2000029
0004c0 81ea      	LDD  R30,Y+2
0004c1 81ab      	LDD  R26,Y+3
0004c2 23ea      	AND  R30,R26
0004c3 271e      	EOR  R17,R30
0004c4 c007      	RJMP _0x200001E
                 _0x2000029:
0004c5 30e4      	CPI  R30,LOW(0x4)
0004c6 f429      	BRNE _0x200001E
0004c7 81ea      	LDD  R30,Y+2
0004c8 95e0      	COM  R30
0004c9 81ab      	LDD  R26,Y+3
0004ca 2bea      	OR   R30,R26
0004cb 231e      	AND  R17,R30
                 _0x200001E:
0004cc 2fa1      	MOV  R26,R17
0004cd defe      	RCALL _pcd8544_wrbyte
0004ce 8118      	LDD  R17,Y+0
                 _0x2140009:
0004cf 9626      	ADIW R28,6
0004d0 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
0004d1 93aa      	ST   -Y,R26
0004d2 9723      	SBIW R28,3
0004d3 940e 09ab 	CALL __SAVELOCR6
0004d5 89a8      	LDD  R26,Y+16
0004d6 35a4      	CPI  R26,LOW(0x54)
0004d7 f448      	BRSH _0x200002C
0004d8 85af      	LDD  R26,Y+15
0004d9 33a0      	CPI  R26,LOW(0x30)
0004da f430      	BRSH _0x200002C
0004db 85ae      	LDD  R26,Y+14
0004dc 30a0      	CPI  R26,LOW(0x0)
0004dd f019      	BREQ _0x200002C
0004de 85ad      	LDD  R26,Y+13
0004df 30a0      	CPI  R26,LOW(0x0)
0004e0 f409      	BRNE _0x200002B
                 _0x200002C:
0004e1 c1cc      	RJMP _0x2140008
                 _0x200002B:
0004e2 85ee      	LDD  R30,Y+14
0004e3 87e8      	STD  Y+8,R30
0004e4 89a8      	LDD  R26,Y+16
0004e5 27bb      	CLR  R27
0004e6 85ee      	LDD  R30,Y+14
0004e7 e0f0      	LDI  R31,0
0004e8 0fae      	ADD  R26,R30
0004e9 1fbf      	ADC  R27,R31
0004ea 35a5      	CPI  R26,LOW(0x55)
0004eb e0e0      	LDI  R30,HIGH(0x55)
0004ec 07be      	CPC  R27,R30
0004ed f020      	BRLO _0x200002E
0004ee 89a8      	LDD  R26,Y+16
0004ef e5e4      	LDI  R30,LOW(84)
0004f0 1bea      	SUB  R30,R26
0004f1 87ee      	STD  Y+14,R30
                 _0x200002E:
0004f2 852d      	LDD  R18,Y+13
0004f3 85af      	LDD  R26,Y+15
0004f4 27bb      	CLR  R27
0004f5 85ed      	LDD  R30,Y+13
0004f6 e0f0      	LDI  R31,0
0004f7 0fae      	ADD  R26,R30
0004f8 1fbf      	ADC  R27,R31
0004f9 97d1      	SBIW R26,49
0004fa f020      	BRLO _0x200002F
0004fb 85af      	LDD  R26,Y+15
0004fc e3e0      	LDI  R30,LOW(48)
0004fd 1bea      	SUB  R30,R26
0004fe 87ed      	STD  Y+13,R30
                 _0x200002F:
0004ff 85a9      	LDD  R26,Y+9
000500 30a6      	CPI  R26,LOW(0x6)
000501 f009      	BREQ PC+2
000502 c05b      	RJMP _0x2000030
000503 85ec      	LDD  R30,Y+12
000504 30e1      	CPI  R30,LOW(0x1)
000505 f409      	BRNE _0x2000034
000506 c1a7      	RJMP _0x2140008
                 _0x2000034:
000507 30e3      	CPI  R30,LOW(0x3)
000508 f439      	BRNE _0x2000037
                +
000509 91e0 055c+LDS R30 , _glcd_state + ( 27 )
00050b 91f0 055d+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
00050d 9730      	SBIW R30,0
00050e f409      	BRNE _0x2000036
00050f c19e      	RJMP _0x2140008
                 _0x2000036:
                 _0x2000037:
000510 8508      	LDD  R16,Y+8
000511 85ed      	LDD  R30,Y+13
000512 95e6      	LSR  R30
000513 95e6      	LSR  R30
000514 95e6      	LSR  R30
000515 2f3e      	MOV  R19,R30
000516 2fe2      	MOV  R30,R18
000517 70e7      	ANDI R30,LOW(0x7)
000518 f419      	BRNE _0x2000039
000519 85ad      	LDD  R26,Y+13
00051a 172a      	CP   R18,R26
00051b f0e9      	BREQ _0x2000038
                 _0x2000039:
00051c 2fa0      	MOV  R26,R16
00051d 27bb      	CLR  R27
00051e 2fe3      	MOV  R30,R19
00051f e0f0      	LDI  R31,0
000520 940e 0972 	CALL __MULW12U
000522 85aa      	LDD  R26,Y+10
000523 85bb      	LDD  R27,Y+10+1
000524 940e 08e8 	CALL SUBOPT_0x8
000526 9526      	LSR  R18
000527 9526      	LSR  R18
000528 9526      	LSR  R18
000529 2f53      	MOV  R21,R19
                 _0x200003B:
00052a 935f      	PUSH R21
00052b 5f5f      	SUBI R21,-1
00052c 2fe2      	MOV  R30,R18
00052d 91af      	POP  R26
00052e 17ea      	CP   R30,R26
00052f f048      	BRLO _0x200003D
000530 2f10      	MOV  R17,R16
                 _0x200003E:
000531 2fe1      	MOV  R30,R17
000532 5011      	SUBI R17,1
000533 30e0      	CPI  R30,0
000534 f019      	BREQ _0x2000040
000535 940e 08ed 	CALL SUBOPT_0x9
000537 cff9      	RJMP _0x200003E
                 _0x2000040:
000538 cff1      	RJMP _0x200003B
                 _0x200003D:
                 _0x2000038:
000539 85ae      	LDD  R26,Y+14
00053a 170a      	CP   R16,R26
00053b f111      	BREQ _0x2000041
00053c 85ee      	LDD  R30,Y+14
00053d 85aa      	LDD  R26,Y+10
00053e 85bb      	LDD  R27,Y+10+1
00053f e0f0      	LDI  R31,0
000540 940e 08e8 	CALL SUBOPT_0x8
000542 85ed      	LDD  R30,Y+13
000543 70e7      	ANDI R30,LOW(0x7)
000544 f009      	BREQ _0x2000042
000545 5f3f      	SUBI R19,-LOW(1)
                 _0x2000042:
000546 e020      	LDI  R18,LOW(0)
                 _0x2000043:
000547 932f      	PUSH R18
000548 5f2f      	SUBI R18,-1
000549 2fe3      	MOV  R30,R19
00054a 91af      	POP  R26
00054b 17ae      	CP   R26,R30
00054c f488      	BRSH _0x2000045
00054d 851e      	LDD  R17,Y+14
                 _0x2000046:
00054e 931f      	PUSH R17
00054f 5f1f      	SUBI R17,-1
000550 2fe0      	MOV  R30,R16
000551 91af      	POP  R26
000552 17ae      	CP   R26,R30
000553 f418      	BRSH _0x2000048
000554 940e 08ed 	CALL SUBOPT_0x9
000556 cff7      	RJMP _0x2000046
                 _0x2000048:
000557 85ee      	LDD  R30,Y+14
000558 81ae      	LDD  R26,Y+6
000559 81bf      	LDD  R27,Y+6+1
00055a e0f0      	LDI  R31,0
00055b 940e 08e8 	CALL SUBOPT_0x8
00055d cfe9      	RJMP _0x2000043
                 _0x2000045:
                 _0x2000041:
                 _0x2000030:
00055e 85ef      	LDD  R30,Y+15
00055f 70e7      	ANDI R30,LOW(0x7)
000560 2f3e      	MOV  R19,R30
                 _0x2000049:
000561 85ed      	LDD  R30,Y+13
000562 30e0      	CPI  R30,0
000563 f409      	BRNE PC+2
000564 c149      	RJMP _0x200004B
000565 85ea      	LDD  R30,Y+10
000566 85fb      	LDD  R31,Y+10+1
000567 83ee      	STD  Y+6,R30
000568 83ff      	STD  Y+6+1,R31
000569 e010      	LDI  R17,LOW(0)
00056a 8908      	LDD  R16,Y+16
00056b 3030      	CPI  R19,0
00056c f009      	BREQ PC+2
00056d c063      	RJMP _0x200004C
00056e 85ad      	LDD  R26,Y+13
00056f 30a8      	CPI  R26,LOW(0x8)
000570 f408      	BRSH PC+2
000571 c05a      	RJMP _0x200004D
000572 85e9      	LDD  R30,Y+9
000573 30e0      	CPI  R30,0
000574 f011      	BREQ _0x2000052
000575 30e3      	CPI  R30,LOW(0x3)
000576 f409      	BRNE _0x2000053
                 _0x2000052:
000577 c002      	RJMP _0x2000054
                 _0x2000053:
000578 30e7      	CPI  R30,LOW(0x7)
000579 f409      	BRNE _0x2000055
                 _0x2000054:
00057a c002      	RJMP _0x2000056
                 _0x2000055:
00057b 30e8      	CPI  R30,LOW(0x8)
00057c f409      	BRNE _0x2000057
                 _0x2000056:
00057d c002      	RJMP _0x2000058
                 _0x2000057:
00057e 30e9      	CPI  R30,LOW(0x9)
00057f f409      	BRNE _0x2000059
                 _0x2000058:
000580 c002      	RJMP _0x200005A
                 _0x2000059:
000581 30ea      	CPI  R30,LOW(0xA)
000582 f421      	BRNE _0x200005B
                 _0x200005A:
000583 930a      	ST   -Y,R16
000584 89a8      	LDD  R26,Y+16
000585 de2a      	RCALL _pcd8544_gotoxy
000586 c004      	RJMP _0x2000050
                 _0x200005B:
000587 30e6      	CPI  R30,LOW(0x6)
000588 f411      	BRNE _0x2000050
000589 940e 08fa 	CALL SUBOPT_0xA
                 _0x2000050:
                 _0x200005D:
00058b 931f      	PUSH R17
00058c 5f1f      	SUBI R17,-1
00058d 85ee      	LDD  R30,Y+14
00058e 91af      	POP  R26
00058f 17ae      	CP   R26,R30
000590 f5a0      	BRSH _0x200005F
000591 85a9      	LDD  R26,Y+9
000592 30a6      	CPI  R26,LOW(0x6)
000593 f451      	BRNE _0x2000060
000594 940e 08fe 	CALL SUBOPT_0xB
000596 93fa      	ST   -Y,R31
000597 93ea      	ST   -Y,R30
000598 940e 08d8 	CALL SUBOPT_0x6
00059a 81a0      	LD   R26,Z
00059b 940e 0871 	CALL _glcd_writemem
00059d c026      	RJMP _0x2000061
                 _0x2000060:
00059e 85e9      	LDD  R30,Y+9
00059f 30e9      	CPI  R30,LOW(0x9)
0005a0 f411      	BRNE _0x2000065
0005a1 e050      	LDI  R21,LOW(0)
0005a2 c00e      	RJMP _0x2000066
                 _0x2000065:
0005a3 30ea      	CPI  R30,LOW(0xA)
0005a4 f411      	BRNE _0x2000064
0005a5 ef5f      	LDI  R21,LOW(255)
0005a6 c00a      	RJMP _0x2000066
                 _0x2000064:
0005a7 940e 08fe 	CALL SUBOPT_0xB
0005a9 940e 0907 	CALL SUBOPT_0xC
0005ab 2f5e      	MOV  R21,R30
0005ac 85e9      	LDD  R30,Y+9
0005ad 30e7      	CPI  R30,LOW(0x7)
0005ae f011      	BREQ _0x200006D
0005af 30e8      	CPI  R30,LOW(0x8)
0005b0 f421      	BRNE _0x200006E
                 _0x200006D:
                 _0x2000066:
0005b1 940e 090d 	CALL SUBOPT_0xD
0005b3 2f5e      	MOV  R21,R30
0005b4 c006      	RJMP _0x200006F
                 _0x200006E:
0005b5 30e3      	CPI  R30,LOW(0x3)
0005b6 f411      	BRNE _0x2000071
0005b7 9550      	COM  R21
0005b8 c002      	RJMP _0x2000072
                 _0x2000071:
0005b9 30e0      	CPI  R30,0
0005ba f419      	BRNE _0x2000074
                 _0x2000072:
                 _0x200006F:
0005bb 2fa5      	MOV  R26,R21
0005bc ddd3      	RCALL _pcd8544_wrdata_G100
0005bd c006      	RJMP _0x200006B
                 _0x2000074:
0005be 940e 0911 	CALL SUBOPT_0xE
0005c0 efef      	LDI  R30,LOW(255)
0005c1 93ea      	ST   -Y,R30
0005c2 85ad      	LDD  R26,Y+13
0005c3 ded4      	RCALL _pcd8544_wrmasked_G100
                 _0x200006B:
                 _0x2000061:
0005c4 cfc6      	RJMP _0x200005D
                 _0x200005F:
0005c5 85ef      	LDD  R30,Y+15
0005c6 5fe8      	SUBI R30,-LOW(8)
0005c7 87ef      	STD  Y+15,R30
0005c8 85ed      	LDD  R30,Y+13
0005c9 50e8      	SUBI R30,LOW(8)
0005ca 87ed      	STD  Y+13,R30
0005cb c0d9      	RJMP _0x2000075
                 _0x200004D:
0005cc 855d      	LDD  R21,Y+13
0005cd e020      	LDI  R18,LOW(0)
0005ce e0e0      	LDI  R30,LOW(0)
0005cf 87ed      	STD  Y+13,R30
0005d0 c07e      	RJMP _0x2000076
                 _0x200004C:
0005d1 2fe3      	MOV  R30,R19
0005d2 85ad      	LDD  R26,Y+13
0005d3 0fae      	ADD  R26,R30
0005d4 30a9      	CPI  R26,LOW(0x9)
0005d5 f420      	BRSH _0x2000077
0005d6 852d      	LDD  R18,Y+13
0005d7 e0e0      	LDI  R30,LOW(0)
0005d8 87ed      	STD  Y+13,R30
0005d9 c003      	RJMP _0x2000078
                 _0x2000077:
0005da e0e8      	LDI  R30,LOW(8)
0005db 1be3      	SUB  R30,R19
0005dc 2f2e      	MOV  R18,R30
                 _0x2000078:
0005dd 933a      	ST   -Y,R19
0005de 2fa2      	MOV  R26,R18
0005df 940e 081f 	CALL _glcd_getmask
0005e1 2f4e      	MOV  R20,R30
0005e2 85e9      	LDD  R30,Y+9
0005e3 30e6      	CPI  R30,LOW(0x6)
0005e4 f511      	BRNE _0x200007C
0005e5 940e 08fa 	CALL SUBOPT_0xA
                 _0x200007D:
0005e7 931f      	PUSH R17
0005e8 5f1f      	SUBI R17,-1
0005e9 85ee      	LDD  R30,Y+14
0005ea 91af      	POP  R26
0005eb 17ae      	CP   R26,R30
0005ec f4c8      	BRSH _0x200007F
0005ed 940e 08d8 	CALL SUBOPT_0x6
0005ef 81e0      	LD   R30,Z
0005f0 23e4      	AND  R30,R20
0005f1 2fae      	MOV  R26,R30
0005f2 2fe3      	MOV  R30,R19
0005f3 940e 0965 	CALL __LSRB12
0005f5 940e 0917 	CALL SUBOPT_0xF
0005f7 2fe3      	MOV  R30,R19
0005f8 2fa4      	MOV  R26,R20
0005f9 940e 0965 	CALL __LSRB12
0005fb 95e0      	COM  R30
0005fc 21e1      	AND  R30,R1
0005fd 2b5e      	OR   R21,R30
0005fe 940e 08fe 	CALL SUBOPT_0xB
000600 93fa      	ST   -Y,R31
000601 93ea      	ST   -Y,R30
000602 2fa5      	MOV  R26,R21
000603 940e 0871 	CALL _glcd_writemem
000605 cfe1      	RJMP _0x200007D
                 _0x200007F:
000606 c02c      	RJMP _0x200007B
                 _0x200007C:
000607 30e9      	CPI  R30,LOW(0x9)
000608 f411      	BRNE _0x2000080
000609 e050      	LDI  R21,LOW(0)
00060a c003      	RJMP _0x2000081
                 _0x2000080:
00060b 30ea      	CPI  R30,LOW(0xA)
00060c f4a9      	BRNE _0x2000087
00060d ef5f      	LDI  R21,LOW(255)
                 _0x2000081:
00060e 940e 090d 	CALL SUBOPT_0xD
000610 2fae      	MOV  R26,R30
000611 2fe3      	MOV  R30,R19
000612 940e 095d 	CALL __LSLB12
000614 2f5e      	MOV  R21,R30
                 _0x2000084:
000615 931f      	PUSH R17
000616 5f1f      	SUBI R17,-1
000617 85ee      	LDD  R30,Y+14
000618 91af      	POP  R26
000619 17ae      	CP   R26,R30
00061a f430      	BRSH _0x2000086
00061b 940e 0911 	CALL SUBOPT_0xE
00061d 934a      	ST   -Y,R20
00061e e0a0      	LDI  R26,LOW(0)
00061f de78      	RCALL _pcd8544_wrmasked_G100
000620 cff4      	RJMP _0x2000084
                 _0x2000086:
000621 c011      	RJMP _0x200007B
                 _0x2000087:
                 _0x2000088:
000622 931f      	PUSH R17
000623 5f1f      	SUBI R17,-1
000624 85ee      	LDD  R30,Y+14
000625 91af      	POP  R26
000626 17ae      	CP   R26,R30
000627 f458      	BRSH _0x200008A
000628 940e 0922 	CALL SUBOPT_0x10
00062a 2fae      	MOV  R26,R30
00062b 2fe3      	MOV  R30,R19
00062c 940e 095d 	CALL __LSLB12
00062e 93ea      	ST   -Y,R30
00062f 934a      	ST   -Y,R20
000630 85ad      	LDD  R26,Y+13
000631 de66      	RCALL _pcd8544_wrmasked_G100
000632 cfef      	RJMP _0x2000088
                 _0x200008A:
                 _0x200007B:
000633 85ed      	LDD  R30,Y+13
000634 30e0      	CPI  R30,0
000635 f409      	BRNE _0x200008B
000636 c077      	RJMP _0x200004B
                 _0x200008B:
000637 85ad      	LDD  R26,Y+13
000638 30a8      	CPI  R26,LOW(0x8)
000639 f428      	BRSH _0x200008C
00063a 85ed      	LDD  R30,Y+13
00063b 1be2      	SUB  R30,R18
00063c 2f5e      	MOV  R21,R30
00063d e0e0      	LDI  R30,LOW(0)
00063e c003      	RJMP _0x20000A2
                 _0x200008C:
00063f 2f53      	MOV  R21,R19
000640 85ed      	LDD  R30,Y+13
000641 50e8      	SUBI R30,LOW(8)
                 _0x20000A2:
000642 87ed      	STD  Y+13,R30
000643 e010      	LDI  R17,LOW(0)
000644 85ef      	LDD  R30,Y+15
000645 5fe8      	SUBI R30,-LOW(8)
000646 87ef      	STD  Y+15,R30
000647 e0e8      	LDI  R30,LOW(8)
000648 1be3      	SUB  R30,R19
000649 2f2e      	MOV  R18,R30
00064a 8908      	LDD  R16,Y+16
00064b 85ea      	LDD  R30,Y+10
00064c 85fb      	LDD  R31,Y+10+1
00064d 83ee      	STD  Y+6,R30
00064e 83ff      	STD  Y+6+1,R31
                 _0x2000076:
00064f 2fe5      	MOV  R30,R21
000650 e0f0      	LDI  R31,0
000651 59e0      	SUBI R30,LOW(-__glcd_mask*2)
000652 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000653 9144      	LPM  R20,Z
000654 85e9      	LDD  R30,Y+9
000655 30e6      	CPI  R30,LOW(0x6)
000656 f511      	BRNE _0x2000091
000657 940e 08fa 	CALL SUBOPT_0xA
                 _0x2000092:
000659 931f      	PUSH R17
00065a 5f1f      	SUBI R17,-1
00065b 85ee      	LDD  R30,Y+14
00065c 91af      	POP  R26
00065d 17ae      	CP   R26,R30
00065e f4c8      	BRSH _0x2000094
00065f 940e 08d8 	CALL SUBOPT_0x6
000661 81e0      	LD   R30,Z
000662 23e4      	AND  R30,R20
000663 2fae      	MOV  R26,R30
000664 2fe2      	MOV  R30,R18
000665 940e 095d 	CALL __LSLB12
000667 940e 0917 	CALL SUBOPT_0xF
000669 2fe2      	MOV  R30,R18
00066a 2fa4      	MOV  R26,R20
00066b 940e 095d 	CALL __LSLB12
00066d 95e0      	COM  R30
00066e 21e1      	AND  R30,R1
00066f 2b5e      	OR   R21,R30
000670 940e 08fe 	CALL SUBOPT_0xB
000672 93fa      	ST   -Y,R31
000673 93ea      	ST   -Y,R30
000674 2fa5      	MOV  R26,R21
000675 940e 0871 	CALL _glcd_writemem
000677 cfe1      	RJMP _0x2000092
                 _0x2000094:
000678 c02c      	RJMP _0x2000090
                 _0x2000091:
000679 30e9      	CPI  R30,LOW(0x9)
00067a f411      	BRNE _0x2000095
00067b e050      	LDI  R21,LOW(0)
00067c c003      	RJMP _0x2000096
                 _0x2000095:
00067d 30ea      	CPI  R30,LOW(0xA)
00067e f4a9      	BRNE _0x200009C
00067f ef5f      	LDI  R21,LOW(255)
                 _0x2000096:
000680 940e 090d 	CALL SUBOPT_0xD
000682 2fae      	MOV  R26,R30
000683 2fe2      	MOV  R30,R18
000684 940e 0965 	CALL __LSRB12
000686 2f5e      	MOV  R21,R30
                 _0x2000099:
000687 931f      	PUSH R17
000688 5f1f      	SUBI R17,-1
000689 85ee      	LDD  R30,Y+14
00068a 91af      	POP  R26
00068b 17ae      	CP   R26,R30
00068c f430      	BRSH _0x200009B
00068d 940e 0911 	CALL SUBOPT_0xE
00068f 934a      	ST   -Y,R20
000690 e0a0      	LDI  R26,LOW(0)
000691 de06      	RCALL _pcd8544_wrmasked_G100
000692 cff4      	RJMP _0x2000099
                 _0x200009B:
000693 c011      	RJMP _0x2000090
                 _0x200009C:
                 _0x200009D:
000694 931f      	PUSH R17
000695 5f1f      	SUBI R17,-1
000696 85ee      	LDD  R30,Y+14
000697 91af      	POP  R26
000698 17ae      	CP   R26,R30
000699 f458      	BRSH _0x200009F
00069a 940e 0922 	CALL SUBOPT_0x10
00069c 2fae      	MOV  R26,R30
00069d 2fe2      	MOV  R30,R18
00069e 940e 0965 	CALL __LSRB12
0006a0 93ea      	ST   -Y,R30
0006a1 934a      	ST   -Y,R20
0006a2 85ad      	LDD  R26,Y+13
0006a3 ddf4      	RCALL _pcd8544_wrmasked_G100
0006a4 cfef      	RJMP _0x200009D
                 _0x200009F:
                 _0x2000090:
                 _0x2000075:
0006a5 85e8      	LDD  R30,Y+8
0006a6 85aa      	LDD  R26,Y+10
0006a7 85bb      	LDD  R27,Y+10+1
0006a8 e0f0      	LDI  R31,0
0006a9 0fea      	ADD  R30,R26
0006aa 1ffb      	ADC  R31,R27
0006ab 87ea      	STD  Y+10,R30
0006ac 87fb      	STD  Y+10+1,R31
0006ad ceb3      	RJMP _0x2000049
                 _0x200004B:
                 _0x2140008:
0006ae 940e 09b2 	CALL __LOADLOCR6
0006b0 9661      	ADIW R28,17
0006b1 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
0006b2 940e 092f 	CALL SUBOPT_0x11
0006b4 f024      	BRLT _0x2020003
0006b5 e0e0      	LDI  R30,LOW(0)
0006b6 e0f0      	LDI  R31,HIGH(0)
0006b7 940c 0828 	JMP  _0x2140003
                 _0x2020003:
0006b9 81a8      	LD   R26,Y
0006ba 81b9      	LDD  R27,Y+1
0006bb 35a4      	CPI  R26,LOW(0x54)
0006bc e0e0      	LDI  R30,HIGH(0x54)
0006bd 07be      	CPC  R27,R30
0006be f024      	BRLT _0x2020004
0006bf e5e3      	LDI  R30,LOW(83)
0006c0 e0f0      	LDI  R31,HIGH(83)
0006c1 940c 0828 	JMP  _0x2140003
                 _0x2020004:
0006c3 81e8      	LD   R30,Y
0006c4 81f9      	LDD  R31,Y+1
0006c5 940c 0828 	JMP  _0x2140003
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
0006c7 940e 092f 	CALL SUBOPT_0x11
0006c9 f024      	BRLT _0x2020005
0006ca e0e0      	LDI  R30,LOW(0)
0006cb e0f0      	LDI  R31,HIGH(0)
0006cc 940c 0828 	JMP  _0x2140003
                 _0x2020005:
0006ce 81a8      	LD   R26,Y
0006cf 81b9      	LDD  R27,Y+1
0006d0 97d0      	SBIW R26,48
0006d1 f024      	BRLT _0x2020006
0006d2 e2ef      	LDI  R30,LOW(47)
0006d3 e0f0      	LDI  R31,HIGH(47)
0006d4 940c 0828 	JMP  _0x2140003
                 _0x2020006:
0006d6 81e8      	LD   R30,Y
0006d7 81f9      	LDD  R31,Y+1
0006d8 940c 0828 	JMP  _0x2140003
                 ; .FEND
                 _glcd_getcharw_G101:
                 ; .FSTART _glcd_getcharw_G101
0006da 93ba      	ST   -Y,R27
0006db 93aa      	ST   -Y,R26
0006dc 9723      	SBIW R28,3
0006dd 940e 0936 	CALL SUBOPT_0x12
0006df 018f      	MOVW R16,R30
0006e0 2e00      	MOV  R0,R16
0006e1 2a01      	OR   R0,R17
0006e2 f419      	BRNE _0x202000B
0006e3 e0e0      	LDI  R30,LOW(0)
0006e4 e0f0      	LDI  R31,HIGH(0)
0006e5 c05f      	RJMP _0x2140007
                 _0x202000B:
0006e6 940e 093d 	CALL SUBOPT_0x13
0006e8 820f      	STD  Y+7,R0
0006e9 940e 093d 	CALL SUBOPT_0x13
0006eb 820e      	STD  Y+6,R0
0006ec 940e 093d 	CALL SUBOPT_0x13
0006ee 8608      	STD  Y+8,R0
0006ef 85eb      	LDD  R30,Y+11
0006f0 85a8      	LDD  R26,Y+8
0006f1 17ea      	CP   R30,R26
0006f2 f418      	BRSH _0x202000C
0006f3 e0e0      	LDI  R30,LOW(0)
0006f4 e0f0      	LDI  R31,HIGH(0)
0006f5 c04f      	RJMP _0x2140007
                 _0x202000C:
0006f6 01f8      	MOVW R30,R16
                +
0006f7 5f0f     +SUBI R16 , LOW ( - 1 )
0006f8 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0006f9 9154      	LPM  R21,Z
0006fa 85a8      	LDD  R26,Y+8
0006fb 27bb      	CLR  R27
0006fc 27ee      	CLR  R30
0006fd 0fa5      	ADD  R26,R21
0006fe 1fbe      	ADC  R27,R30
0006ff 85eb      	LDD  R30,Y+11
000700 e0f0      	LDI  R31,0
000701 17ea      	CP   R30,R26
000702 07fb      	CPC  R31,R27
000703 f018      	BRLO _0x202000D
000704 e0e0      	LDI  R30,LOW(0)
000705 e0f0      	LDI  R31,HIGH(0)
000706 c03e      	RJMP _0x2140007
                 _0x202000D:
000707 81ee      	LDD  R30,Y+6
000708 95e6      	LSR  R30
000709 95e6      	LSR  R30
00070a 95e6      	LSR  R30
00070b 2f4e      	MOV  R20,R30
00070c 81ee      	LDD  R30,Y+6
00070d 70e7      	ANDI R30,LOW(0x7)
00070e f009      	BREQ _0x202000E
00070f 5f4f      	SUBI R20,-LOW(1)
                 _0x202000E:
000710 81ef      	LDD  R30,Y+7
000711 30e0      	CPI  R30,0
000712 f0a1      	BREQ _0x202000F
000713 85a9      	LDD  R26,Y+9
000714 85ba      	LDD  R27,Y+9+1
000715 93ec      	ST   X,R30
000716 85a8      	LDD  R26,Y+8
000717 85eb      	LDD  R30,Y+11
000718 1bea      	SUB  R30,R26
000719 e0f0      	LDI  R31,0
00071a 01df      	MOVW R26,R30
00071b 81ef      	LDD  R30,Y+7
00071c e0f0      	LDI  R31,0
00071d 940e 0972 	CALL __MULW12U
00071f 01df      	MOVW R26,R30
000720 2fe4      	MOV  R30,R20
000721 e0f0      	LDI  R31,0
000722 940e 0972 	CALL __MULW12U
000724 0fe0      	ADD  R30,R16
000725 1ff1      	ADC  R31,R17
000726 c01e      	RJMP _0x2140007
                 _0x202000F:
000727 0198      	MOVW R18,R16
000728 2fe5      	MOV  R30,R21
000729 e0f0      	LDI  R31,0
                +
00072a 0f0e     +ADD R16 , R30
00072b 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2020010:
00072c 85a8      	LDD  R26,Y+8
00072d 5faf      	SUBI R26,-LOW(1)
00072e 87a8      	STD  Y+8,R26
00072f 50a1      	SUBI R26,LOW(1)
000730 85eb      	LDD  R30,Y+11
000731 17ae      	CP   R26,R30
000732 f460      	BRSH _0x2020012
000733 01f9      	MOVW R30,R18
                +
000734 5f2f     +SUBI R18 , LOW ( - 1 )
000735 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000736 91a4      	LPM  R26,Z
000737 e0b0      	LDI  R27,0
000738 2fe4      	MOV  R30,R20
000739 e0f0      	LDI  R31,0
00073a 940e 0972 	CALL __MULW12U
                +
00073c 0f0e     +ADD R16 , R30
00073d 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
00073e cfed      	RJMP _0x2020010
                 _0x2020012:
00073f 01f9      	MOVW R30,R18
000740 91e4      	LPM  R30,Z
000741 85a9      	LDD  R26,Y+9
000742 85ba      	LDD  R27,Y+9+1
000743 93ec      	ST   X,R30
000744 01f8      	MOVW R30,R16
                 _0x2140007:
000745 940e 09b2 	CALL __LOADLOCR6
000747 962c      	ADIW R28,12
000748 9508      	RET
                 ; .FEND
                 _glcd_new_line_G101:
                 ; .FSTART _glcd_new_line_G101
000749 e0e0      	LDI  R30,LOW(0)
                +
00074a 93e0 0543+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
00074c 91a0 0544+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
00074e 27bb      	CLR  R27
00074f 940e 0942 	CALL SUBOPT_0x14
000751 e0f0      	LDI  R31,0
000752 0fae      	ADD  R26,R30
000753 1fbf      	ADC  R27,R31
                +
000754 91e0 0548+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000756 e0f0      	LDI  R31,0
000757 0fae      	ADD  R26,R30
000758 1fbf      	ADC  R27,R31
000759 df6d      	RCALL _glcd_clipy
                +
00075a 93e0 0544+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
00075c 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
00075d 93aa      	ST   -Y,R26
00075e 9721      	SBIW R28,1
00075f 940e 0936 	CALL SUBOPT_0x12
000761 9730      	SBIW R30,0
000762 f409      	BRNE PC+2
000763 c055      	RJMP _0x202001F
000764 81af      	LDD  R26,Y+7
000765 30aa      	CPI  R26,LOW(0xA)
000766 f409      	BRNE _0x2020020
000767 c04f      	RJMP _0x2020021
                 _0x2020020:
000768 81ef      	LDD  R30,Y+7
000769 93ea      	ST   -Y,R30
00076a 01de      	MOVW R26,R28
00076b 9617      	ADIW R26,7
00076c df6d      	RCALL _glcd_getcharw_G101
00076d 01af      	MOVW R20,R30
00076e 9730      	SBIW R30,0
00076f f409      	BRNE _0x2020022
000770 c04a      	RJMP _0x2140005
                 _0x2020022:
                +
000771 91e0 0547+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000773 81ae      	LDD  R26,Y+6
000774 0fea      	ADD  R30,R26
000775 2f3e      	MOV  R19,R30
                +
000776 91a0 0543+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
000778 27bb      	CLR  R27
000779 e0f0      	LDI  R31,0
00077a 0fea      	ADD  R30,R26
00077b 1ffb      	ADC  R31,R27
00077c 018f      	MOVW R16,R30
                +
00077d 3505     +CPI R16 , LOW ( 85 )
00077e e0e0     +LDI R30 , HIGH ( 85 )
00077f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,85
000780 f018      	BRLO _0x2020023
000781 2f03      	MOV  R16,R19
000782 2711      	CLR  R17
000783 dfc5      	RCALL _glcd_new_line_G101
                 _0x2020023:
                +
000784 91e0 0543+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000786 93ea      	ST   -Y,R30
                +
000787 91e0 0544+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000789 93ea      	ST   -Y,R30
00078a 85e8      	LDD  R30,Y+8
00078b 93ea      	ST   -Y,R30
00078c 940e 0942 	CALL SUBOPT_0x14
00078e 93ea      	ST   -Y,R30
00078f e0e1      	LDI  R30,LOW(1)
000790 93ea      	ST   -Y,R30
000791 935a      	ST   -Y,R21
000792 934a      	ST   -Y,R20
000793 e0a7      	LDI  R26,LOW(7)
000794 dd3c      	RCALL _glcd_block
                +
000795 91e0 0543+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000797 81ae      	LDD  R26,Y+6
000798 0fea      	ADD  R30,R26
000799 93ea      	ST   -Y,R30
                +
00079a 91e0 0544+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
00079c 93ea      	ST   -Y,R30
                +
00079d 91e0 0547+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
00079f 93ea      	ST   -Y,R30
0007a0 940e 0942 	CALL SUBOPT_0x14
0007a2 940e 0949 	CALL SUBOPT_0x15
                +
0007a4 91e0 0543+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
0007a6 93ea      	ST   -Y,R30
                +
0007a7 91a0 0544+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
0007a9 940e 0942 	CALL SUBOPT_0x14
0007ab 0fea      	ADD  R30,R26
0007ac 93ea      	ST   -Y,R30
0007ad 933a      	ST   -Y,R19
                +
0007ae 91e0 0548+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
0007b0 940e 0949 	CALL SUBOPT_0x15
0007b2 e5e4      	LDI  R30,LOW(84)
0007b3 e0f0      	LDI  R31,HIGH(84)
0007b4 17e0      	CP   R30,R16
0007b5 07f1      	CPC  R31,R17
0007b6 f411      	BRNE _0x2020024
                 _0x2020021:
0007b7 df91      	RCALL _glcd_new_line_G101
0007b8 c002      	RJMP _0x2140005
                 _0x2020024:
                 _0x202001F:
                +
0007b9 9300 0543+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
                 _0x2140005:
0007bb 940e 09b2 	CALL __LOADLOCR6
                 _0x2140006:
0007bd 9628      	ADIW R28,8
0007be 9508      	RET
                 ; .FEND
                 _glcd_outtextxy:
                 ; .FSTART _glcd_outtextxy
0007bf 93ba      	ST   -Y,R27
0007c0 93aa      	ST   -Y,R26
0007c1 931a      	ST   -Y,R17
0007c2 81ec      	LDD  R30,Y+4
0007c3 93ea      	ST   -Y,R30
0007c4 81ac      	LDD  R26,Y+4
0007c5 d00e      	RCALL _glcd_moveto
                 _0x2020025:
0007c6 81a9      	LDD  R26,Y+1
0007c7 81ba      	LDD  R27,Y+1+1
0007c8 91ed      	LD   R30,X+
0007c9 83a9      	STD  Y+1,R26
0007ca 83ba      	STD  Y+1+1,R27
0007cb 2f1e      	MOV  R17,R30
0007cc 30e0      	CPI  R30,0
0007cd f019      	BREQ _0x2020027
0007ce 2fa1      	MOV  R26,R17
0007cf df8d      	RCALL _glcd_putchar
0007d0 cff5      	RJMP _0x2020025
                 _0x2020027:
0007d1 8118      	LDD  R17,Y+0
0007d2 940c 081d 	JMP  _0x2140004
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
0007d4 93aa      	ST   -Y,R26
0007d5 81a9      	LDD  R26,Y+1
0007d6 27bb      	CLR  R27
0007d7 deda      	RCALL _glcd_clipx
                +
0007d8 93e0 0543+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
0007da 81a8      	LD   R26,Y
0007db 27bb      	CLR  R27
0007dc deea      	RCALL _glcd_clipy
                +
0007dd 93e0 0544+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
0007df 940c 0828 	JMP  _0x2140003
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 
                 	.CSEG
                 _itoa:
                 ; .FSTART _itoa
0007e1 93ba      	ST   -Y,R27
0007e2 93aa      	ST   -Y,R26
0007e3 91a9          ld   r26,y+
0007e4 91b9          ld   r27,y+
0007e5 91e9          ld   r30,y+
0007e6 91f9          ld   r31,y+
0007e7 9630          adiw r30,0
0007e8 f42a          brpl __itoa0
0007e9 95e0          com  r30
0007ea 95f0          com  r31
0007eb 9631          adiw r30,1
0007ec e26d          ldi  r22,'-'
0007ed 936d          st   x+,r22
                 __itoa0:
0007ee 94e8          clt
0007ef e180          ldi  r24,low(10000)
0007f0 e297          ldi  r25,high(10000)
0007f1 d00d          rcall __itoa1
0007f2 ee88          ldi  r24,low(1000)
0007f3 e093          ldi  r25,high(1000)
0007f4 d00a          rcall __itoa1
0007f5 e684          ldi  r24,100
0007f6 2799          clr  r25
0007f7 d007          rcall __itoa1
0007f8 e08a          ldi  r24,10
0007f9 d005          rcall __itoa1
0007fa 2f6e          mov  r22,r30
0007fb d010          rcall __itoa5
0007fc 2766          clr  r22
0007fd 936c          st   x,r22
0007fe 9508          ret
                 
                 __itoa1:
0007ff 2766          clr	 r22
                 __itoa2:
000800 17e8          cp   r30,r24
000801 07f9          cpc  r31,r25
000802 f020          brlo __itoa3
000803 9563          inc  r22
000804 1be8          sub  r30,r24
000805 0bf9          sbc  r31,r25
000806 f7c9          brne __itoa2
                 __itoa3:
000807 2366          tst  r22
000808 f411          brne __itoa4
000809 f016          brts __itoa5
00080a 9508          ret
                 __itoa4:
00080b 9468          set
                 __itoa5:
00080c 5d60          subi r22,-0x30
00080d 936d          st   x+,r22
00080e 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
00080f 93ba      	ST   -Y,R27
000810 93aa      	ST   -Y,R26
000811 81b9          ldd  r27,y+1
000812 81a8          ld   r26,y
000813 9610          adiw r26,0
000814 f031          breq memset1
000815 81fc          ldd  r31,y+4
000816 81eb          ldd  r30,y+3
000817 816a          ldd  r22,y+2
                 memset0:
000818 9361          st   z+,r22
000819 9711          sbiw r26,1
00081a f7e9          brne memset0
                 memset1:
00081b 81eb          ldd  r30,y+3
00081c 81fc          ldd  r31,y+4
                 _0x2140004:
00081d 9625      	ADIW R28,5
00081e 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
00081f 93aa      	ST   -Y,R26
000820 81e8      	LD   R30,Y
000821 e0f0      	LDI  R31,0
000822 59e0      	SUBI R30,LOW(-__glcd_mask*2)
000823 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000824 91a4      	LPM  R26,Z
000825 81e9      	LDD  R30,Y+1
000826 940e 095d 	CALL __LSLB12
                 _0x2140003:
000828 9622      	ADIW R28,2
000829 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
00082a 93aa      	ST   -Y,R26
00082b 931a      	ST   -Y,R17
00082c 81e9      	LDD  R30,Y+1
00082d 30e7      	CPI  R30,LOW(0x7)
00082e f011      	BREQ _0x20E0007
00082f 30ea      	CPI  R30,LOW(0xA)
000830 f419      	BRNE _0x20E0008
                 _0x20E0007:
000831 9110 0541 	LDS  R17,_glcd_state
000833 c009      	RJMP _0x20E0009
                 _0x20E0008:
000834 30e9      	CPI  R30,LOW(0x9)
000835 f419      	BRNE _0x20E000B
                +
000836 9110 0542+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
000838 c004      	RJMP _0x20E0009
                 _0x20E000B:
000839 30e8      	CPI  R30,LOW(0x8)
00083a f4a1      	BRNE _0x20E0005
                +
00083b 9110 0551+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x20E0009:
                +
00083d 91e0 0542+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
00083f 30e0      	CPI  R30,0
000840 f049      	BREQ _0x20E000E
000841 3010      	CPI  R17,0
000842 f019      	BREQ _0x20E000F
000843 efef      	LDI  R30,LOW(255)
000844 8118      	LDD  R17,Y+0
000845 c029      	RJMP _0x2140002
                 _0x20E000F:
000846 81ea      	LDD  R30,Y+2
000847 95e0      	COM  R30
000848 8118      	LDD  R17,Y+0
000849 c025      	RJMP _0x2140002
                 _0x20E000E:
00084a 3010      	CPI  R17,0
00084b f419      	BRNE _0x20E0011
00084c e0e0      	LDI  R30,LOW(0)
00084d 8118      	LDD  R17,Y+0
00084e c020      	RJMP _0x2140002
                 _0x20E0011:
                 _0x20E0005:
00084f 81ea      	LDD  R30,Y+2
000850 8118      	LDD  R17,Y+0
000851 c01d      	RJMP _0x2140002
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
000852 93ba      	ST   -Y,R27
000853 93aa      	ST   -Y,R26
000854 81ea      	LDD  R30,Y+2
000855 30e1      	CPI  R30,LOW(0x1)
000856 f421      	BRNE _0x20E0015
000857 81e8      	LD   R30,Y
000858 81f9      	LDD  R31,Y+1
000859 91e4      	LPM  R30,Z
00085a c014      	RJMP _0x2140002
                 _0x20E0015:
00085b 30e2      	CPI  R30,LOW(0x2)
00085c f429      	BRNE _0x20E0016
00085d 81a8      	LD   R26,Y
00085e 81b9      	LDD  R27,Y+1
00085f 940e 0982 	CALL __EEPROMRDB
000861 c00d      	RJMP _0x2140002
                 _0x20E0016:
000862 30e3      	CPI  R30,LOW(0x3)
000863 f441      	BRNE _0x20E0018
000864 81a8      	LD   R26,Y
000865 81b9      	LDD  R27,Y+1
                +
000866 91e0 055a+LDS R30 , _glcd_state + ( 25 )
000868 91f0 055b+LDS R31 , _glcd_state + ( 25 ) + 1
00086a 9509     +ICALL
                 	__CALL1MN _glcd_state,25
00086b c003      	RJMP _0x2140002
                 _0x20E0018:
00086c 81a8      	LD   R26,Y
00086d 81b9      	LDD  R27,Y+1
00086e 91ec      	LD   R30,X
                 _0x2140002:
00086f 9623      	ADIW R28,3
000870 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
000871 93aa      	ST   -Y,R26
000872 81eb      	LDD  R30,Y+3
000873 30e0      	CPI  R30,0
000874 f429      	BRNE _0x20E001C
000875 81e8      	LD   R30,Y
000876 81a9      	LDD  R26,Y+1
000877 81ba      	LDD  R27,Y+1+1
000878 93ec      	ST   X,R30
000879 c014      	RJMP _0x20E001B
                 _0x20E001C:
00087a 30e2      	CPI  R30,LOW(0x2)
00087b f431      	BRNE _0x20E001D
00087c 81e8      	LD   R30,Y
00087d 81a9      	LDD  R26,Y+1
00087e 81ba      	LDD  R27,Y+1+1
00087f 940e 0996 	CALL __EEPROMWRB
000881 c00c      	RJMP _0x20E001B
                 _0x20E001D:
000882 30e3      	CPI  R30,LOW(0x3)
000883 f451      	BRNE _0x20E001B
000884 81e9      	LDD  R30,Y+1
000885 81fa      	LDD  R31,Y+1+1
000886 93fa      	ST   -Y,R31
000887 93ea      	ST   -Y,R30
000888 81aa      	LDD  R26,Y+2
                +
000889 91e0 055c+LDS R30 , _glcd_state + ( 27 )
00088b 91f0 055d+LDS R31 , _glcd_state + ( 27 ) + 1
00088d 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x20E001B:
                 _0x2140001:
00088e 9624      	ADIW R28,4
00088f 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _glcd_state:
000541           	.BYTE 0x1D
                 
                 	.ESEG
                 _my_eeprom:
000000           	.BYTE 0x2
                 
                 	.DSEG
                 _keypad:
00055e           	.BYTE 0x12
                 _tmp:
000570           	.BYTE 0xA
                 _tmp2:
00057a           	.BYTE 0xA
                 _gfx_addr_G100:
000584           	.BYTE 0x2
                 _gfx_buffer_G100:
000586           	.BYTE 0x1F8
                 __seed_G104:
00077e           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x0:
000890 e0a6      	LDI  R26,LOW(6)
000891 9f0a      	MUL  R16,R26
000892 01f0      	MOVW R30,R0
000893 5ae2      	SUBI R30,LOW(-_keypad)
000894 4ffa      	SBCI R31,HIGH(-_keypad)
000895 01df      	MOVW R26,R30
000896 2fe3      	MOV  R30,R19
000897 e0f0      	LDI  R31,0
000898 0fee      	LSL  R30
000899 1fff      	ROL  R31
00089a 0fae      	ADD  R26,R30
00089b 1fbf      	ADC  R27,R31
00089c 940e 097a 	CALL __GETW1P
00089e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0x1:
00089f 93ba      	ST   -Y,R27
0008a0 93aa      	ST   -Y,R26
0008a1 940e 047a 	CALL _glcd_clear
0008a3 81e8      	LD   R30,Y
0008a4 81f9      	LDD  R31,Y+1
0008a5 93fa      	ST   -Y,R31
0008a6 93ea      	ST   -Y,R30
0008a7 e7aa      	LDI  R26,LOW(_tmp2)
0008a8 e0b5      	LDI  R27,HIGH(_tmp2)
0008a9 940e 07e1 	CALL _itoa
0008ab e0e5      	LDI  R30,LOW(5)
0008ac 93ea      	ST   -Y,R30
0008ad e0ea      	LDI  R30,LOW(10)
0008ae 93ea      	ST   -Y,R30
0008af e7aa      	LDI  R26,LOW(_tmp2)
0008b0 e0b5      	LDI  R27,HIGH(_tmp2)
0008b1 940e 07bf 	CALL _glcd_outtextxy
0008b3 e0ef      	LDI  R30,LOW(15)
0008b4 93ea      	ST   -Y,R30
0008b5 e1e4      	LDI  R30,LOW(20)
0008b6 93ea      	ST   -Y,R30
0008b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2:
0008b8 93fa      	ST   -Y,R31
0008b9 93ea      	ST   -Y,R30
0008ba e7a0      	LDI  R26,LOW(_tmp)
0008bb e0b5      	LDI  R27,HIGH(_tmp)
0008bc 940e 07e1 	CALL _itoa
0008be e1ee      	LDI  R30,LOW(30)
0008bf 93ea      	ST   -Y,R30
0008c0 93ea      	ST   -Y,R30
0008c1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
                +
0008c2 e000     +LDI R16 , LOW ( 0 )
0008c3 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
0008c4 ef2f     +LDI R18 , LOW ( - 1 )
0008c5 ef3f     +LDI R19 , HIGH ( - 1 )
                 	__GETWRN 18,19,-1
                +
0008c6 e040     +LDI R20 , LOW ( 0 )
0008c7 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
0008c8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x4:
0008c9 93fa      	ST   -Y,R31
0008ca 93ea      	ST   -Y,R30
0008cb 01d5      	MOVW R26,R10
0008cc 19a8      	SUB  R26,R8
0008cd 09b9      	SBC  R27,R9
0008ce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x5:
0008cf 93fa      	ST   -Y,R31
0008d0 93ea      	ST   -Y,R30
0008d1 01fe      	MOVW R30,R28
0008d2 9632      	ADIW R30,2
0008d3 93fa      	ST   -Y,R31
0008d4 93ea      	ST   -Y,R30
0008d5 e1ee      	LDI  R30,LOW(30)
0008d6 e0f0      	LDI  R31,HIGH(30)
0008d7 cff1      	RJMP SUBOPT_0x4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x6:
0008d8 e8a4      	LDI  R26,LOW(_gfx_addr_G100)
0008d9 e0b5      	LDI  R27,HIGH(_gfx_addr_G100)
0008da 91ed      	LD   R30,X+
0008db 91fd      	LD   R31,X+
0008dc 9631      	ADIW R30,1
0008dd 93fe      	ST   -X,R31
0008de 93ee      	ST   -X,R30
0008df 9731      	SBIW R30,1
0008e0 57ea      	SUBI R30,LOW(-_gfx_buffer_G100)
0008e1 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G100)
0008e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
0008e3 93e0 0064 	STS  100,R30
0008e5 91e0 0065 	LDS  R30,101
0008e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
0008e8 0fea      	ADD  R30,R26
0008e9 1ffb      	ADC  R31,R27
0008ea 83ee      	STD  Y+6,R30
0008eb 83ff      	STD  Y+6+1,R31
0008ec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x9:
0008ed 85ec      	LDD  R30,Y+12
0008ee 93ea      	ST   -Y,R30
0008ef 81ef      	LDD  R30,Y+7
0008f0 85f8      	LDD  R31,Y+7+1
0008f1 9631      	ADIW R30,1
0008f2 83ef      	STD  Y+7,R30
0008f3 87f8      	STD  Y+7+1,R31
0008f4 9731      	SBIW R30,1
0008f5 93fa      	ST   -Y,R31
0008f6 93ea      	ST   -Y,R30
0008f7 e0a0      	LDI  R26,LOW(0)
0008f8 940c 0871 	JMP  _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
0008fa 930a      	ST   -Y,R16
0008fb 89a8      	LDD  R26,Y+16
0008fc 940c 0399 	JMP  _pcd8544_setaddr_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0xB:
0008fe 85ec      	LDD  R30,Y+12
0008ff 93ea      	ST   -Y,R30
000900 81ef      	LDD  R30,Y+7
000901 85f8      	LDD  R31,Y+7+1
000902 9631      	ADIW R30,1
000903 83ef      	STD  Y+7,R30
000904 87f8      	STD  Y+7+1,R31
000905 9731      	SBIW R30,1
000906 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xC:
000907 2766      	CLR  R22
000908 2777      	CLR  R23
000909 01df      	MOVW R26,R30
00090a 01cb      	MOVW R24,R22
00090b 940c 0852 	JMP  _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
00090d 935a      	ST   -Y,R21
00090e 85aa      	LDD  R26,Y+10
00090f 940c 082a 	JMP  _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE:
000911 930a      	ST   -Y,R16
000912 9503      	INC  R16
000913 89e8      	LDD  R30,Y+16
000914 93ea      	ST   -Y,R30
000915 935a      	ST   -Y,R21
000916 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xF:
000917 2f5e      	MOV  R21,R30
000918 85ec      	LDD  R30,Y+12
000919 93ea      	ST   -Y,R30
00091a 81af      	LDD  R26,Y+7
00091b 85b8      	LDD  R27,Y+7+1
00091c 2788      	CLR  R24
00091d 2799      	CLR  R25
00091e 940e 0852 	CALL _glcd_readmem
000920 2e1e      	MOV  R1,R30
000921 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x10:
000922 930a      	ST   -Y,R16
000923 9503      	INC  R16
000924 89e8      	LDD  R30,Y+16
000925 93ea      	ST   -Y,R30
000926 85ee      	LDD  R30,Y+14
000927 93ea      	ST   -Y,R30
000928 85e9      	LDD  R30,Y+9
000929 85fa      	LDD  R31,Y+9+1
00092a 9631      	ADIW R30,1
00092b 87e9      	STD  Y+9,R30
00092c 87fa      	STD  Y+9+1,R31
00092d 9731      	SBIW R30,1
00092e cfd8      	RJMP SUBOPT_0xC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
00092f 93ba      	ST   -Y,R27
000930 93aa      	ST   -Y,R26
000931 81a8      	LD   R26,Y
000932 81b9      	LDD  R27,Y+1
000933 940e 09a7 	CALL __CPW02
000935 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
000936 940e 09ab 	CALL __SAVELOCR6
                +
000938 91e0 0545+LDS R30 , _glcd_state + ( 4 )
00093a 91f0 0546+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
00093c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13:
00093d 01f8      	MOVW R30,R16
                +
00093e 5f0f     +SUBI R16 , LOW ( - 1 )
00093f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000940 9004      	LPM  R0,Z
000941 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x14:
                +
000942 91e0 0545+LDS R30 , _glcd_state + ( 4 )
000944 91f0 0546+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000946 9631      	ADIW R30,1
000947 91e4      	LPM  R30,Z
000948 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x15:
000949 93ea      	ST   -Y,R30
00094a e0e0      	LDI  R30,LOW(0)
00094b 93ea      	ST   -Y,R30
00094c e0e0      	LDI  R30,LOW(0)
00094d e0f0      	LDI  R31,HIGH(0)
00094e 93fa      	ST   -Y,R31
00094f 93ea      	ST   -Y,R30
000950 e0a9      	LDI  R26,LOW(9)
000951 940c 04d1 	JMP  _glcd_block
                 
                 
                 	.CSEG
                 _delay_ms:
000953 9610      	adiw r26,0
000954 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000955 ed80     +LDI R24 , LOW ( 0x7D0 )
000956 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000957 9701     +SBIW R24 , 1
000958 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000959 95a8      	wdr
00095a 9711      	sbiw r26,1
00095b f7c9      	brne __delay_ms0
                 __delay_ms1:
00095c 9508      	ret
                 
                 __LSLB12:
00095d 23ee      	TST  R30
00095e 2e0e      	MOV  R0,R30
00095f 2fea      	MOV  R30,R26
000960 f019      	BREQ __LSLB12R
                 __LSLB12L:
000961 0fee      	LSL  R30
000962 940a      	DEC  R0
000963 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
000964 9508      	RET
                 
                 __LSRB12:
000965 23ee      	TST  R30
000966 2e0e      	MOV  R0,R30
000967 2fea      	MOV  R30,R26
000968 f019      	BREQ __LSRB12R
                 __LSRB12L:
000969 95e6      	LSR  R30
00096a 940a      	DEC  R0
00096b f7e9      	BRNE __LSRB12L
                 __LSRB12R:
00096c 9508      	RET
                 
                 __LSLW2:
00096d 0fee      	LSL  R30
00096e 1fff      	ROL  R31
00096f 0fee      	LSL  R30
000970 1fff      	ROL  R31
000971 9508      	RET
                 
                 __MULW12U:
000972 9ffa      	MUL  R31,R26
000973 2df0      	MOV  R31,R0
000974 9feb      	MUL  R30,R27
000975 0df0      	ADD  R31,R0
000976 9fea      	MUL  R30,R26
000977 2de0      	MOV  R30,R0
000978 0df1      	ADD  R31,R1
000979 9508      	RET
                 
                 __GETW1P:
00097a 91ed      	LD   R30,X+
00097b 91fc      	LD   R31,X
00097c 9711      	SBIW R26,1
00097d 9508      	RET
                 
                 __EEPROMRDW:
00097e 9611      	ADIW R26,1
00097f d002      	RCALL __EEPROMRDB
000980 2ffe      	MOV  R31,R30
000981 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
000982 99e1      	SBIC EECR,EEWE
000983 cffe      	RJMP __EEPROMRDB
000984 93ff      	PUSH R31
000985 b7ff      	IN   R31,SREG
000986 94f8      	CLI
000987 bbae      	OUT  EEARL,R26
000988 bbbf      	OUT  EEARH,R27
000989 9ae0      	SBI  EECR,EERE
00098a b3ed      	IN   R30,EEDR
00098b bfff      	OUT  SREG,R31
00098c 91ff      	POP  R31
00098d 9508      	RET
                 
                 __EEPROMWRW:
00098e d007      	RCALL __EEPROMWRB
00098f 9611      	ADIW R26,1
000990 93ef      	PUSH R30
000991 2fef      	MOV  R30,R31
000992 d003      	RCALL __EEPROMWRB
000993 91ef      	POP  R30
000994 9711      	SBIW R26,1
000995 9508      	RET
                 
                 __EEPROMWRB:
000996 9be1      	SBIS EECR,EEWE
000997 c002      	RJMP __EEPROMWRB1
000998 95a8      	WDR
000999 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
00099a b79f      	IN   R25,SREG
00099b 94f8      	CLI
00099c bbae      	OUT  EEARL,R26
00099d bbbf      	OUT  EEARH,R27
00099e 9ae0      	SBI  EECR,EERE
00099f b38d      	IN   R24,EEDR
0009a0 17e8      	CP   R30,R24
0009a1 f019      	BREQ __EEPROMWRB0
0009a2 bbed      	OUT  EEDR,R30
0009a3 9ae2      	SBI  EECR,EEMWE
0009a4 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
0009a5 bf9f      	OUT  SREG,R25
0009a6 9508      	RET
                 
                 __CPW02:
0009a7 2400      	CLR  R0
0009a8 160a      	CP   R0,R26
0009a9 060b      	CPC  R0,R27
0009aa 9508      	RET
                 
                 __SAVELOCR6:
0009ab 935a      	ST   -Y,R21
                 __SAVELOCR5:
0009ac 934a      	ST   -Y,R20
                 __SAVELOCR4:
0009ad 933a      	ST   -Y,R19
                 __SAVELOCR3:
0009ae 932a      	ST   -Y,R18
                 __SAVELOCR2:
0009af 931a      	ST   -Y,R17
0009b0 930a      	ST   -Y,R16
0009b1 9508      	RET
                 
                 __LOADLOCR6:
0009b2 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0009b3 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0009b4 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0009b5 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0009b6 8119      	LDD  R17,Y+1
0009b7 8108      	LD   R16,Y
0009b8 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128A register use summary:
r0 :  28 r1 :   5 r2 :   0 r3 :   0 r4 :   1 r5 :   1 r6 :   6 r7 :   4 
r8 :   6 r9 :   4 r10:   3 r11:   2 r12:   0 r13:   0 r14:   0 r15:   0 
r16:  51 r17:  80 r18:  32 r19:  40 r20:  24 r21:  37 r22:  16 r23:   1 
r24:  20 r25:  11 r26: 257 r27:  92 r28:  25 r29:   1 r30: 701 r31: 154 
x  :  18 y  : 427 z  :  24 
Registers used: 29 out of 35 (82.9%)

ATmega128A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  16 add   :  23 
adiw  :  32 and   :   8 andi  :  20 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  35 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   5 brmi  :   0 brne  :  69 brpl  :   1 brsh  :  18 brtc  :   0 
brts  :   1 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  : 120 
cbi   :   5 cbr   :   0 clc   :   0 clh   :   0 cli   :   3 cln   :   0 
clr   :  26 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   9 
cp    :  27 cpc   :  20 cpi   :  78 cpse  :   0 dec   :   3 des   :   0 
elpm  :   0 eor   :   1 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 
ijmp  :   0 in    :   8 inc   :   3 jmp   :  56 ld    :  38 ldd   : 218 
ldi   : 231 lds   :  44 lpm   :  23 lsl   :   5 lsr   :  15 mov   :  84 
movw  :  36 mul   :   7 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 
or    :   6 ori   :  18 out   :  20 pop   :  12 push  :  12 rcall :  57 
ret   :  43 reti  :   1 rjmp  :  96 rol   :   3 ror   :   0 sbc   :   2 
sbci  :  10 sbi   :  10 sbic  :   1 sbis  :   1 sbiw  :  28 sbr   :   0 
sbrc  :   0 sbrs  :   0 sec   :   0 seh   :   0 sei   :   1 sen   :   0 
ser   :   0 ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    : 153 std   :  45 sts   :  44 sub   :   8 subi  :  33 
swap  :   0 tst   :   3 wdr   :   2 
Instructions used: 62 out of 117 (53.0%)

ATmega128A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001372   4330    648   4978  131072   3.8%
[.dseg] 0x000100 0x000782      0    642    642    4096  15.7%
[.eseg] 0x000000 0x000002      0      2      2    4096   0.0%

Assembly complete, 0 errors, 13 warnings
