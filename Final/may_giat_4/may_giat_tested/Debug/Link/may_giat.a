;/*
; * may_giat.c
; *
; * Created: 12/28/2022 2:23:27 AM
; * Author: Who
; */
;
;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <glcd.h>
;#include <font5x7.h>
;#include <stdio.h>
;#include  <alcd.h>
;int curSpeed = 0;
;bool led = false;
;int counter = 0;
;char speedText[16];
;// Interrupt c?a timer1
;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
; 0000 0014 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0015     // Reinitialize Timer1 value
; 0000 0016     TCNT1H = 0xE0C0 >> 8;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0017     TCNT1L = 0xE0C0 & 0xff;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0018 
; 0000 0019     // ?i?u khi?n LED nh?p nh?y
; 0000 001A     if (led) {
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 001B         if (counter == 2000)
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 001C             counter = 0;
;PCODE: $00000018 VOL: 0
; 0000 001D 
; 0000 001E         if (counter == 0) {
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 001F             PORTD.4 = 0;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0020             PORTD.5 = 1;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0021         }
; 0000 0022 
; 0000 0023         if (counter == 1000) {
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0024             PORTD.5 = 0;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0025             PORTD.4 = 1;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0026         }
; 0000 0027         counter++;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0028     }
; 0000 0029 }
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;
;// H?m di?u ch?nh t?c d? d?ng co
;void adjustSpeed(int speed) {
; 0000 002C void adjustSpeed(int speed) {
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 002D     OCR0 = 255 - speed;
;PCODE: $00000032 VOL: 0
;	speed -> Y+0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 002E }
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;
;// H?m c?p nh?t t?c d? d?ng co
;void speedUpdater(int option) {
; 0000 0031 void speedUpdater(int option) {
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0032     int newSpeed;
; 0000 0033     if (curSpeed == 0) {
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;	option -> Y+2
;	newSpeed -> R16,R17
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0034         curSpeed = 63;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0035     } else {
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0036         if (option == 20)
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0037             newSpeed = curSpeed + curSpeed / 5;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0038         else if (option == 100)
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0039             newSpeed = curSpeed * 2;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 003A 
; 0000 003B         if (newSpeed > 255)
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 003C             curSpeed = 255;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 003D         else
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 003E             curSpeed = newSpeed;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 003F     }
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0040     adjustSpeed(curSpeed);
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0041 }
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;
;// H?m x? l? ch? d? v?t
;void vat() {
; 0000 0044 void vat() {
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0045     int second = -1;
; 0000 0046 
; 0000 0047     // B?t role 2 trong 2 gi?y
; 0000 0048     PORTC.2 = 1;
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;	second -> R16,R17
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0049     delay_ms(2000);
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 004A     PORTC.2 = 0;
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 004B 
; 0000 004C     // Quay d?ng co trong 3 gi?y
; 0000 004D     while (second != 3) {
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 004E         speedUpdater(100);
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 004F         second++;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 0050         delay_ms(1000);
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 0051     }
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 0052 
; 0000 0053     curSpeed = 0;
;PCODE: $00000084 VOL: 0
; 0000 0054     adjustSpeed(0);
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 0055     led = true;
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 0056 }
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;
;// H?m x? l? ch? d? gi?t
;void giat() {
; 0000 0059 void giat() {
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 005A     int second = -1;
; 0000 005B 
; 0000 005C     // B?t role 1 trong 2 gi?y
; 0000 005D     PORTC.3 = 1;
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;	second -> R16,R17
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 005E     delay_ms(2000);
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 005F     PORTC.3 = 0;
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 0060 
; 0000 0061     // Quay d?ng co trong 10 gi?y
; 0000 0062     while (second != 10) {
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 0063         lcd_clear();
;PCODE: $0000009D VOL: 0
; 0000 0064         lcd_putsf("Dang giat");
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0065         glcd_clear();
;PCODE: $000000A1 VOL: 0
; 0000 0066         glcd_outtextxy(10, 30, "Dang giat");
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 0067         lcd_gotoxy(0,1);
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 0068         speedUpdater(20);
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 0069 
; 0000 006A         // Hi?n th? t?c d? hi?n t?i l?n GLCD
; 0000 006B 
; 0000 006C         sprintf(speedText, "Toc do: %d", curSpeed);
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 006D         glcd_outtextxy(10, 40, speedText);
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 006E 
; 0000 006F         lcd_puts(speedText);
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 0070 
; 0000 0071         second++;
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 0072         delay_ms(1000);
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 0073     }
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 0074 
; 0000 0075 
; 0000 0076 }
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0

	.DSEG
_0x24:
	.BYTE 0xA
;
;void main(void)
; 0000 0079 {

	.CSEG
;PCODE: $000000CD VOL: 0
; 0000 007A     // Kh?i t?o GLCD
; 0000 007B     GLCDINIT_t glcd_init_data;
; 0000 007C     glcd_init_data.font = font5x7;
;PCODE: $000000CE VOL: 0
;	glcd_init_data -> Y+0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0000 007D     glcd_init_data.temp_coef = 140;
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 007E     glcd_init_data.bias = 4;
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 007F     glcd_init_data.vlcd = 66;
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 0080     glcd_init(&glcd_init_data);
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 0081     lcd_init(16);
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 0082 
; 0000 0083     // K?o l?n BT1
; 0000 0084     DDRB.2 = 0;
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 0085     PORTB.2 = 1;
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 0086 
; 0000 0087     // K?o l?n BT2
; 0000 0088     DDRB.3 = 0;
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 0089     PORTB.3 = 1;
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0000 008A 
; 0000 008B     // Role 1 v? 2
; 0000 008C     DDRC.3 = 1;
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0000 008D     DDRC.2 = 1;
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
; 0000 008E 
; 0000 008F     // LED
; 0000 0090     DDRD.5 = 1;
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0000 0091     DDRD.4 = 1;
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
; 0000 0092 
; 0000 0093     // Kh?i t?o d?ng co v? timer
; 0000 0094     DDRB.4 = 1;
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 0095     DDRD.7 = 1;
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0000 0096     ASSR = 0 << AS0;
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0000 0097     TCCR0 = (1 << WGM00) | (1 << COM01) | (1 << COM00) | (0 << WGM01) | (1 << CS02) | (0 << CS01) | (0 << CS00);
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 0098     TCNT0 = 0x00;
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0000 0099     adjustSpeed(255);
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0000 009A     TCCR1A = (0 << COM1A1) | (0 << COM1A0) | (0 << COM1B1) | (0 << COM1B0) | (0 << COM1C1) | (0 << COM1C0) | (0 << WGM11 ...
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0000 009B     TCCR1B = (0 << ICNC1) | (0 << ICES1) | (0 << WGM13) | (0 << WGM12) | (0 << CS12) | (0 << CS11) | (1 << CS10);
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
; 0000 009C     TCNT1H = 0xE0;
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
; 0000 009D     TCNT1L = 0xC0;
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 009E 
; 0000 009F     // Kh?i t?o ng?t cho timer1
; 0000 00A0     TIMSK = (0 << OCIE2) | (0 << TOIE2) | (0 << TICIE1) | (0 << OCIE1A) | (0 << OCIE1B) | (1 << TOIE1) | (0 << OCIE0) |  ...
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
; 0000 00A1     ETIMSK = (0 << TICIE3) | (0 << OCIE3A) | (0 << OCIE3B) | (0 << TOIE3) | (0 << OCIE3C) | (0 << OCIE1C);
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
; 0000 00A2     #asm("sei")
;PCODE: $0000010A VOL: 0
	sei
;PCODE: $0000010B VOL: 0
; 0000 00A3 
; 0000 00A4     // Hi?n th? menu ban d?u
; 0000 00A5   //  glcd_outtextxy(10, 10, "MAY GIAT");
; 0000 00A6     //glcd_outtextxy(10, 20, "BT1. GIAT");
; 0000 00A7     glcd_outtextxy(10, 30, "May giat");
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
; 0000 00A8     lcd_putsf("May giat");
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
; 0000 00A9 
; 0000 00AA     while (1)
;PCODE: $00000116 VOL: 0
; 0000 00AB     {
; 0000 00AC         if (PINB.3 == 0)
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 00AD             giat();
;PCODE: $0000011A VOL: 0
; 0000 00AE         if (PINB.2 == 0)
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0000 00AF             vat();
;PCODE: $0000011F VOL: 0
; 0000 00B0         delay_ms(250);
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0000 00B1     }
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
; 0000 00B2 }
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0

	.DSEG
_0x39:
	.BYTE 0x9
