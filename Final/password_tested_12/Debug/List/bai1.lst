
AVRASM ver. 2.1.30  D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_tested_12\Debug\List\bai1.asm Sat Dec 21 16:41:57 2024

D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_tested_12\Debug\List\bai1.asm(1090): warning: Register r4 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_tested_12\Debug\List\bai1.asm(1091): warning: Register r5 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_tested_12\Debug\List\bai1.asm(1092): warning: Register r6 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_tested_12\Debug\List\bai1.asm(1093): warning: Register r7 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_tested_12\Debug\List\bai1.asm(1094): warning: Register r8 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_tested_12\Debug\List\bai1.asm(1095): warning: Register r9 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128A
                 ;Program type           : Application
                 ;Clock frequency        : 8,000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128A
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _miss=R4
                 	.DEF _miss_msb=R5
                 	.DEF _counter=R6
                 	.DEF _counter_msb=R7
                 	.DEF _dem_sai=R8
                 	.DEF _dem_sai_msb=R9
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0190 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 01c0 	JMP  _timer0_ovf_isr
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _font5x7:
000046 0705
000047 6020
000048 0000
000049 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
00004a 0000
00004b 5f00
00004c 0000
00004d 0700      	.DB  0x0,0x0,0x0,0x5F,0x0,0x0,0x0,0x7
00004e 0700
00004f 1400
000050 147f
000051 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
000052 2a24
000053 2a7f
000054 2312
000055 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
000056 6264
000057 4936
000058 2255
000059 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
00005a 0305
00005b 0000
00005c 1c00
00005d 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
00005e 0000
00005f 2241
000060 001c
000061 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
000062 2a1c
000063 0808
000064 3e08
000065 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
000066 5000
000067 0030
000068 0800
000069 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
00006a 0808
00006b 3000
00006c 0030
00006d 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
00006e 0810
00006f 0204
000070 513e
000071 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
000072 003e
000073 7f42
000074 0040
000075 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
000076 4951
000077 2146
000078 4541
000079 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
00007a 1418
00007b 7f12
00007c 2710
00007d 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
00007e 3945
00007f 4a3c
000080 4949
000081 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
000082 0971
000083 0305
000084 4936
000085 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
000086 0636
000087 4949
000088 1e29
000089 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
00008a 0036
00008b 0000
00008c 3656
00008d 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
00008e 0800
00008f 2214
000090 1441
000091 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
000092 1414
000093 2241
000094 0814
000095 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
000096 5101
000097 0609
000098 4932
000099 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
00009a 7e3e
00009b 1111
00009c 7e11
00009d 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
00009e 4949
00009f 3e36
0000a0 4141
0000a1 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
0000a2 417f
0000a3 2241
0000a4 7f1c
0000a5 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
0000a6 4149
0000a7 097f
0000a8 0109
0000a9 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
0000aa 4141
0000ab 3251
0000ac 087f
0000ad 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
0000ae 007f
0000af 7f41
0000b0 0041
0000b1 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
0000b2 3f41
0000b3 7f01
0000b4 1408
0000b5 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
0000b6 407f
0000b7 4040
0000b8 7f40
0000b9 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
0000ba 7f02
0000bb 047f
0000bc 1008
0000bd 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
0000be 4141
0000bf 3e41
0000c0 097f
0000c1 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
0000c2 3e06
0000c3 5141
0000c4 5e21
0000c5 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
0000c6 2919
0000c7 4646
0000c8 4949
0000c9 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
0000ca 0101
0000cb 017f
0000cc 3f01
0000cd 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
0000ce 3f40
0000cf 201f
0000d0 2040
0000d1 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
0000d2 1820
0000d3 7f20
0000d4 1463
0000d5 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000d6 0363
0000d7 7804
0000d8 0304
0000d9 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000da 4549
0000db 0043
0000dc 7f00
0000dd 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000de 0402
0000df 1008
0000e0 4120
0000e1 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000e2 0000
0000e3 0204
0000e4 0201
0000e5 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000e6 4040
0000e7 4040
0000e8 0100
0000e9 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000ea 2000
0000eb 5454
0000ec 7854
0000ed 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000ee 4444
0000ef 3838
0000f0 4444
0000f1 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000f2 4438
0000f3 4844
0000f4 387f
0000f5 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000f6 1854
0000f7 7e08
0000f8 0109
0000f9 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000fa 5414
0000fb 3c54
0000fc 087f
0000fd 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000fe 0078
0000ff 7d44
000100 0040
000101 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
000102 3d44
000103 0000
000104 107f
000105 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
000106 4100
000107 407f
000108 7c00
000109 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
00010a 7804
00010b 087c
00010c 0404
00010d 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
00010e 4444
00010f 3844
000110 147c
000111 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
000112 0808
000113 1414
000114 7c18
000115 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
000116 0404
000117 4808
000118 5454
000119 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
00011a 3f04
00011b 4044
00011c 3c20
00011d 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
00011e 7c20
00011f 201c
000120 2040
000121 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
000122 3040
000123 3c40
000124 2844
000125 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
000126 0c44
000127 5050
000128 3c50
000129 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
00012a 4c54
00012b 0044
00012c 3608
00012d 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
00012e 0000
00012f 007f
000130 0000
000131 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
000132 0008
000133 0102
000134 0402
000135 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
000136 4141
000137 7f41      	.DB  0x41,0x41,0x41,0x7F
                 __glcd_mask:
000138 0100
000139 0703
00013a 1f0f
00013b 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_tested_12\Debug\List\bai1.asm(1204): warning: .cseg .db misalignment - padding zero byte
00013c 00ff      	.DB  0xFF
                 _tbl10_G103:
00013d 2710
00013e 03e8
00013f 0064
000140 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000141 0001      	.DB  0x1,0x0
                 _tbl16_G103:
000142 1000
000143 0100
000144 0010
000145 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000146 0000
000147 0000      	.DB  0x0,0x0,0x0,0x0
000148 0000      	.DB  0x0,0x0
                 
                 _0x3:
000149 0001
00014a 0002
00014b 0003
00014c 0004      	.DB  0x1,0x0,0x2,0x0,0x3,0x0,0x4,0x0
00014d 0005
00014e 0006
00014f 0007
000150 0008      	.DB  0x5,0x0,0x6,0x0,0x7,0x0,0x8,0x0
D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_tested_12\Debug\List\bai1.asm(1219): warning: .cseg .db misalignment - padding zero byte
000151 0009      	.DB  0x9
                 _0x0:
000152 4150
000153 5353
000154 4f57
000155 4452      	.DB  0x50,0x41,0x53,0x53,0x57,0x4F,0x52,0x44
000156 003f
000157 4f4e
000158 003f
000159 4150      	.DB  0x3F,0x0,0x4E,0x4F,0x3F,0x0,0x50,0x41
00015a 5353
00015b 4445
00015c 4e00
00015d 5745      	.DB  0x53,0x53,0x45,0x44,0x0,0x4E,0x45,0x57
00015e 5020
00015f 5341
000160 3f53
000161 5300      	.DB  0x20,0x50,0x41,0x53,0x53,0x3F,0x0,0x53
000162 5641
000163 4445
D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_tested_12\Debug\List\bai1.asm(1225): warning: .cseg .db misalignment - padding zero byte
000164 0000      	.DB  0x41,0x56,0x45,0x44,0x0
                 _0x2080060:
D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_tested_12\Debug\List\bai1.asm(1227): warning: .cseg .db misalignment - padding zero byte
000165 0001      	.DB  0x1
                 _0x2080000:
000166 4e2d
000167 4e41
000168 4900
000169 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\Private\CODE\Classsroom\Embedded\Final2\Final\password_tested_12\Debug\List\bai1.asm(1230): warning: .cseg .db misalignment - padding zero byte
00016a 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00016b 0006      	.DW  0x06
00016c 0004      	.DW  0x04
00016d 028c      	.DW  __REG_VARS*2
                 
00016e 0011      	.DW  0x11
00016f 056a      	.DW  _keypad
000170 0292      	.DW  _0x3*2
                 
000171 000a      	.DW  0x0A
000172 0500      	.DW  _0x2D
000173 02a4      	.DW  _0x0*2
                 
000174 000a      	.DW  0x0A
000175 050a      	.DW  _0x2D+10
000176 02a4      	.DW  _0x0*2
                 
000177 000a      	.DW  0x0A
000178 0514      	.DW  _0x2D+20
000179 02a4      	.DW  _0x0*2
                 
00017a 000a      	.DW  0x0A
00017b 051e      	.DW  _0x2D+30
00017c 02a4      	.DW  _0x0*2
                 
00017d 0004      	.DW  0x04
00017e 0528      	.DW  _0x2D+40
00017f 02ae      	.DW  _0x0*2+10
                 
000180 0007      	.DW  0x07
000181 052c      	.DW  _0x2D+44
000182 02b2      	.DW  _0x0*2+14
                 
000183 000a      	.DW  0x0A
000184 0533      	.DW  _0x3E
000185 02b9      	.DW  _0x0*2+21
                 
000186 000a      	.DW  0x0A
000187 053d      	.DW  _0x3E+10
000188 02b9      	.DW  _0x0*2+21
                 
000189 0006      	.DW  0x06
00018a 0547      	.DW  _0x3E+20
00018b 02c3      	.DW  _0x0*2+31
                 
00018c 0001      	.DW  0x01
00018d 0780      	.DW  __seed_G104
00018e 02ca      	.DW  _0x2080060*2
                 
                 _0xFFFFFFFF:
00018f 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000190 94f8      	CLI
000191 27ee      	CLR  R30
000192 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000193 e0f1      	LDI  R31,1
000194 bff5      	OUT  MCUCR,R31
000195 bfe5      	OUT  MCUCR,R30
000196 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
000198 e08d      	LDI  R24,(14-2)+1
000199 e0a2      	LDI  R26,2
00019a 27bb      	CLR  R27
                 __CLEAR_REG:
00019b 93ed      	ST   X+,R30
00019c 958a      	DEC  R24
00019d f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00019e e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00019f e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0001a0 e0a0      	LDI  R26,LOW(__SRAM_START)
0001a1 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0001a2 93ed      	ST   X+,R30
0001a3 9701      	SBIW R24,1
0001a4 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0001a5 ede6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0001a6 e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0001a7 9185      	LPM  R24,Z+
0001a8 9195      	LPM  R25,Z+
0001a9 9700      	SBIW R24,0
0001aa f061      	BREQ __GLOBAL_INI_END
0001ab 91a5      	LPM  R26,Z+
0001ac 91b5      	LPM  R27,Z+
0001ad 9005      	LPM  R0,Z+
0001ae 9015      	LPM  R1,Z+
0001af 01bf      	MOVW R22,R30
0001b0 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0001b1 9005      	LPM  R0,Z+
0001b2 920d      	ST   X+,R0
0001b3 9701      	SBIW R24,1
0001b4 f7e1      	BRNE __GLOBAL_INI_LOOP
0001b5 01fb      	MOVW R30,R22
0001b6 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0001b7 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0001b8 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0001b9 bfed      	OUT  SPL,R30
0001ba e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0001bb bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0001bc e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0001bd e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0001be 940c 0313 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;/*
                 ; * bai1.c
                 ; *
                 ; * Created: 12/8/2022 9:06:36 PM
                 ; * Author: Who
                 ; */
                 ;
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <glcd.h>
                 ;#include <font5x7.h>
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <eeprom.h>
                 ;
                 ;// macro for easier usage
                 ;#define read_eeprom_word(address) eeprom_read_word ((const unsigned int*)address)
                 ;#define write_eeprom_word(address,value) eeprom_write_word ((unsigned int*)address,(unsigned int)value)
                 ;#define update_eeprom_word(address,value) eeprom_update_word ((unsigned int*)address,(unsigned int)value)
                 ;unsigned int EEMEM my_eeprom;
                 ;
                 ;int keypad[3][3] = {1,2,3,4,5,6,7,8,9};
                 
                 	.DSEG
                 ;char tmp[10];
                 ;int miss = 0;
                 ;int counter = 0;
                 ;int dem_sai = 0;
                 ;
                 ;// Timer 0 overflow interrupt service routine with 1 ms
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0000 001E {
                 
                 	.CSEG
                 _timer0_ovf_isr:
                 ; .FSTART _timer0_ovf_isr
0001c0 920a      	ST   -Y,R0
0001c1 93ea      	ST   -Y,R30
0001c2 93fa      	ST   -Y,R31
0001c3 b7ef      	IN   R30,SREG
0001c4 93ea      	ST   -Y,R30
                 ; 0000 001F     TCNT0=0x06;
0001c5 e0e6      	LDI  R30,LOW(6)
0001c6 bfe2      	OUT  0x32,R30
                 ; 0000 0020     // Place your code here
                 ; 0000 0021     if (miss >= 3) {
0001c7 e0e3      	LDI  R30,LOW(3)
0001c8 e0f0      	LDI  R31,HIGH(3)
0001c9 164e      	CP   R4,R30
0001ca 065f      	CPC  R5,R31
0001cb f0bc      	BRLT _0x4
                 ; 0000 0022         if (counter == 2000)
0001cc ede0      	LDI  R30,LOW(2000)
0001cd e0f7      	LDI  R31,HIGH(2000)
0001ce 15e6      	CP   R30,R6
0001cf 05f7      	CPC  R31,R7
0001d0 f411      	BRNE _0x5
                 ; 0000 0023             counter  = 0;
0001d1 2466      	CLR  R6
0001d2 2477      	CLR  R7
                 ; 0000 0024 
                 ; 0000 0025         if (counter == 0) {
                 _0x5:
0001d3 2c06      	MOV  R0,R6
0001d4 2807      	OR   R0,R7
0001d5 f411      	BRNE _0x6
                 ; 0000 0026             PORTD.4 = 0;
0001d6 9894      	CBI  0x12,4
                 ; 0000 0027             PORTD.5 = 1;
0001d7 9a95      	SBI  0x12,5
                 ; 0000 0028         }
                 ; 0000 0029 
                 ; 0000 002A         if (counter == 1000) {
                 _0x6:
0001d8 eee8      	LDI  R30,LOW(1000)
0001d9 e0f3      	LDI  R31,HIGH(1000)
0001da 15e6      	CP   R30,R6
0001db 05f7      	CPC  R31,R7
0001dc f411      	BRNE _0xB
                 ; 0000 002B             PORTD.5 = 0;
0001dd 9895      	CBI  0x12,5
                 ; 0000 002C             PORTD.4 = 1;
0001de 9a94      	SBI  0x12,4
                 ; 0000 002D         }
                 ; 0000 002E         counter++;
                 _0xB:
0001df 01f3      	MOVW R30,R6
0001e0 9631      	ADIW R30,1
0001e1 013f      	MOVW R6,R30
                 ; 0000 002F     }
                 ; 0000 0030     else {
0001e2 c002      	RJMP _0x10
                 _0x4:
                 ; 0000 0031         PORTD.4 = 0;
0001e3 9894      	CBI  0x12,4
                 ; 0000 0032         PORTD.5 = 0;
0001e4 9895      	CBI  0x12,5
                 ; 0000 0033     }
                 _0x10:
                 ; 0000 0034 }
0001e5 91e9      	LD   R30,Y+
0001e6 bfef      	OUT  SREG,R30
0001e7 91f9      	LD   R31,Y+
0001e8 91e9      	LD   R30,Y+
0001e9 9009      	LD   R0,Y+
0001ea 9518      	RETI
                 ; .FEND
                 ;
                 ;
                 ;// "inherited" from tai lieu thuc hanh
                 ;int read() {
                 ; 0000 0038 int read() {
                 _read:
                 ; .FSTART _read
                 ; 0000 0039     char a, i, j;
                 ; 0000 003A     for(j = 0; j < 3; j++ ){
0001eb 940e 09c8 	CALL __SAVELOCR4
                 ;	a -> R17
                 ;	i -> R16
                 ;	j -> R19
0001ed e030      	LDI  R19,LOW(0)
                 _0x16:
0001ee 3033      	CPI  R19,3
0001ef f5a0      	BRSH _0x17
                 ; 0000 003B         if (j == 0) PORTF = 0b11111101;
0001f0 3030      	CPI  R19,0
0001f1 f419      	BRNE _0x18
0001f2 efed      	LDI  R30,LOW(253)
0001f3 93e0 0062 	STS  98,R30
                 ; 0000 003C         if (j == 1) PORTF = 0b11110111;
                 _0x18:
0001f5 3031      	CPI  R19,1
0001f6 f419      	BRNE _0x19
0001f7 efe7      	LDI  R30,LOW(247)
0001f8 93e0 0062 	STS  98,R30
                 ; 0000 003D         if (j == 2) PORTF = 0b11011111;
                 _0x19:
0001fa 3032      	CPI  R19,2
0001fb f419      	BRNE _0x1A
0001fc edef      	LDI  R30,LOW(223)
0001fd 93e0 0062 	STS  98,R30
                 ; 0000 003E         for(i = 0; i < 3; i++){
                 _0x1A:
0001ff e000      	LDI  R16,LOW(0)
                 _0x1C:
000200 3003      	CPI  R16,3
000201 f500      	BRSH _0x1D
                 ; 0000 003F             if (i == 0){
000202 3000      	CPI  R16,0
000203 f441      	BRNE _0x1E
                 ; 0000 0040                 a = PINF&0x04;
000204 b1e0      	IN   R30,0x0
000205 70e4      	ANDI R30,LOW(0x4)
000206 2f1e      	MOV  R17,R30
                 ; 0000 0041                 if(a != 0x04)
000207 3014      	CPI  R17,4
000208 f019      	BREQ _0x1F
                 ; 0000 0042                     return keypad[i][j];
000209 940e 08ac 	CALL SUBOPT_0x0
00020b c031      	RJMP _0x214000B
                 ; 0000 0043             }
                 _0x1F:
                 ; 0000 0044             if (i == 1){
                 _0x1E:
00020c 3001      	CPI  R16,1
00020d f441      	BRNE _0x20
                 ; 0000 0045                 a = PINF&0x10;
00020e b1e0      	IN   R30,0x0
00020f 71e0      	ANDI R30,LOW(0x10)
000210 2f1e      	MOV  R17,R30
                 ; 0000 0046                 if (a != 0x10)
000211 3110      	CPI  R17,16
000212 f019      	BREQ _0x21
                 ; 0000 0047                     return keypad[i][j];
000213 940e 08ac 	CALL SUBOPT_0x0
000215 c027      	RJMP _0x214000B
                 ; 0000 0048             }
                 _0x21:
                 ; 0000 0049             if (i == 2){
                 _0x20:
000216 3002      	CPI  R16,2
000217 f441      	BRNE _0x22
                 ; 0000 004A                 a = PINF&0x01;
000218 b1e0      	IN   R30,0x0
000219 70e1      	ANDI R30,LOW(0x1)
00021a 2f1e      	MOV  R17,R30
                 ; 0000 004B                 if (a != 0x01)
00021b 3011      	CPI  R17,1
00021c f019      	BREQ _0x23
                 ; 0000 004C                     return keypad[i][j];
00021d 940e 08ac 	CALL SUBOPT_0x0
00021f c01d      	RJMP _0x214000B
                 ; 0000 004D             }
                 _0x23:
                 ; 0000 004E         }
                 _0x22:
000220 5f0f      	SUBI R16,-1
000221 cfde      	RJMP _0x1C
                 _0x1D:
                 ; 0000 004F     }
000222 5f3f      	SUBI R19,-1
000223 cfca      	RJMP _0x16
                 _0x17:
                 ; 0000 0050     return -1;
000224 efef      	LDI  R30,LOW(65535)
000225 efff      	LDI  R31,HIGH(65535)
000226 940e 09cf 	CALL __LOADLOCR4
000228 c014      	RJMP _0x214000B
                 ; 0000 0051 }
                 ; .FEND
                 ;
                 ;void mainScreen(unsigned char * c, int pass) {
                 ; 0000 0053 void mainScreen(unsigned char * c, int pass) {
                 _mainScreen:
                 ; .FSTART _mainScreen
                 ; 0000 0054     glcd_clear();
000229 940e 08bd 	CALL SUBOPT_0x1
                 ;	*c -> Y+2
                 ;	pass -> Y+0
                 ; 0000 0055     glcd_outtextxy(15, 20, c);
00022b 81ac      	LDD  R26,Y+4
00022c 81bd      	LDD  R27,Y+4+1
00022d 940e 07db 	CALL _glcd_outtextxy
                 ; 0000 0056     if (pass != -1) {
00022f 81a8      	LD   R26,Y
000230 81b9      	LDD  R27,Y+1
000231 3faf      	CPI  R26,LOW(0xFFFF)
000232 efef      	LDI  R30,HIGH(0xFFFF)
000233 07be      	CPC  R27,R30
000234 f041      	BREQ _0x24
                 ; 0000 0057         itoa(pass, tmp);
000235 81e8      	LD   R30,Y
000236 81f9      	LDD  R31,Y+1
000237 940e 08c6 	CALL SUBOPT_0x2
                 ; 0000 0058         glcd_outtextxy(30, 30, tmp);
000239 e7ac      	LDI  R26,LOW(_tmp)
00023a e0b5      	LDI  R27,HIGH(_tmp)
00023b 940e 07db 	CALL _glcd_outtextxy
                 ; 0000 0059     }
                 ; 0000 005A }
                 _0x24:
                 _0x214000B:
00023d 9624      	ADIW R28,4
00023e 9508      	RET
                 ; .FEND
                 ;
                 ;void mainScreen2(unsigned char * c, char pass[], int pos) {
                 ; 0000 005C void mainScreen2(unsigned char * c, char pass[], int pos) {
                 _mainScreen2:
                 ; .FSTART _mainScreen2
                 ; 0000 005D     glcd_clear();
00023f 940e 08bd 	CALL SUBOPT_0x1
                 ;	*c -> Y+4
                 ;	pass -> Y+2
                 ;	pos -> Y+0
                 ; 0000 005E     glcd_outtextxy(15, 20, c);
000241 81ae      	LDD  R26,Y+6
000242 81bf      	LDD  R27,Y+6+1
000243 940e 07db 	CALL _glcd_outtextxy
                 ; 0000 005F     if (pass != -1) {
000245 81aa      	LDD  R26,Y+2
000246 81bb      	LDD  R27,Y+2+1
000247 3faf      	CPI  R26,LOW(0xFFFF)
000248 efef      	LDI  R30,HIGH(0xFFFF)
000249 07be      	CPC  R27,R30
00024a f041      	BREQ _0x25
                 ; 0000 0060         glcd_outtextxy(pos, 30, pass);
00024b 81e8      	LD   R30,Y
00024c 93ea      	ST   -Y,R30
00024d e1ee      	LDI  R30,LOW(30)
00024e 93ea      	ST   -Y,R30
00024f 81ac      	LDD  R26,Y+4
000250 81bd      	LDD  R27,Y+4+1
000251 940e 07db 	CALL _glcd_outtextxy
                 ; 0000 0061     }
                 ; 0000 0062 }
                 _0x25:
000253 940c 04eb 	JMP  _0x2140009
                 ; .FEND
                 ;
                 ;void mainScreen3(unsigned char * c, int pass, int pos, char pass_ano[]) {
                 ; 0000 0064 void mainScreen3(unsigned char * c, int pass, int pos, char pass_ano[]) {
                 _mainScreen3:
                 ; .FSTART _mainScreen3
                 ; 0000 0065     glcd_clear();
000255 940e 08bd 	CALL SUBOPT_0x1
                 ;	*c -> Y+6
                 ;	pass -> Y+4
                 ;	pos -> Y+2
                 ;	pass_ano -> Y+0
                 ; 0000 0066     glcd_outtextxy(15, 20, c);
000257 85a8      	LDD  R26,Y+8
000258 85b9      	LDD  R27,Y+8+1
000259 940e 07db 	CALL _glcd_outtextxy
                 ; 0000 0067     if (pass != -1) {
00025b 81ac      	LDD  R26,Y+4
00025c 81bd      	LDD  R27,Y+4+1
00025d 3faf      	CPI  R26,LOW(0xFFFF)
00025e efef      	LDI  R30,HIGH(0xFFFF)
00025f 07be      	CPC  R27,R30
000260 f081      	BREQ _0x26
                 ; 0000 0068         itoa(pass, tmp);
000261 81ec      	LDD  R30,Y+4
000262 81fd      	LDD  R31,Y+4+1
000263 940e 08c6 	CALL SUBOPT_0x2
                 ; 0000 0069         glcd_outtextxy(30, 30, pass_ano);
000265 81aa      	LDD  R26,Y+2
000266 81bb      	LDD  R27,Y+2+1
000267 940e 07db 	CALL _glcd_outtextxy
                 ; 0000 006A         glcd_outtextxy(pos, 30, tmp);
000269 81ea      	LDD  R30,Y+2
00026a 93ea      	ST   -Y,R30
00026b e1ee      	LDI  R30,LOW(30)
00026c 93ea      	ST   -Y,R30
00026d e7ac      	LDI  R26,LOW(_tmp)
00026e e0b5      	LDI  R27,HIGH(_tmp)
00026f 940e 07db 	CALL _glcd_outtextxy
                 ; 0000 006B     }
                 ; 0000 006C }
                 _0x26:
000271 940c 07d9 	JMP  _0x2140006
                 ; .FEND
                 ;
                 ;void exe() {
                 ; 0000 006E void exe() {
                 _exe:
                 ; .FSTART _exe
                 ; 0000 006F     //char pass_ano[3];
                 ; 0000 0070     unsigned int input_times = 0, input = -1, pass = 0, require = 118, reader;
                 ; 0000 0071     reader = read_eeprom_word(&my_eeprom);
000273 9724      	SBIW R28,4
000274 e7e6      	LDI  R30,LOW(118)
000275 83ea      	STD  Y+2,R30
000276 e0e0      	LDI  R30,LOW(0)
000277 83eb      	STD  Y+3,R30
000278 940e 09c6 	CALL __SAVELOCR6
                 ;	input_times -> R16,R17
                 ;	input -> R18,R19
                 ;	pass -> R20,R21
                 ;	require -> Y+8
                 ;	reader -> Y+6
00027a 940e 08d0 	CALL SUBOPT_0x3
00027c e0a0      	LDI  R26,LOW(_my_eeprom)
00027d e0b0      	LDI  R27,HIGH(_my_eeprom)
00027e 940e 0999 	CALL __EEPROMRDW
000280 83ee      	STD  Y+6,R30
000281 83ff      	STD  Y+6+1,R31
                 ; 0000 0072     if (reader >= 100 && reader <= 999)
000282 81ae      	LDD  R26,Y+6
000283 81bf      	LDD  R27,Y+6+1
000284 36a4      	CPI  R26,LOW(0x64)
000285 e0e0      	LDI  R30,HIGH(0x64)
000286 07be      	CPC  R27,R30
000287 f020      	BRLO _0x28
000288 3ea8      	CPI  R26,LOW(0x3E8)
000289 e0e3      	LDI  R30,HIGH(0x3E8)
00028a 07be      	CPC  R27,R30
00028b f008      	BRLO _0x29
                 _0x28:
00028c c004      	RJMP _0x27
                 _0x29:
                 ; 0000 0073         require = reader;
00028d 81ee      	LDD  R30,Y+6
00028e 81ff      	LDD  R31,Y+6+1
00028f 87e8      	STD  Y+8,R30
000290 87f9      	STD  Y+8+1,R31
                 ; 0000 0074     dem_sai = 0;
                 _0x27:
000291 2488      	CLR  R8
000292 2499      	CLR  R9
                 ; 0000 0075     while (pass != require) {
                 _0x2A:
000293 85e8      	LDD  R30,Y+8
000294 85f9      	LDD  R31,Y+8+1
000295 17e4      	CP   R30,R20
000296 07f5      	CPC  R31,R21
000297 f409      	BRNE PC+2
000298 c066      	RJMP _0x2C
                 ; 0000 0076         char pass_ano[3];
                 ; 0000 0077         pass_ano[0]=' ';
000299 9723      	SBIW R28,3
                 ;	require -> Y+11
                 ;	reader -> Y+9
                 ;	pass_ano -> Y+0
00029a e2e0      	LDI  R30,LOW(32)
00029b 83e8      	ST   Y,R30
                 ; 0000 0078         pass_ano[1]=' ';
00029c 83e9      	STD  Y+1,R30
                 ; 0000 0079         pass_ano[2]=' ';
00029d 83ea      	STD  Y+2,R30
                 ; 0000 007A         mainScreen("PASSWORD?", -1);
                +
00029e e0e0     +LDI R30 , LOW ( _0x2D + ( 0 ) )
00029f e0f5     +LDI R31 , HIGH ( _0x2D + ( 0 ) )
                 	__POINTW1MN _0x2D,0
0002a0 940e 08d7 	CALL SUBOPT_0x4
                 ; 0000 007B         while (input_times != 3) {
                 _0x2E:
0002a2 e0e3      	LDI  R30,LOW(3)
0002a3 e0f0      	LDI  R31,HIGH(3)
0002a4 17e0      	CP   R30,R16
0002a5 07f1      	CPC  R31,R17
0002a6 f1a9      	BREQ _0x30
                 ; 0000 007C             input = read();
0002a7 940e 08dd 	CALL SUBOPT_0x5
                 ; 0000 007D             delay_ms(200);
                 ; 0000 007E             if (input != -1) {
0002a9 f189      	BREQ _0x31
                 ; 0000 007F                 input_times++;
                +
0002aa 5f0f     +SUBI R16 , LOW ( - 1 )
0002ab 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 0080                 pass = pass * 10 + input;
                +
0002ac e0aa     +LDI R26 , 10
0002ad 9fa4     +MUL R26 , R20
0002ae 01f0     +MOVW R30 , R0
0002af 9fa5     +MUL R26 , R21
0002b0 0df0     +ADD R31 , R0
                 	__MULBNWRU 20,21,10
0002b1 0fe2      	ADD  R30,R18
0002b2 1ff3      	ADC  R31,R19
0002b3 01af      	MOVW R20,R30
                 ; 0000 0081                 mainScreen2("PASSWORD?", pass_ano, 30);
                +
0002b4 e0ea     +LDI R30 , LOW ( _0x2D + ( 10 ) )
0002b5 e0f5     +LDI R31 , HIGH ( _0x2D + ( 10 ) )
                 	__POINTW1MN _0x2D,10
0002b6 940e 08e9 	CALL SUBOPT_0x6
                 ; 0000 0082                 mainScreen3("PASSWORD?", input, 30+(input_times-1)*4+input_times, pass_ano);
                +
0002b8 e1e4     +LDI R30 , LOW ( _0x2D + ( 20 ) )
0002b9 e0f5     +LDI R31 , HIGH ( _0x2D + ( 20 ) )
                 	__POINTW1MN _0x2D,20
0002ba 93fa      	ST   -Y,R31
0002bb 93ea      	ST   -Y,R30
0002bc 933a      	ST   -Y,R19
0002bd 932a      	ST   -Y,R18
0002be 01f8      	MOVW R30,R16
0002bf 9731      	SBIW R30,1
0002c0 940e 0988 	CALL __LSLW2
0002c2 967e      	ADIW R30,30
0002c3 0fe0      	ADD  R30,R16
0002c4 1ff1      	ADC  R31,R17
0002c5 93fa      	ST   -Y,R31
0002c6 93ea      	ST   -Y,R30
0002c7 01de      	MOVW R26,R28
0002c8 9616      	ADIW R26,6
0002c9 df8b      	RCALL _mainScreen3
                 ; 0000 0083                 pass_ano[input_times-1] = '*';
0002ca 01f8      	MOVW R30,R16
0002cb 9731      	SBIW R30,1
0002cc 01de      	MOVW R26,R28
0002cd 0fae      	ADD  R26,R30
0002ce 1fbf      	ADC  R27,R31
0002cf e2ea      	LDI  R30,LOW(42)
0002d0 93ec      	ST   X,R30
                 ; 0000 0084                 delay_ms(500);
0002d1 efa4      	LDI  R26,LOW(500)
0002d2 e0b1      	LDI  R27,HIGH(500)
0002d3 940e 096e 	CALL _delay_ms
                 ; 0000 0085                 mainScreen2("PASSWORD?", pass_ano, 30);
                +
0002d5 e1ee     +LDI R30 , LOW ( _0x2D + ( 30 ) )
0002d6 e0f5     +LDI R31 , HIGH ( _0x2D + ( 30 ) )
                 	__POINTW1MN _0x2D,30
0002d7 940e 08e9 	CALL SUBOPT_0x6
                 ; 0000 0086                 input = -1;
                +
0002d9 ef2f     +LDI R18 , LOW ( - 1 )
0002da ef3f     +LDI R19 , HIGH ( - 1 )
                 	__GETWRN 18,19,-1
                 ; 0000 0087             }
                 ; 0000 0088         }
                 _0x31:
0002db cfc6      	RJMP _0x2E
                 _0x30:
                 ; 0000 0089 
                 ; 0000 008A         if (pass != require) {
0002dc 85eb      	LDD  R30,Y+11
0002dd 85fc      	LDD  R31,Y+11+1
0002de 17e4      	CP   R30,R20
0002df 07f5      	CPC  R31,R21
0002e0 f091      	BREQ _0x32
                 ; 0000 008B             glcd_clear();
0002e1 d1b4      	RCALL _glcd_clear
                 ; 0000 008C             glcd_outtextxy(15, 20, "NO?");
0002e2 e0ef      	LDI  R30,LOW(15)
0002e3 93ea      	ST   -Y,R30
0002e4 e1e4      	LDI  R30,LOW(20)
0002e5 93ea      	ST   -Y,R30
                +
0002e6 e2a8     +LDI R26 , LOW ( _0x2D + ( 40 ) )
0002e7 e0b5     +LDI R27 , HIGH ( _0x2D + ( 40 ) )
                 	__POINTW2MN _0x2D,40
0002e8 940e 07db 	CALL _glcd_outtextxy
                 ; 0000 008D             input_times = 0;
0002ea 940e 08d0 	CALL SUBOPT_0x3
                 ; 0000 008E             input = -1;
                 ; 0000 008F             pass = 0;
                 ; 0000 0090             delay_ms(800);
0002ec e2a0      	LDI  R26,LOW(800)
0002ed e0b3      	LDI  R27,HIGH(800)
0002ee 940e 096e 	CALL _delay_ms
                 ; 0000 0091             dem_sai++;
0002f0 01f4      	MOVW R30,R8
0002f1 9631      	ADIW R30,1
0002f2 014f      	MOVW R8,R30
                 ; 0000 0092         }
                 ; 0000 0093         miss++;
                 _0x32:
0002f3 01f2      	MOVW R30,R4
0002f4 9631      	ADIW R30,1
0002f5 012f      	MOVW R4,R30
                 ; 0000 0094         // turn on role 1
                 ; 0000 0095         if (miss == 3) {
0002f6 e0e3      	LDI  R30,LOW(3)
0002f7 e0f0      	LDI  R31,HIGH(3)
0002f8 15e4      	CP   R30,R4
0002f9 05f5      	CPC  R31,R5
0002fa f411      	BRNE _0x33
                 ; 0000 0096             DDRC.3 = 1;
0002fb 9aa3      	SBI  0x14,3
                 ; 0000 0097             PORTC.3 = 1;
0002fc 9aab      	SBI  0x15,3
                 ; 0000 0098         }
                 ; 0000 0099     }
                 _0x33:
0002fd 9623      	ADIW R28,3
0002fe cf94      	RJMP _0x2A
                 _0x2C:
                 ; 0000 009A 
                 ; 0000 009B     miss = 0;
0002ff 2444      	CLR  R4
000300 2455      	CLR  R5
                 ; 0000 009C     delay_ms(500);
000301 efa4      	LDI  R26,LOW(500)
000302 e0b1      	LDI  R27,HIGH(500)
000303 940e 096e 	CALL _delay_ms
                 ; 0000 009D     glcd_clear();
000305 d190      	RCALL _glcd_clear
                 ; 0000 009E     PORTC.3 = 0;
000306 98ab      	CBI  0x15,3
                 ; 0000 009F     glcd_outtextxy(15, 20, "PASSED");
000307 e0ef      	LDI  R30,LOW(15)
000308 93ea      	ST   -Y,R30
000309 e1e4      	LDI  R30,LOW(20)
00030a 93ea      	ST   -Y,R30
                +
00030b e2ac     +LDI R26 , LOW ( _0x2D + ( 44 ) )
00030c e0b5     +LDI R27 , HIGH ( _0x2D + ( 44 ) )
                 	__POINTW2MN _0x2D,44
00030d 940e 07db 	CALL _glcd_outtextxy
                 ; 0000 00A0 }
00030f 940e 09cd 	CALL __LOADLOCR6
000311 962a      	ADIW R28,10
000312 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x2D:
000500           	.BYTE 0x33
                 ;
                 ;void main(void)
                 ; 0000 00A3 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 00A4     unsigned int pass = 0, input, input_times = 0;
                 ; 0000 00A5     //init GLCD
                 ; 0000 00A6     GLCDINIT_t glcd_init_data;
                 ; 0000 00A7     glcd_init_data.font=font5x7;
000313 9728      	SBIW R28,8
                 ;	pass -> R16,R17
                 ;	input -> R18,R19
                 ;	input_times -> R20,R21
                 ;	glcd_init_data -> Y+0
                +
000314 e000     +LDI R16 , LOW ( 0 )
000315 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
000316 e040     +LDI R20 , LOW ( 0 )
000317 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
000318 e8ec      	LDI  R30,LOW(_font5x7*2)
000319 e0f0      	LDI  R31,HIGH(_font5x7*2)
00031a 83e8      	ST   Y,R30
00031b 83f9      	STD  Y+1,R31
                 ; 0000 00A8     glcd_init_data.temp_coef=140;
00031c 81ee      	LDD  R30,Y+6
00031d 7fec      	ANDI R30,LOW(0xFC)
00031e 83ee      	STD  Y+6,R30
                 ; 0000 00A9     glcd_init_data.bias=4;
00031f 7ee3      	ANDI R30,LOW(0xE3)
000320 61e0      	ORI  R30,0x10
000321 83ee      	STD  Y+6,R30
                 ; 0000 00AA     glcd_init_data.vlcd=66;
000322 81ef      	LDD  R30,Y+7
000323 78e0      	ANDI R30,LOW(0x80)
000324 64e2      	ORI  R30,LOW(0x42)
000325 83ef      	STD  Y+7,R30
                 ; 0000 00AB     glcd_init(&glcd_init_data);
000326 01de      	MOVW R26,R28
000327 d0c7      	RCALL _glcd_init
                 ; 0000 00AC 
                 ; 0000 00AD     DDRF = 0b11101010;
000328 eeea      	LDI  R30,LOW(234)
000329 93e0 0061 	STS  97,R30
                 ; 0000 00AE     DDRD.5 = 1;
00032b 9a8d      	SBI  0x11,5
                 ; 0000 00AF     DDRD.4 = 1;
00032c 9a8c      	SBI  0x11,4
                 ; 0000 00B0 
                 ; 0000 00B1     //init Timer/Counter 0 with time period = 1 ms
                 ; 0000 00B2     ASSR=0<<AS0;
00032d e0e0      	LDI  R30,LOW(0)
00032e bfe0      	OUT  0x30,R30
                 ; 0000 00B3     TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (1<<CS01) | (1<<CS00);
00032f e0e3      	LDI  R30,LOW(3)
000330 bfe3      	OUT  0x33,R30
                 ; 0000 00B4     TCNT0=0x06;
000331 e0e6      	LDI  R30,LOW(6)
000332 bfe2      	OUT  0x32,R30
                 ; 0000 00B5     OCR0=0x00;
000333 e0e0      	LDI  R30,LOW(0)
000334 bfe1      	OUT  0x31,R30
                 ; 0000 00B6     TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
000335 e0e1      	LDI  R30,LOW(1)
000336 bfe7      	OUT  0x37,R30
                 ; 0000 00B7     ETIMSK=(0<<TICIE3) | (0<<OCIE3A) | (0<<OCIE3B) | (0<<TOIE3) | (0<<OCIE3C) | (0<<OCIE1C);
000337 e0e0      	LDI  R30,LOW(0)
000338 93e0 007d 	STS  125,R30
                 ; 0000 00B8     #asm("sei")
00033a 9478      	sei
                 ; 0000 00B9     update_eeprom_word(&my_eeprom, 123);
00033b e0a0      	LDI  R26,LOW(_my_eeprom)
00033c e0b0      	LDI  R27,HIGH(_my_eeprom)
00033d e7eb      	LDI  R30,LOW(123)
00033e e0f0      	LDI  R31,HIGH(123)
00033f 940e 09a9 	CALL __EEPROMWRW
                 ; 0000 00BA     exe();
000341 df31      	RCALL _exe
                 ; 0000 00BB     delay_ms(1500);
000342 edac      	LDI  R26,LOW(1500)
000343 e0b5      	LDI  R27,HIGH(1500)
000344 940e 096e 	CALL _delay_ms
                 ; 0000 00BC 
                 ; 0000 00BD     mainScreen("NEW PASS?", -1);
                +
000346 e3e3     +LDI R30 , LOW ( _0x3E + ( 0 ) )
000347 e0f5     +LDI R31 , HIGH ( _0x3E + ( 0 ) )
                 	__POINTW1MN _0x3E,0
000348 940e 08d7 	CALL SUBOPT_0x4
                 ; 0000 00BE     while (input_times != 3) {
                 _0x3F:
00034a e0e3      	LDI  R30,LOW(3)
00034b e0f0      	LDI  R31,HIGH(3)
00034c 17e4      	CP   R30,R20
00034d 07f5      	CPC  R31,R21
00034e f0b1      	BREQ _0x41
                 ; 0000 00BF             input = read();
00034f 940e 08dd 	CALL SUBOPT_0x5
                 ; 0000 00C0             delay_ms(200);
                 ; 0000 00C1             if (input != -1) {
000351 f091      	BREQ _0x42
                 ; 0000 00C2                 input_times++;
                +
000352 5f4f     +SUBI R20 , LOW ( - 1 )
000353 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0000 00C3                 pass = pass * 10 + input;
                +
000354 e0aa     +LDI R26 , 10
000355 9fa0     +MUL R26 , R16
000356 01f0     +MOVW R30 , R0
000357 9fa1     +MUL R26 , R17
000358 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,10
000359 0fe2      	ADD  R30,R18
00035a 1ff3      	ADC  R31,R19
00035b 018f      	MOVW R16,R30
                 ; 0000 00C4                 mainScreen("NEW PASS?", pass);
                +
00035c e3ed     +LDI R30 , LOW ( _0x3E + ( 10 ) )
00035d e0f5     +LDI R31 , HIGH ( _0x3E + ( 10 ) )
                 	__POINTW1MN _0x3E,10
00035e 93fa      	ST   -Y,R31
00035f 93ea      	ST   -Y,R30
000360 01d8      	MOVW R26,R16
000361 dec7      	RCALL _mainScreen
                 ; 0000 00C5                 input = -1;
                +
000362 ef2f     +LDI R18 , LOW ( - 1 )
000363 ef3f     +LDI R19 , HIGH ( - 1 )
                 	__GETWRN 18,19,-1
                 ; 0000 00C6             }
                 ; 0000 00C7     }
                 _0x42:
000364 cfe5      	RJMP _0x3F
                 _0x41:
                 ; 0000 00C8     update_eeprom_word(&my_eeprom, pass);
000365 01f8      	MOVW R30,R16
000366 e0a0      	LDI  R26,LOW(_my_eeprom)
000367 e0b0      	LDI  R27,HIGH(_my_eeprom)
000368 940e 09a9 	CALL __EEPROMWRW
                 ; 0000 00C9     delay_ms(800);
00036a e2a0      	LDI  R26,LOW(800)
00036b e0b3      	LDI  R27,HIGH(800)
00036c 940e 096e 	CALL _delay_ms
                 ; 0000 00CA     mainScreen("SAVED", -1);
                +
00036e e4e7     +LDI R30 , LOW ( _0x3E + ( 20 ) )
00036f e0f5     +LDI R31 , HIGH ( _0x3E + ( 20 ) )
                 	__POINTW1MN _0x3E,20
000370 940e 08d7 	CALL SUBOPT_0x4
                 ; 0000 00CB 
                 ; 0000 00CC     while (1)
                 _0x43:
                 ; 0000 00CD     {
                 ; 0000 00CE 
                 ; 0000 00CF 
                 ; 0000 00D0     }
000372 cfff      	RJMP _0x43
                 ; 0000 00D1 }
                 _0x46:
000373 cfff      	RJMP _0x46
                 ; .FEND
                 
                 	.DSEG
                 _0x3E:
000533           	.BYTE 0x1A
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _pcd8544_delay_G100:
                 ; .FSTART _pcd8544_delay_G100
000374 9508      	RET
                 ; .FEND
                 _pcd8544_wrbus_G100:
                 ; .FSTART _pcd8544_wrbus_G100
000375 93aa      	ST   -Y,R26
000376 931a      	ST   -Y,R17
000377 91e0 0065 	LDS  R30,101
000379 7eef      	ANDI R30,0xEF
00037a 93e0 0065 	STS  101,R30
00037c e018      	LDI  R17,LOW(8)
                 _0x2000004:
00037d dff6      	RCALL _pcd8544_delay_G100
00037e 81e9      	LDD  R30,Y+1
00037f 78e0      	ANDI R30,LOW(0x80)
000380 f021      	BREQ _0x2000006
000381 91e0 0065 	LDS  R30,101
000383 60e2      	ORI  R30,2
000384 c003      	RJMP _0x20000A0
                 _0x2000006:
000385 91e0 0065 	LDS  R30,101
000387 7fed      	ANDI R30,0xFD
                 _0x20000A0:
000388 93e0 0065 	STS  101,R30
00038a 81e9      	LDD  R30,Y+1
00038b 0fee      	LSL  R30
00038c 83e9      	STD  Y+1,R30
00038d dfe6      	RCALL _pcd8544_delay_G100
00038e 91e0 0065 	LDS  R30,101
000390 60e4      	ORI  R30,4
000391 93e0 0065 	STS  101,R30
000393 dfe0      	RCALL _pcd8544_delay_G100
000394 91e0 0065 	LDS  R30,101
000396 7feb      	ANDI R30,0xFB
000397 93e0 0065 	STS  101,R30
000399 5011      	SUBI R17,LOW(1)
00039a f711      	BRNE _0x2000004
00039b 91e0 0065 	LDS  R30,101
00039d 61e0      	ORI  R30,0x10
00039e 93e0 0065 	STS  101,R30
0003a0 8118      	LDD  R17,Y+0
0003a1 940c 0844 	JMP  _0x2140003
                 ; .FEND
                 _pcd8544_wrcmd:
                 ; .FSTART _pcd8544_wrcmd
0003a3 93aa      	ST   -Y,R26
0003a4 91e0 0065 	LDS  R30,101
0003a6 7fee      	ANDI R30,0xFE
0003a7 93e0 0065 	STS  101,R30
0003a9 81a8      	LD   R26,Y
0003aa dfca      	RCALL _pcd8544_wrbus_G100
0003ab c0e8      	RJMP _0x214000A
                 ; .FEND
                 _pcd8544_wrdata_G100:
                 ; .FSTART _pcd8544_wrdata_G100
0003ac 93aa      	ST   -Y,R26
0003ad 91e0 0065 	LDS  R30,101
0003af 60e1      	ORI  R30,1
0003b0 93e0 0065 	STS  101,R30
0003b2 81a8      	LD   R26,Y
0003b3 dfc1      	RCALL _pcd8544_wrbus_G100
0003b4 c0df      	RJMP _0x214000A
                 ; .FEND
                 _pcd8544_setaddr_G100:
                 ; .FSTART _pcd8544_setaddr_G100
0003b5 93aa      	ST   -Y,R26
0003b6 931a      	ST   -Y,R17
0003b7 81e9      	LDD  R30,Y+1
0003b8 95e6      	LSR  R30
0003b9 95e6      	LSR  R30
0003ba 95e6      	LSR  R30
0003bb 2f1e      	MOV  R17,R30
0003bc e5e4      	LDI  R30,LOW(84)
0003bd 9fe1      	MUL  R30,R17
0003be 01f0      	MOVW R30,R0
0003bf 01df      	MOVW R26,R30
0003c0 81ea      	LDD  R30,Y+2
0003c1 e0f0      	LDI  R31,0
0003c2 0fea      	ADD  R30,R26
0003c3 1ffb      	ADC  R31,R27
0003c4 93e0 0586 	STS  _gfx_addr_G100,R30
0003c6 93f0 0587 	STS  _gfx_addr_G100+1,R31
0003c8 2fe1      	MOV  R30,R17
0003c9 8118      	LDD  R17,Y+0
0003ca 940c 088b 	JMP  _0x2140002
                 ; .FEND
                 _pcd8544_gotoxy:
                 ; .FSTART _pcd8544_gotoxy
0003cc 93aa      	ST   -Y,R26
0003cd 81e9      	LDD  R30,Y+1
0003ce 68e0      	ORI  R30,0x80
0003cf 2fae      	MOV  R26,R30
0003d0 dfd2      	RCALL _pcd8544_wrcmd
0003d1 81e9      	LDD  R30,Y+1
0003d2 93ea      	ST   -Y,R30
0003d3 81a9      	LDD  R26,Y+1
0003d4 dfe0      	RCALL _pcd8544_setaddr_G100
0003d5 64e0      	ORI  R30,0x40
0003d6 2fae      	MOV  R26,R30
0003d7 dfcb      	RCALL _pcd8544_wrcmd
0003d8 940c 0844 	JMP  _0x2140003
                 ; .FEND
                 _pcd8544_rdbyte:
                 ; .FSTART _pcd8544_rdbyte
0003da 93aa      	ST   -Y,R26
0003db 81e9      	LDD  R30,Y+1
0003dc 93ea      	ST   -Y,R30
0003dd 81a9      	LDD  R26,Y+1
0003de dfed      	RCALL _pcd8544_gotoxy
0003df 91e0 0586 	LDS  R30,_gfx_addr_G100
0003e1 91f0 0587 	LDS  R31,_gfx_addr_G100+1
0003e3 57e8      	SUBI R30,LOW(-_gfx_buffer_G100)
0003e4 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G100)
0003e5 81e0      	LD   R30,Z
0003e6 940c 0844 	JMP  _0x2140003
                 ; .FEND
                 _pcd8544_wrbyte:
                 ; .FSTART _pcd8544_wrbyte
0003e8 93aa      	ST   -Y,R26
0003e9 940e 08f3 	CALL SUBOPT_0x7
0003eb 81a8      	LD   R26,Y
0003ec 83a0      	STD  Z+0,R26
0003ed dfbe      	RCALL _pcd8544_wrdata_G100
0003ee c0a5      	RJMP _0x214000A
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
0003ef 93ba      	ST   -Y,R27
0003f0 93aa      	ST   -Y,R26
0003f1 940e 09c8 	CALL __SAVELOCR4
0003f3 91e0 0064 	LDS  R30,100
0003f5 61e0      	ORI  R30,0x10
0003f6 940e 08fe 	CALL SUBOPT_0x8
0003f8 61e0      	ORI  R30,0x10
0003f9 93e0 0065 	STS  101,R30
0003fb 91e0 0064 	LDS  R30,100
0003fd 60e4      	ORI  R30,4
0003fe 940e 08fe 	CALL SUBOPT_0x8
000400 7feb      	ANDI R30,0xFB
000401 93e0 0065 	STS  101,R30
000403 91e0 0064 	LDS  R30,100
000405 60e2      	ORI  R30,2
000406 93e0 0064 	STS  100,R30
000408 91e0 0064 	LDS  R30,100
00040a 60e1      	ORI  R30,1
00040b 93e0 0064 	STS  100,R30
00040d 91e0 0064 	LDS  R30,100
00040f 60e8      	ORI  R30,8
000410 940e 08fe 	CALL SUBOPT_0x8
000412 7fe7      	ANDI R30,0XF7
000413 93e0 0065 	STS  101,R30
000415 e0aa      	LDI  R26,LOW(10)
000416 e0b0      	LDI  R27,0
000417 940e 096e 	CALL _delay_ms
000419 91e0 0065 	LDS  R30,101
00041b 60e8      	ORI  R30,8
00041c 93e0 0065 	STS  101,R30
00041e 81ec      	LDD  R30,Y+4
00041f 81fd      	LDD  R31,Y+4+1
000420 9730      	SBIW R30,0
000421 f121      	BREQ _0x2000008
000422 81e6      	LDD  R30,Z+6
000423 70e3      	ANDI R30,LOW(0x3)
000424 2f1e      	MOV  R17,R30
000425 81ec      	LDD  R30,Y+4
000426 81fd      	LDD  R31,Y+4+1
000427 81e6      	LDD  R30,Z+6
000428 95e6      	LSR  R30
000429 95e6      	LSR  R30
00042a 70e7      	ANDI R30,LOW(0x7)
00042b 2f0e      	MOV  R16,R30
00042c 81ec      	LDD  R30,Y+4
00042d 81fd      	LDD  R31,Y+4+1
00042e 81e7      	LDD  R30,Z+7
00042f 77ef      	ANDI R30,0x7F
000430 2f3e      	MOV  R19,R30
000431 81ac      	LDD  R26,Y+4
000432 81bd      	LDD  R27,Y+4+1
000433 940e 0995 	CALL __GETW1P
                +
000435 93e0 0551+STS _glcd_state + ( 4 ) , R30
000437 93f0 0552+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
000439 9612      	ADIW R26,2
00043a 940e 0995 	CALL __GETW1P
                +
00043c 93e0 0566+STS _glcd_state + ( 25 ) , R30
00043e 93f0 0567+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
000440 81ac      	LDD  R26,Y+4
000441 81bd      	LDD  R27,Y+4+1
000442 9614      	ADIW R26,4
000443 940e 0995 	CALL __GETW1P
000445 c00d      	RJMP _0x20000A1
                 _0x2000008:
000446 e010      	LDI  R17,LOW(0)
000447 e003      	LDI  R16,LOW(3)
000448 e332      	LDI  R19,LOW(50)
000449 e0e0      	LDI  R30,LOW(0)
00044a e0f0      	LDI  R31,HIGH(0)
                +
00044b 93e0 0551+STS _glcd_state + ( 4 ) , R30
00044d 93f0 0552+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
                +
00044f 93e0 0566+STS _glcd_state + ( 25 ) , R30
000451 93f0 0567+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
                 _0x20000A1:
                +
000453 93e0 0568+STS _glcd_state + ( 27 ) , R30
000455 93f0 0569+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
000457 e2a1      	LDI  R26,LOW(33)
000458 df4a      	RCALL _pcd8544_wrcmd
000459 2fe1      	MOV  R30,R17
00045a 60e4      	ORI  R30,4
00045b 2fae      	MOV  R26,R30
00045c df46      	RCALL _pcd8544_wrcmd
00045d 2fe0      	MOV  R30,R16
00045e 61e0      	ORI  R30,0x10
00045f 2fae      	MOV  R26,R30
000460 df42      	RCALL _pcd8544_wrcmd
000461 2fe3      	MOV  R30,R19
000462 68e0      	ORI  R30,0x80
000463 2fae      	MOV  R26,R30
000464 df3e      	RCALL _pcd8544_wrcmd
000465 e2a0      	LDI  R26,LOW(32)
000466 df3c      	RCALL _pcd8544_wrcmd
000467 e0a1      	LDI  R26,LOW(1)
000468 d022      	RCALL _glcd_display
000469 e0e1      	LDI  R30,LOW(1)
00046a 93e0 054d 	STS  _glcd_state,R30
00046c e0e0      	LDI  R30,LOW(0)
                +
00046d 93e0 054e+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
00046f e0e1      	LDI  R30,LOW(1)
                +
000470 93e0 0553+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
000472 93e0 0554+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
000474 93e0 0555+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
000476 efef      	LDI  R30,LOW(255)
                +
000477 93e0 0556+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
000479 e0e1      	LDI  R30,LOW(1)
                +
00047a 93e0 055d+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
00047c e5ee     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
00047d e0f5     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
00047e 93fa      	ST   -Y,R31
00047f 93ea      	ST   -Y,R30
000480 efef      	LDI  R30,LOW(255)
000481 93ea      	ST   -Y,R30
000482 e0a8      	LDI  R26,LOW(8)
000483 e0b0      	LDI  R27,0
000484 940e 082b 	CALL _memset
000486 d00f      	RCALL _glcd_clear
000487 e0e1      	LDI  R30,LOW(1)
000488 940e 09cf 	CALL __LOADLOCR4
00048a c060      	RJMP _0x2140009
                 ; .FEND
                 _glcd_display:
                 ; .FSTART _glcd_display
00048b 93aa      	ST   -Y,R26
00048c 81e8      	LD   R30,Y
00048d 30e0      	CPI  R30,0
00048e f011      	BREQ _0x200000A
00048f e0ec      	LDI  R30,LOW(12)
000490 c001      	RJMP _0x200000B
                 _0x200000A:
000491 e0e8      	LDI  R30,LOW(8)
                 _0x200000B:
000492 2fae      	MOV  R26,R30
000493 df0f      	RCALL _pcd8544_wrcmd
                 _0x214000A:
000494 9621      	ADIW R28,1
000495 9508      	RET
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
000496 940e 09c8 	CALL __SAVELOCR4
000498 e030      	LDI  R19,0
                +
000499 91e0 054e+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
00049b 30e0      	CPI  R30,0
00049c f009      	BREQ _0x200000D
00049d ef3f      	LDI  R19,LOW(255)
                 _0x200000D:
00049e e0e0      	LDI  R30,LOW(0)
00049f 93ea      	ST   -Y,R30
0004a0 e0a0      	LDI  R26,LOW(0)
0004a1 df2a      	RCALL _pcd8544_gotoxy
                +
0004a2 ef08     +LDI R16 , LOW ( 504 )
0004a3 e011     +LDI R17 , HIGH ( 504 )
                 	__GETWRN 16,17,504
                 _0x200000E:
0004a4 01f8      	MOVW R30,R16
                +
0004a5 5001     +SUBI R16 , LOW ( 1 )
0004a6 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
0004a7 9730      	SBIW R30,0
0004a8 f019      	BREQ _0x2000010
0004a9 2fa3      	MOV  R26,R19
0004aa df3d      	RCALL _pcd8544_wrbyte
0004ab cff8      	RJMP _0x200000E
                 _0x2000010:
0004ac e0e0      	LDI  R30,LOW(0)
0004ad 93ea      	ST   -Y,R30
0004ae e0a0      	LDI  R26,LOW(0)
0004af d340      	RCALL _glcd_moveto
0004b0 940e 09cf 	CALL __LOADLOCR4
0004b2 940c 08aa 	JMP  _0x2140001
                 ; .FEND
                 _pcd8544_wrmasked_G100:
                 ; .FSTART _pcd8544_wrmasked_G100
0004b4 93aa      	ST   -Y,R26
0004b5 931a      	ST   -Y,R17
0004b6 81ed      	LDD  R30,Y+5
0004b7 93ea      	ST   -Y,R30
0004b8 81ad      	LDD  R26,Y+5
0004b9 df20      	RCALL _pcd8544_rdbyte
0004ba 2f1e      	MOV  R17,R30
0004bb 81e9      	LDD  R30,Y+1
0004bc 30e7      	CPI  R30,LOW(0x7)
0004bd f011      	BREQ _0x2000020
0004be 30e8      	CPI  R30,LOW(0x8)
0004bf f439      	BRNE _0x2000021
                 _0x2000020:
0004c0 81eb      	LDD  R30,Y+3
0004c1 93ea      	ST   -Y,R30
0004c2 81aa      	LDD  R26,Y+2
0004c3 940e 0846 	CALL _glcd_mappixcolor1bit
0004c5 83eb      	STD  Y+3,R30
0004c6 c008      	RJMP _0x2000022
                 _0x2000021:
0004c7 30e3      	CPI  R30,LOW(0x3)
0004c8 f421      	BRNE _0x2000024
0004c9 81eb      	LDD  R30,Y+3
0004ca 95e0      	COM  R30
0004cb 83eb      	STD  Y+3,R30
0004cc c002      	RJMP _0x2000025
                 _0x2000024:
0004cd 30e0      	CPI  R30,0
0004ce f421      	BRNE _0x2000026
                 _0x2000025:
                 _0x2000022:
0004cf 81ea      	LDD  R30,Y+2
0004d0 95e0      	COM  R30
0004d1 231e      	AND  R17,R30
0004d2 c002      	RJMP _0x2000027
                 _0x2000026:
0004d3 30e2      	CPI  R30,LOW(0x2)
0004d4 f429      	BRNE _0x2000028
                 _0x2000027:
0004d5 81ea      	LDD  R30,Y+2
0004d6 81ab      	LDD  R26,Y+3
0004d7 23ea      	AND  R30,R26
0004d8 2b1e      	OR   R17,R30
0004d9 c00e      	RJMP _0x200001E
                 _0x2000028:
0004da 30e1      	CPI  R30,LOW(0x1)
0004db f429      	BRNE _0x2000029
0004dc 81ea      	LDD  R30,Y+2
0004dd 81ab      	LDD  R26,Y+3
0004de 23ea      	AND  R30,R26
0004df 271e      	EOR  R17,R30
0004e0 c007      	RJMP _0x200001E
                 _0x2000029:
0004e1 30e4      	CPI  R30,LOW(0x4)
0004e2 f429      	BRNE _0x200001E
0004e3 81ea      	LDD  R30,Y+2
0004e4 95e0      	COM  R30
0004e5 81ab      	LDD  R26,Y+3
0004e6 2bea      	OR   R30,R26
0004e7 231e      	AND  R17,R30
                 _0x200001E:
0004e8 2fa1      	MOV  R26,R17
0004e9 defe      	RCALL _pcd8544_wrbyte
0004ea 8118      	LDD  R17,Y+0
                 _0x2140009:
0004eb 9626      	ADIW R28,6
0004ec 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
0004ed 93aa      	ST   -Y,R26
0004ee 9723      	SBIW R28,3
0004ef 940e 09c6 	CALL __SAVELOCR6
0004f1 89a8      	LDD  R26,Y+16
0004f2 35a4      	CPI  R26,LOW(0x54)
0004f3 f448      	BRSH _0x200002C
0004f4 85af      	LDD  R26,Y+15
0004f5 33a0      	CPI  R26,LOW(0x30)
0004f6 f430      	BRSH _0x200002C
0004f7 85ae      	LDD  R26,Y+14
0004f8 30a0      	CPI  R26,LOW(0x0)
0004f9 f019      	BREQ _0x200002C
0004fa 85ad      	LDD  R26,Y+13
0004fb 30a0      	CPI  R26,LOW(0x0)
0004fc f409      	BRNE _0x200002B
                 _0x200002C:
0004fd c1cc      	RJMP _0x2140008
                 _0x200002B:
0004fe 85ee      	LDD  R30,Y+14
0004ff 87e8      	STD  Y+8,R30
000500 89a8      	LDD  R26,Y+16
000501 27bb      	CLR  R27
000502 85ee      	LDD  R30,Y+14
000503 e0f0      	LDI  R31,0
000504 0fae      	ADD  R26,R30
000505 1fbf      	ADC  R27,R31
000506 35a5      	CPI  R26,LOW(0x55)
000507 e0e0      	LDI  R30,HIGH(0x55)
000508 07be      	CPC  R27,R30
000509 f020      	BRLO _0x200002E
00050a 89a8      	LDD  R26,Y+16
00050b e5e4      	LDI  R30,LOW(84)
00050c 1bea      	SUB  R30,R26
00050d 87ee      	STD  Y+14,R30
                 _0x200002E:
00050e 852d      	LDD  R18,Y+13
00050f 85af      	LDD  R26,Y+15
000510 27bb      	CLR  R27
000511 85ed      	LDD  R30,Y+13
000512 e0f0      	LDI  R31,0
000513 0fae      	ADD  R26,R30
000514 1fbf      	ADC  R27,R31
000515 97d1      	SBIW R26,49
000516 f020      	BRLO _0x200002F
000517 85af      	LDD  R26,Y+15
000518 e3e0      	LDI  R30,LOW(48)
000519 1bea      	SUB  R30,R26
00051a 87ed      	STD  Y+13,R30
                 _0x200002F:
00051b 85a9      	LDD  R26,Y+9
00051c 30a6      	CPI  R26,LOW(0x6)
00051d f009      	BREQ PC+2
00051e c05b      	RJMP _0x2000030
00051f 85ec      	LDD  R30,Y+12
000520 30e1      	CPI  R30,LOW(0x1)
000521 f409      	BRNE _0x2000034
000522 c1a7      	RJMP _0x2140008
                 _0x2000034:
000523 30e3      	CPI  R30,LOW(0x3)
000524 f439      	BRNE _0x2000037
                +
000525 91e0 0568+LDS R30 , _glcd_state + ( 27 )
000527 91f0 0569+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
000529 9730      	SBIW R30,0
00052a f409      	BRNE _0x2000036
00052b c19e      	RJMP _0x2140008
                 _0x2000036:
                 _0x2000037:
00052c 8508      	LDD  R16,Y+8
00052d 85ed      	LDD  R30,Y+13
00052e 95e6      	LSR  R30
00052f 95e6      	LSR  R30
000530 95e6      	LSR  R30
000531 2f3e      	MOV  R19,R30
000532 2fe2      	MOV  R30,R18
000533 70e7      	ANDI R30,LOW(0x7)
000534 f419      	BRNE _0x2000039
000535 85ad      	LDD  R26,Y+13
000536 172a      	CP   R18,R26
000537 f0e9      	BREQ _0x2000038
                 _0x2000039:
000538 2fa0      	MOV  R26,R16
000539 27bb      	CLR  R27
00053a 2fe3      	MOV  R30,R19
00053b e0f0      	LDI  R31,0
00053c 940e 098d 	CALL __MULW12U
00053e 85aa      	LDD  R26,Y+10
00053f 85bb      	LDD  R27,Y+10+1
000540 940e 0903 	CALL SUBOPT_0x9
000542 9526      	LSR  R18
000543 9526      	LSR  R18
000544 9526      	LSR  R18
000545 2f53      	MOV  R21,R19
                 _0x200003B:
000546 935f      	PUSH R21
000547 5f5f      	SUBI R21,-1
000548 2fe2      	MOV  R30,R18
000549 91af      	POP  R26
00054a 17ea      	CP   R30,R26
00054b f048      	BRLO _0x200003D
00054c 2f10      	MOV  R17,R16
                 _0x200003E:
00054d 2fe1      	MOV  R30,R17
00054e 5011      	SUBI R17,1
00054f 30e0      	CPI  R30,0
000550 f019      	BREQ _0x2000040
000551 940e 0908 	CALL SUBOPT_0xA
000553 cff9      	RJMP _0x200003E
                 _0x2000040:
000554 cff1      	RJMP _0x200003B
                 _0x200003D:
                 _0x2000038:
000555 85ae      	LDD  R26,Y+14
000556 170a      	CP   R16,R26
000557 f111      	BREQ _0x2000041
000558 85ee      	LDD  R30,Y+14
000559 85aa      	LDD  R26,Y+10
00055a 85bb      	LDD  R27,Y+10+1
00055b e0f0      	LDI  R31,0
00055c 940e 0903 	CALL SUBOPT_0x9
00055e 85ed      	LDD  R30,Y+13
00055f 70e7      	ANDI R30,LOW(0x7)
000560 f009      	BREQ _0x2000042
000561 5f3f      	SUBI R19,-LOW(1)
                 _0x2000042:
000562 e020      	LDI  R18,LOW(0)
                 _0x2000043:
000563 932f      	PUSH R18
000564 5f2f      	SUBI R18,-1
000565 2fe3      	MOV  R30,R19
000566 91af      	POP  R26
000567 17ae      	CP   R26,R30
000568 f488      	BRSH _0x2000045
000569 851e      	LDD  R17,Y+14
                 _0x2000046:
00056a 931f      	PUSH R17
00056b 5f1f      	SUBI R17,-1
00056c 2fe0      	MOV  R30,R16
00056d 91af      	POP  R26
00056e 17ae      	CP   R26,R30
00056f f418      	BRSH _0x2000048
000570 940e 0908 	CALL SUBOPT_0xA
000572 cff7      	RJMP _0x2000046
                 _0x2000048:
000573 85ee      	LDD  R30,Y+14
000574 81ae      	LDD  R26,Y+6
000575 81bf      	LDD  R27,Y+6+1
000576 e0f0      	LDI  R31,0
000577 940e 0903 	CALL SUBOPT_0x9
000579 cfe9      	RJMP _0x2000043
                 _0x2000045:
                 _0x2000041:
                 _0x2000030:
00057a 85ef      	LDD  R30,Y+15
00057b 70e7      	ANDI R30,LOW(0x7)
00057c 2f3e      	MOV  R19,R30
                 _0x2000049:
00057d 85ed      	LDD  R30,Y+13
00057e 30e0      	CPI  R30,0
00057f f409      	BRNE PC+2
000580 c149      	RJMP _0x200004B
000581 85ea      	LDD  R30,Y+10
000582 85fb      	LDD  R31,Y+10+1
000583 83ee      	STD  Y+6,R30
000584 83ff      	STD  Y+6+1,R31
000585 e010      	LDI  R17,LOW(0)
000586 8908      	LDD  R16,Y+16
000587 3030      	CPI  R19,0
000588 f009      	BREQ PC+2
000589 c063      	RJMP _0x200004C
00058a 85ad      	LDD  R26,Y+13
00058b 30a8      	CPI  R26,LOW(0x8)
00058c f408      	BRSH PC+2
00058d c05a      	RJMP _0x200004D
00058e 85e9      	LDD  R30,Y+9
00058f 30e0      	CPI  R30,0
000590 f011      	BREQ _0x2000052
000591 30e3      	CPI  R30,LOW(0x3)
000592 f409      	BRNE _0x2000053
                 _0x2000052:
000593 c002      	RJMP _0x2000054
                 _0x2000053:
000594 30e7      	CPI  R30,LOW(0x7)
000595 f409      	BRNE _0x2000055
                 _0x2000054:
000596 c002      	RJMP _0x2000056
                 _0x2000055:
000597 30e8      	CPI  R30,LOW(0x8)
000598 f409      	BRNE _0x2000057
                 _0x2000056:
000599 c002      	RJMP _0x2000058
                 _0x2000057:
00059a 30e9      	CPI  R30,LOW(0x9)
00059b f409      	BRNE _0x2000059
                 _0x2000058:
00059c c002      	RJMP _0x200005A
                 _0x2000059:
00059d 30ea      	CPI  R30,LOW(0xA)
00059e f421      	BRNE _0x200005B
                 _0x200005A:
00059f 930a      	ST   -Y,R16
0005a0 89a8      	LDD  R26,Y+16
0005a1 de2a      	RCALL _pcd8544_gotoxy
0005a2 c004      	RJMP _0x2000050
                 _0x200005B:
0005a3 30e6      	CPI  R30,LOW(0x6)
0005a4 f411      	BRNE _0x2000050
0005a5 940e 0915 	CALL SUBOPT_0xB
                 _0x2000050:
                 _0x200005D:
0005a7 931f      	PUSH R17
0005a8 5f1f      	SUBI R17,-1
0005a9 85ee      	LDD  R30,Y+14
0005aa 91af      	POP  R26
0005ab 17ae      	CP   R26,R30
0005ac f5a0      	BRSH _0x200005F
0005ad 85a9      	LDD  R26,Y+9
0005ae 30a6      	CPI  R26,LOW(0x6)
0005af f451      	BRNE _0x2000060
0005b0 940e 0919 	CALL SUBOPT_0xC
0005b2 93fa      	ST   -Y,R31
0005b3 93ea      	ST   -Y,R30
0005b4 940e 08f3 	CALL SUBOPT_0x7
0005b6 81a0      	LD   R26,Z
0005b7 940e 088d 	CALL _glcd_writemem
0005b9 c026      	RJMP _0x2000061
                 _0x2000060:
0005ba 85e9      	LDD  R30,Y+9
0005bb 30e9      	CPI  R30,LOW(0x9)
0005bc f411      	BRNE _0x2000065
0005bd e050      	LDI  R21,LOW(0)
0005be c00e      	RJMP _0x2000066
                 _0x2000065:
0005bf 30ea      	CPI  R30,LOW(0xA)
0005c0 f411      	BRNE _0x2000064
0005c1 ef5f      	LDI  R21,LOW(255)
0005c2 c00a      	RJMP _0x2000066
                 _0x2000064:
0005c3 940e 0919 	CALL SUBOPT_0xC
0005c5 940e 0922 	CALL SUBOPT_0xD
0005c7 2f5e      	MOV  R21,R30
0005c8 85e9      	LDD  R30,Y+9
0005c9 30e7      	CPI  R30,LOW(0x7)
0005ca f011      	BREQ _0x200006D
0005cb 30e8      	CPI  R30,LOW(0x8)
0005cc f421      	BRNE _0x200006E
                 _0x200006D:
                 _0x2000066:
0005cd 940e 0928 	CALL SUBOPT_0xE
0005cf 2f5e      	MOV  R21,R30
0005d0 c006      	RJMP _0x200006F
                 _0x200006E:
0005d1 30e3      	CPI  R30,LOW(0x3)
0005d2 f411      	BRNE _0x2000071
0005d3 9550      	COM  R21
0005d4 c002      	RJMP _0x2000072
                 _0x2000071:
0005d5 30e0      	CPI  R30,0
0005d6 f419      	BRNE _0x2000074
                 _0x2000072:
                 _0x200006F:
0005d7 2fa5      	MOV  R26,R21
0005d8 ddd3      	RCALL _pcd8544_wrdata_G100
0005d9 c006      	RJMP _0x200006B
                 _0x2000074:
0005da 940e 092c 	CALL SUBOPT_0xF
0005dc efef      	LDI  R30,LOW(255)
0005dd 93ea      	ST   -Y,R30
0005de 85ad      	LDD  R26,Y+13
0005df ded4      	RCALL _pcd8544_wrmasked_G100
                 _0x200006B:
                 _0x2000061:
0005e0 cfc6      	RJMP _0x200005D
                 _0x200005F:
0005e1 85ef      	LDD  R30,Y+15
0005e2 5fe8      	SUBI R30,-LOW(8)
0005e3 87ef      	STD  Y+15,R30
0005e4 85ed      	LDD  R30,Y+13
0005e5 50e8      	SUBI R30,LOW(8)
0005e6 87ed      	STD  Y+13,R30
0005e7 c0d9      	RJMP _0x2000075
                 _0x200004D:
0005e8 855d      	LDD  R21,Y+13
0005e9 e020      	LDI  R18,LOW(0)
0005ea e0e0      	LDI  R30,LOW(0)
0005eb 87ed      	STD  Y+13,R30
0005ec c07e      	RJMP _0x2000076
                 _0x200004C:
0005ed 2fe3      	MOV  R30,R19
0005ee 85ad      	LDD  R26,Y+13
0005ef 0fae      	ADD  R26,R30
0005f0 30a9      	CPI  R26,LOW(0x9)
0005f1 f420      	BRSH _0x2000077
0005f2 852d      	LDD  R18,Y+13
0005f3 e0e0      	LDI  R30,LOW(0)
0005f4 87ed      	STD  Y+13,R30
0005f5 c003      	RJMP _0x2000078
                 _0x2000077:
0005f6 e0e8      	LDI  R30,LOW(8)
0005f7 1be3      	SUB  R30,R19
0005f8 2f2e      	MOV  R18,R30
                 _0x2000078:
0005f9 933a      	ST   -Y,R19
0005fa 2fa2      	MOV  R26,R18
0005fb 940e 083b 	CALL _glcd_getmask
0005fd 2f4e      	MOV  R20,R30
0005fe 85e9      	LDD  R30,Y+9
0005ff 30e6      	CPI  R30,LOW(0x6)
000600 f511      	BRNE _0x200007C
000601 940e 0915 	CALL SUBOPT_0xB
                 _0x200007D:
000603 931f      	PUSH R17
000604 5f1f      	SUBI R17,-1
000605 85ee      	LDD  R30,Y+14
000606 91af      	POP  R26
000607 17ae      	CP   R26,R30
000608 f4c8      	BRSH _0x200007F
000609 940e 08f3 	CALL SUBOPT_0x7
00060b 81e0      	LD   R30,Z
00060c 23e4      	AND  R30,R20
00060d 2fae      	MOV  R26,R30
00060e 2fe3      	MOV  R30,R19
00060f 940e 0980 	CALL __LSRB12
000611 940e 0932 	CALL SUBOPT_0x10
000613 2fe3      	MOV  R30,R19
000614 2fa4      	MOV  R26,R20
000615 940e 0980 	CALL __LSRB12
000617 95e0      	COM  R30
000618 21e1      	AND  R30,R1
000619 2b5e      	OR   R21,R30
00061a 940e 0919 	CALL SUBOPT_0xC
00061c 93fa      	ST   -Y,R31
00061d 93ea      	ST   -Y,R30
00061e 2fa5      	MOV  R26,R21
00061f 940e 088d 	CALL _glcd_writemem
000621 cfe1      	RJMP _0x200007D
                 _0x200007F:
000622 c02c      	RJMP _0x200007B
                 _0x200007C:
000623 30e9      	CPI  R30,LOW(0x9)
000624 f411      	BRNE _0x2000080
000625 e050      	LDI  R21,LOW(0)
000626 c003      	RJMP _0x2000081
                 _0x2000080:
000627 30ea      	CPI  R30,LOW(0xA)
000628 f4a9      	BRNE _0x2000087
000629 ef5f      	LDI  R21,LOW(255)
                 _0x2000081:
00062a 940e 0928 	CALL SUBOPT_0xE
00062c 2fae      	MOV  R26,R30
00062d 2fe3      	MOV  R30,R19
00062e 940e 0978 	CALL __LSLB12
000630 2f5e      	MOV  R21,R30
                 _0x2000084:
000631 931f      	PUSH R17
000632 5f1f      	SUBI R17,-1
000633 85ee      	LDD  R30,Y+14
000634 91af      	POP  R26
000635 17ae      	CP   R26,R30
000636 f430      	BRSH _0x2000086
000637 940e 092c 	CALL SUBOPT_0xF
000639 934a      	ST   -Y,R20
00063a e0a0      	LDI  R26,LOW(0)
00063b de78      	RCALL _pcd8544_wrmasked_G100
00063c cff4      	RJMP _0x2000084
                 _0x2000086:
00063d c011      	RJMP _0x200007B
                 _0x2000087:
                 _0x2000088:
00063e 931f      	PUSH R17
00063f 5f1f      	SUBI R17,-1
000640 85ee      	LDD  R30,Y+14
000641 91af      	POP  R26
000642 17ae      	CP   R26,R30
000643 f458      	BRSH _0x200008A
000644 940e 093d 	CALL SUBOPT_0x11
000646 2fae      	MOV  R26,R30
000647 2fe3      	MOV  R30,R19
000648 940e 0978 	CALL __LSLB12
00064a 93ea      	ST   -Y,R30
00064b 934a      	ST   -Y,R20
00064c 85ad      	LDD  R26,Y+13
00064d de66      	RCALL _pcd8544_wrmasked_G100
00064e cfef      	RJMP _0x2000088
                 _0x200008A:
                 _0x200007B:
00064f 85ed      	LDD  R30,Y+13
000650 30e0      	CPI  R30,0
000651 f409      	BRNE _0x200008B
000652 c077      	RJMP _0x200004B
                 _0x200008B:
000653 85ad      	LDD  R26,Y+13
000654 30a8      	CPI  R26,LOW(0x8)
000655 f428      	BRSH _0x200008C
000656 85ed      	LDD  R30,Y+13
000657 1be2      	SUB  R30,R18
000658 2f5e      	MOV  R21,R30
000659 e0e0      	LDI  R30,LOW(0)
00065a c003      	RJMP _0x20000A2
                 _0x200008C:
00065b 2f53      	MOV  R21,R19
00065c 85ed      	LDD  R30,Y+13
00065d 50e8      	SUBI R30,LOW(8)
                 _0x20000A2:
00065e 87ed      	STD  Y+13,R30
00065f e010      	LDI  R17,LOW(0)
000660 85ef      	LDD  R30,Y+15
000661 5fe8      	SUBI R30,-LOW(8)
000662 87ef      	STD  Y+15,R30
000663 e0e8      	LDI  R30,LOW(8)
000664 1be3      	SUB  R30,R19
000665 2f2e      	MOV  R18,R30
000666 8908      	LDD  R16,Y+16
000667 85ea      	LDD  R30,Y+10
000668 85fb      	LDD  R31,Y+10+1
000669 83ee      	STD  Y+6,R30
00066a 83ff      	STD  Y+6+1,R31
                 _0x2000076:
00066b 2fe5      	MOV  R30,R21
00066c e0f0      	LDI  R31,0
00066d 59e0      	SUBI R30,LOW(-__glcd_mask*2)
00066e 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
00066f 9144      	LPM  R20,Z
000670 85e9      	LDD  R30,Y+9
000671 30e6      	CPI  R30,LOW(0x6)
000672 f511      	BRNE _0x2000091
000673 940e 0915 	CALL SUBOPT_0xB
                 _0x2000092:
000675 931f      	PUSH R17
000676 5f1f      	SUBI R17,-1
000677 85ee      	LDD  R30,Y+14
000678 91af      	POP  R26
000679 17ae      	CP   R26,R30
00067a f4c8      	BRSH _0x2000094
00067b 940e 08f3 	CALL SUBOPT_0x7
00067d 81e0      	LD   R30,Z
00067e 23e4      	AND  R30,R20
00067f 2fae      	MOV  R26,R30
000680 2fe2      	MOV  R30,R18
000681 940e 0978 	CALL __LSLB12
000683 940e 0932 	CALL SUBOPT_0x10
000685 2fe2      	MOV  R30,R18
000686 2fa4      	MOV  R26,R20
000687 940e 0978 	CALL __LSLB12
000689 95e0      	COM  R30
00068a 21e1      	AND  R30,R1
00068b 2b5e      	OR   R21,R30
00068c 940e 0919 	CALL SUBOPT_0xC
00068e 93fa      	ST   -Y,R31
00068f 93ea      	ST   -Y,R30
000690 2fa5      	MOV  R26,R21
000691 940e 088d 	CALL _glcd_writemem
000693 cfe1      	RJMP _0x2000092
                 _0x2000094:
000694 c02c      	RJMP _0x2000090
                 _0x2000091:
000695 30e9      	CPI  R30,LOW(0x9)
000696 f411      	BRNE _0x2000095
000697 e050      	LDI  R21,LOW(0)
000698 c003      	RJMP _0x2000096
                 _0x2000095:
000699 30ea      	CPI  R30,LOW(0xA)
00069a f4a9      	BRNE _0x200009C
00069b ef5f      	LDI  R21,LOW(255)
                 _0x2000096:
00069c 940e 0928 	CALL SUBOPT_0xE
00069e 2fae      	MOV  R26,R30
00069f 2fe2      	MOV  R30,R18
0006a0 940e 0980 	CALL __LSRB12
0006a2 2f5e      	MOV  R21,R30
                 _0x2000099:
0006a3 931f      	PUSH R17
0006a4 5f1f      	SUBI R17,-1
0006a5 85ee      	LDD  R30,Y+14
0006a6 91af      	POP  R26
0006a7 17ae      	CP   R26,R30
0006a8 f430      	BRSH _0x200009B
0006a9 940e 092c 	CALL SUBOPT_0xF
0006ab 934a      	ST   -Y,R20
0006ac e0a0      	LDI  R26,LOW(0)
0006ad de06      	RCALL _pcd8544_wrmasked_G100
0006ae cff4      	RJMP _0x2000099
                 _0x200009B:
0006af c011      	RJMP _0x2000090
                 _0x200009C:
                 _0x200009D:
0006b0 931f      	PUSH R17
0006b1 5f1f      	SUBI R17,-1
0006b2 85ee      	LDD  R30,Y+14
0006b3 91af      	POP  R26
0006b4 17ae      	CP   R26,R30
0006b5 f458      	BRSH _0x200009F
0006b6 940e 093d 	CALL SUBOPT_0x11
0006b8 2fae      	MOV  R26,R30
0006b9 2fe2      	MOV  R30,R18
0006ba 940e 0980 	CALL __LSRB12
0006bc 93ea      	ST   -Y,R30
0006bd 934a      	ST   -Y,R20
0006be 85ad      	LDD  R26,Y+13
0006bf ddf4      	RCALL _pcd8544_wrmasked_G100
0006c0 cfef      	RJMP _0x200009D
                 _0x200009F:
                 _0x2000090:
                 _0x2000075:
0006c1 85e8      	LDD  R30,Y+8
0006c2 85aa      	LDD  R26,Y+10
0006c3 85bb      	LDD  R27,Y+10+1
0006c4 e0f0      	LDI  R31,0
0006c5 0fea      	ADD  R30,R26
0006c6 1ffb      	ADC  R31,R27
0006c7 87ea      	STD  Y+10,R30
0006c8 87fb      	STD  Y+10+1,R31
0006c9 ceb3      	RJMP _0x2000049
                 _0x200004B:
                 _0x2140008:
0006ca 940e 09cd 	CALL __LOADLOCR6
0006cc 9661      	ADIW R28,17
0006cd 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
0006ce 940e 094a 	CALL SUBOPT_0x12
0006d0 f024      	BRLT _0x2020003
0006d1 e0e0      	LDI  R30,LOW(0)
0006d2 e0f0      	LDI  R31,HIGH(0)
0006d3 940c 0844 	JMP  _0x2140003
                 _0x2020003:
0006d5 81a8      	LD   R26,Y
0006d6 81b9      	LDD  R27,Y+1
0006d7 35a4      	CPI  R26,LOW(0x54)
0006d8 e0e0      	LDI  R30,HIGH(0x54)
0006d9 07be      	CPC  R27,R30
0006da f024      	BRLT _0x2020004
0006db e5e3      	LDI  R30,LOW(83)
0006dc e0f0      	LDI  R31,HIGH(83)
0006dd 940c 0844 	JMP  _0x2140003
                 _0x2020004:
0006df 81e8      	LD   R30,Y
0006e0 81f9      	LDD  R31,Y+1
0006e1 940c 0844 	JMP  _0x2140003
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
0006e3 940e 094a 	CALL SUBOPT_0x12
0006e5 f024      	BRLT _0x2020005
0006e6 e0e0      	LDI  R30,LOW(0)
0006e7 e0f0      	LDI  R31,HIGH(0)
0006e8 940c 0844 	JMP  _0x2140003
                 _0x2020005:
0006ea 81a8      	LD   R26,Y
0006eb 81b9      	LDD  R27,Y+1
0006ec 97d0      	SBIW R26,48
0006ed f024      	BRLT _0x2020006
0006ee e2ef      	LDI  R30,LOW(47)
0006ef e0f0      	LDI  R31,HIGH(47)
0006f0 940c 0844 	JMP  _0x2140003
                 _0x2020006:
0006f2 81e8      	LD   R30,Y
0006f3 81f9      	LDD  R31,Y+1
0006f4 940c 0844 	JMP  _0x2140003
                 ; .FEND
                 _glcd_getcharw_G101:
                 ; .FSTART _glcd_getcharw_G101
0006f6 93ba      	ST   -Y,R27
0006f7 93aa      	ST   -Y,R26
0006f8 9723      	SBIW R28,3
0006f9 940e 0951 	CALL SUBOPT_0x13
0006fb 018f      	MOVW R16,R30
0006fc 2e00      	MOV  R0,R16
0006fd 2a01      	OR   R0,R17
0006fe f419      	BRNE _0x202000B
0006ff e0e0      	LDI  R30,LOW(0)
000700 e0f0      	LDI  R31,HIGH(0)
000701 c05f      	RJMP _0x2140007
                 _0x202000B:
000702 940e 0958 	CALL SUBOPT_0x14
000704 820f      	STD  Y+7,R0
000705 940e 0958 	CALL SUBOPT_0x14
000707 820e      	STD  Y+6,R0
000708 940e 0958 	CALL SUBOPT_0x14
00070a 8608      	STD  Y+8,R0
00070b 85eb      	LDD  R30,Y+11
00070c 85a8      	LDD  R26,Y+8
00070d 17ea      	CP   R30,R26
00070e f418      	BRSH _0x202000C
00070f e0e0      	LDI  R30,LOW(0)
000710 e0f0      	LDI  R31,HIGH(0)
000711 c04f      	RJMP _0x2140007
                 _0x202000C:
000712 01f8      	MOVW R30,R16
                +
000713 5f0f     +SUBI R16 , LOW ( - 1 )
000714 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000715 9154      	LPM  R21,Z
000716 85a8      	LDD  R26,Y+8
000717 27bb      	CLR  R27
000718 27ee      	CLR  R30
000719 0fa5      	ADD  R26,R21
00071a 1fbe      	ADC  R27,R30
00071b 85eb      	LDD  R30,Y+11
00071c e0f0      	LDI  R31,0
00071d 17ea      	CP   R30,R26
00071e 07fb      	CPC  R31,R27
00071f f018      	BRLO _0x202000D
000720 e0e0      	LDI  R30,LOW(0)
000721 e0f0      	LDI  R31,HIGH(0)
000722 c03e      	RJMP _0x2140007
                 _0x202000D:
000723 81ee      	LDD  R30,Y+6
000724 95e6      	LSR  R30
000725 95e6      	LSR  R30
000726 95e6      	LSR  R30
000727 2f4e      	MOV  R20,R30
000728 81ee      	LDD  R30,Y+6
000729 70e7      	ANDI R30,LOW(0x7)
00072a f009      	BREQ _0x202000E
00072b 5f4f      	SUBI R20,-LOW(1)
                 _0x202000E:
00072c 81ef      	LDD  R30,Y+7
00072d 30e0      	CPI  R30,0
00072e f0a1      	BREQ _0x202000F
00072f 85a9      	LDD  R26,Y+9
000730 85ba      	LDD  R27,Y+9+1
000731 93ec      	ST   X,R30
000732 85a8      	LDD  R26,Y+8
000733 85eb      	LDD  R30,Y+11
000734 1bea      	SUB  R30,R26
000735 e0f0      	LDI  R31,0
000736 01df      	MOVW R26,R30
000737 81ef      	LDD  R30,Y+7
000738 e0f0      	LDI  R31,0
000739 940e 098d 	CALL __MULW12U
00073b 01df      	MOVW R26,R30
00073c 2fe4      	MOV  R30,R20
00073d e0f0      	LDI  R31,0
00073e 940e 098d 	CALL __MULW12U
000740 0fe0      	ADD  R30,R16
000741 1ff1      	ADC  R31,R17
000742 c01e      	RJMP _0x2140007
                 _0x202000F:
000743 0198      	MOVW R18,R16
000744 2fe5      	MOV  R30,R21
000745 e0f0      	LDI  R31,0
                +
000746 0f0e     +ADD R16 , R30
000747 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2020010:
000748 85a8      	LDD  R26,Y+8
000749 5faf      	SUBI R26,-LOW(1)
00074a 87a8      	STD  Y+8,R26
00074b 50a1      	SUBI R26,LOW(1)
00074c 85eb      	LDD  R30,Y+11
00074d 17ae      	CP   R26,R30
00074e f460      	BRSH _0x2020012
00074f 01f9      	MOVW R30,R18
                +
000750 5f2f     +SUBI R18 , LOW ( - 1 )
000751 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000752 91a4      	LPM  R26,Z
000753 e0b0      	LDI  R27,0
000754 2fe4      	MOV  R30,R20
000755 e0f0      	LDI  R31,0
000756 940e 098d 	CALL __MULW12U
                +
000758 0f0e     +ADD R16 , R30
000759 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
00075a cfed      	RJMP _0x2020010
                 _0x2020012:
00075b 01f9      	MOVW R30,R18
00075c 91e4      	LPM  R30,Z
00075d 85a9      	LDD  R26,Y+9
00075e 85ba      	LDD  R27,Y+9+1
00075f 93ec      	ST   X,R30
000760 01f8      	MOVW R30,R16
                 _0x2140007:
000761 940e 09cd 	CALL __LOADLOCR6
000763 962c      	ADIW R28,12
000764 9508      	RET
                 ; .FEND
                 _glcd_new_line_G101:
                 ; .FSTART _glcd_new_line_G101
000765 e0e0      	LDI  R30,LOW(0)
                +
000766 93e0 054f+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
000768 91a0 0550+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
00076a 27bb      	CLR  R27
00076b 940e 095d 	CALL SUBOPT_0x15
00076d e0f0      	LDI  R31,0
00076e 0fae      	ADD  R26,R30
00076f 1fbf      	ADC  R27,R31
                +
000770 91e0 0554+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000772 e0f0      	LDI  R31,0
000773 0fae      	ADD  R26,R30
000774 1fbf      	ADC  R27,R31
000775 df6d      	RCALL _glcd_clipy
                +
000776 93e0 0550+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000778 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
000779 93aa      	ST   -Y,R26
00077a 9721      	SBIW R28,1
00077b 940e 0951 	CALL SUBOPT_0x13
00077d 9730      	SBIW R30,0
00077e f409      	BRNE PC+2
00077f c055      	RJMP _0x202001F
000780 81af      	LDD  R26,Y+7
000781 30aa      	CPI  R26,LOW(0xA)
000782 f409      	BRNE _0x2020020
000783 c04f      	RJMP _0x2020021
                 _0x2020020:
000784 81ef      	LDD  R30,Y+7
000785 93ea      	ST   -Y,R30
000786 01de      	MOVW R26,R28
000787 9617      	ADIW R26,7
000788 df6d      	RCALL _glcd_getcharw_G101
000789 01af      	MOVW R20,R30
00078a 9730      	SBIW R30,0
00078b f409      	BRNE _0x2020022
00078c c04a      	RJMP _0x2140005
                 _0x2020022:
                +
00078d 91e0 0553+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
00078f 81ae      	LDD  R26,Y+6
000790 0fea      	ADD  R30,R26
000791 2f3e      	MOV  R19,R30
                +
000792 91a0 054f+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
000794 27bb      	CLR  R27
000795 e0f0      	LDI  R31,0
000796 0fea      	ADD  R30,R26
000797 1ffb      	ADC  R31,R27
000798 018f      	MOVW R16,R30
                +
000799 3505     +CPI R16 , LOW ( 85 )
00079a e0e0     +LDI R30 , HIGH ( 85 )
00079b 071e     +CPC R17 , R30
                 	__CPWRN 16,17,85
00079c f018      	BRLO _0x2020023
00079d 2f03      	MOV  R16,R19
00079e 2711      	CLR  R17
00079f dfc5      	RCALL _glcd_new_line_G101
                 _0x2020023:
                +
0007a0 91e0 054f+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
0007a2 93ea      	ST   -Y,R30
                +
0007a3 91e0 0550+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
0007a5 93ea      	ST   -Y,R30
0007a6 85e8      	LDD  R30,Y+8
0007a7 93ea      	ST   -Y,R30
0007a8 940e 095d 	CALL SUBOPT_0x15
0007aa 93ea      	ST   -Y,R30
0007ab e0e1      	LDI  R30,LOW(1)
0007ac 93ea      	ST   -Y,R30
0007ad 935a      	ST   -Y,R21
0007ae 934a      	ST   -Y,R20
0007af e0a7      	LDI  R26,LOW(7)
0007b0 dd3c      	RCALL _glcd_block
                +
0007b1 91e0 054f+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
0007b3 81ae      	LDD  R26,Y+6
0007b4 0fea      	ADD  R30,R26
0007b5 93ea      	ST   -Y,R30
                +
0007b6 91e0 0550+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
0007b8 93ea      	ST   -Y,R30
                +
0007b9 91e0 0553+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
0007bb 93ea      	ST   -Y,R30
0007bc 940e 095d 	CALL SUBOPT_0x15
0007be 940e 0964 	CALL SUBOPT_0x16
                +
0007c0 91e0 054f+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
0007c2 93ea      	ST   -Y,R30
                +
0007c3 91a0 0550+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
0007c5 940e 095d 	CALL SUBOPT_0x15
0007c7 0fea      	ADD  R30,R26
0007c8 93ea      	ST   -Y,R30
0007c9 933a      	ST   -Y,R19
                +
0007ca 91e0 0554+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
0007cc 940e 0964 	CALL SUBOPT_0x16
0007ce e5e4      	LDI  R30,LOW(84)
0007cf e0f0      	LDI  R31,HIGH(84)
0007d0 17e0      	CP   R30,R16
0007d1 07f1      	CPC  R31,R17
0007d2 f411      	BRNE _0x2020024
                 _0x2020021:
0007d3 df91      	RCALL _glcd_new_line_G101
0007d4 c002      	RJMP _0x2140005
                 _0x2020024:
                 _0x202001F:
                +
0007d5 9300 054f+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
                 _0x2140005:
0007d7 940e 09cd 	CALL __LOADLOCR6
                 _0x2140006:
0007d9 9628      	ADIW R28,8
0007da 9508      	RET
                 ; .FEND
                 _glcd_outtextxy:
                 ; .FSTART _glcd_outtextxy
0007db 93ba      	ST   -Y,R27
0007dc 93aa      	ST   -Y,R26
0007dd 931a      	ST   -Y,R17
0007de 81ec      	LDD  R30,Y+4
0007df 93ea      	ST   -Y,R30
0007e0 81ac      	LDD  R26,Y+4
0007e1 d00e      	RCALL _glcd_moveto
                 _0x2020025:
0007e2 81a9      	LDD  R26,Y+1
0007e3 81ba      	LDD  R27,Y+1+1
0007e4 91ed      	LD   R30,X+
0007e5 83a9      	STD  Y+1,R26
0007e6 83ba      	STD  Y+1+1,R27
0007e7 2f1e      	MOV  R17,R30
0007e8 30e0      	CPI  R30,0
0007e9 f019      	BREQ _0x2020027
0007ea 2fa1      	MOV  R26,R17
0007eb df8d      	RCALL _glcd_putchar
0007ec cff5      	RJMP _0x2020025
                 _0x2020027:
0007ed 8118      	LDD  R17,Y+0
0007ee 940c 0839 	JMP  _0x2140004
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
0007f0 93aa      	ST   -Y,R26
0007f1 81a9      	LDD  R26,Y+1
0007f2 27bb      	CLR  R27
0007f3 deda      	RCALL _glcd_clipx
                +
0007f4 93e0 054f+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
0007f6 81a8      	LD   R26,Y
0007f7 27bb      	CLR  R27
0007f8 deea      	RCALL _glcd_clipy
                +
0007f9 93e0 0550+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
0007fb 940c 0844 	JMP  _0x2140003
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 
                 	.CSEG
                 _itoa:
                 ; .FSTART _itoa
0007fd 93ba      	ST   -Y,R27
0007fe 93aa      	ST   -Y,R26
0007ff 91a9          ld   r26,y+
000800 91b9          ld   r27,y+
000801 91e9          ld   r30,y+
000802 91f9          ld   r31,y+
000803 9630          adiw r30,0
000804 f42a          brpl __itoa0
000805 95e0          com  r30
000806 95f0          com  r31
000807 9631          adiw r30,1
000808 e26d          ldi  r22,'-'
000809 936d          st   x+,r22
                 __itoa0:
00080a 94e8          clt
00080b e180          ldi  r24,low(10000)
00080c e297          ldi  r25,high(10000)
00080d d00d          rcall __itoa1
00080e ee88          ldi  r24,low(1000)
00080f e093          ldi  r25,high(1000)
000810 d00a          rcall __itoa1
000811 e684          ldi  r24,100
000812 2799          clr  r25
000813 d007          rcall __itoa1
000814 e08a          ldi  r24,10
000815 d005          rcall __itoa1
000816 2f6e          mov  r22,r30
000817 d010          rcall __itoa5
000818 2766          clr  r22
000819 936c          st   x,r22
00081a 9508          ret
                 
                 __itoa1:
00081b 2766          clr	 r22
                 __itoa2:
00081c 17e8          cp   r30,r24
00081d 07f9          cpc  r31,r25
00081e f020          brlo __itoa3
00081f 9563          inc  r22
000820 1be8          sub  r30,r24
000821 0bf9          sbc  r31,r25
000822 f7c9          brne __itoa2
                 __itoa3:
000823 2366          tst  r22
000824 f411          brne __itoa4
000825 f016          brts __itoa5
000826 9508          ret
                 __itoa4:
000827 9468          set
                 __itoa5:
000828 5d60          subi r22,-0x30
000829 936d          st   x+,r22
00082a 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
00082b 93ba      	ST   -Y,R27
00082c 93aa      	ST   -Y,R26
00082d 81b9          ldd  r27,y+1
00082e 81a8          ld   r26,y
00082f 9610          adiw r26,0
000830 f031          breq memset1
000831 81fc          ldd  r31,y+4
000832 81eb          ldd  r30,y+3
000833 816a          ldd  r22,y+2
                 memset0:
000834 9361          st   z+,r22
000835 9711          sbiw r26,1
000836 f7e9          brne memset0
                 memset1:
000837 81eb          ldd  r30,y+3
000838 81fc          ldd  r31,y+4
                 _0x2140004:
000839 9625      	ADIW R28,5
00083a 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
00083b 93aa      	ST   -Y,R26
00083c 81e8      	LD   R30,Y
00083d e0f0      	LDI  R31,0
00083e 59e0      	SUBI R30,LOW(-__glcd_mask*2)
00083f 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000840 91a4      	LPM  R26,Z
000841 81e9      	LDD  R30,Y+1
000842 940e 0978 	CALL __LSLB12
                 _0x2140003:
000844 9622      	ADIW R28,2
000845 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
000846 93aa      	ST   -Y,R26
000847 931a      	ST   -Y,R17
000848 81e9      	LDD  R30,Y+1
000849 30e7      	CPI  R30,LOW(0x7)
00084a f011      	BREQ _0x20E0007
00084b 30ea      	CPI  R30,LOW(0xA)
00084c f419      	BRNE _0x20E0008
                 _0x20E0007:
00084d 9110 054d 	LDS  R17,_glcd_state
00084f c009      	RJMP _0x20E0009
                 _0x20E0008:
000850 30e9      	CPI  R30,LOW(0x9)
000851 f419      	BRNE _0x20E000B
                +
000852 9110 054e+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
000854 c004      	RJMP _0x20E0009
                 _0x20E000B:
000855 30e8      	CPI  R30,LOW(0x8)
000856 f4a1      	BRNE _0x20E0005
                +
000857 9110 055d+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x20E0009:
                +
000859 91e0 054e+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
00085b 30e0      	CPI  R30,0
00085c f049      	BREQ _0x20E000E
00085d 3010      	CPI  R17,0
00085e f019      	BREQ _0x20E000F
00085f efef      	LDI  R30,LOW(255)
000860 8118      	LDD  R17,Y+0
000861 c029      	RJMP _0x2140002
                 _0x20E000F:
000862 81ea      	LDD  R30,Y+2
000863 95e0      	COM  R30
000864 8118      	LDD  R17,Y+0
000865 c025      	RJMP _0x2140002
                 _0x20E000E:
000866 3010      	CPI  R17,0
000867 f419      	BRNE _0x20E0011
000868 e0e0      	LDI  R30,LOW(0)
000869 8118      	LDD  R17,Y+0
00086a c020      	RJMP _0x2140002
                 _0x20E0011:
                 _0x20E0005:
00086b 81ea      	LDD  R30,Y+2
00086c 8118      	LDD  R17,Y+0
00086d c01d      	RJMP _0x2140002
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
00086e 93ba      	ST   -Y,R27
00086f 93aa      	ST   -Y,R26
000870 81ea      	LDD  R30,Y+2
000871 30e1      	CPI  R30,LOW(0x1)
000872 f421      	BRNE _0x20E0015
000873 81e8      	LD   R30,Y
000874 81f9      	LDD  R31,Y+1
000875 91e4      	LPM  R30,Z
000876 c014      	RJMP _0x2140002
                 _0x20E0015:
000877 30e2      	CPI  R30,LOW(0x2)
000878 f429      	BRNE _0x20E0016
000879 81a8      	LD   R26,Y
00087a 81b9      	LDD  R27,Y+1
00087b 940e 099d 	CALL __EEPROMRDB
00087d c00d      	RJMP _0x2140002
                 _0x20E0016:
00087e 30e3      	CPI  R30,LOW(0x3)
00087f f441      	BRNE _0x20E0018
000880 81a8      	LD   R26,Y
000881 81b9      	LDD  R27,Y+1
                +
000882 91e0 0566+LDS R30 , _glcd_state + ( 25 )
000884 91f0 0567+LDS R31 , _glcd_state + ( 25 ) + 1
000886 9509     +ICALL
                 	__CALL1MN _glcd_state,25
000887 c003      	RJMP _0x2140002
                 _0x20E0018:
000888 81a8      	LD   R26,Y
000889 81b9      	LDD  R27,Y+1
00088a 91ec      	LD   R30,X
                 _0x2140002:
00088b 9623      	ADIW R28,3
00088c 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
00088d 93aa      	ST   -Y,R26
00088e 81eb      	LDD  R30,Y+3
00088f 30e0      	CPI  R30,0
000890 f429      	BRNE _0x20E001C
000891 81e8      	LD   R30,Y
000892 81a9      	LDD  R26,Y+1
000893 81ba      	LDD  R27,Y+1+1
000894 93ec      	ST   X,R30
000895 c014      	RJMP _0x20E001B
                 _0x20E001C:
000896 30e2      	CPI  R30,LOW(0x2)
000897 f431      	BRNE _0x20E001D
000898 81e8      	LD   R30,Y
000899 81a9      	LDD  R26,Y+1
00089a 81ba      	LDD  R27,Y+1+1
00089b 940e 09b1 	CALL __EEPROMWRB
00089d c00c      	RJMP _0x20E001B
                 _0x20E001D:
00089e 30e3      	CPI  R30,LOW(0x3)
00089f f451      	BRNE _0x20E001B
0008a0 81e9      	LDD  R30,Y+1
0008a1 81fa      	LDD  R31,Y+1+1
0008a2 93fa      	ST   -Y,R31
0008a3 93ea      	ST   -Y,R30
0008a4 81aa      	LDD  R26,Y+2
                +
0008a5 91e0 0568+LDS R30 , _glcd_state + ( 27 )
0008a7 91f0 0569+LDS R31 , _glcd_state + ( 27 ) + 1
0008a9 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x20E001B:
                 _0x2140001:
0008aa 9624      	ADIW R28,4
0008ab 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _glcd_state:
00054d           	.BYTE 0x1D
                 
                 	.ESEG
                 _my_eeprom:
000000           	.BYTE 0x2
                 
                 	.DSEG
                 _keypad:
00056a           	.BYTE 0x12
                 _tmp:
00057c           	.BYTE 0xA
                 _gfx_addr_G100:
000586           	.BYTE 0x2
                 _gfx_buffer_G100:
000588           	.BYTE 0x1F8
                 __seed_G104:
000780           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x0:
0008ac e0a6      	LDI  R26,LOW(6)
0008ad 9f0a      	MUL  R16,R26
0008ae 01f0      	MOVW R30,R0
0008af 59e6      	SUBI R30,LOW(-_keypad)
0008b0 4ffa      	SBCI R31,HIGH(-_keypad)
0008b1 01df      	MOVW R26,R30
0008b2 2fe3      	MOV  R30,R19
0008b3 e0f0      	LDI  R31,0
0008b4 0fee      	LSL  R30
0008b5 1fff      	ROL  R31
0008b6 0fae      	ADD  R26,R30
0008b7 1fbf      	ADC  R27,R31
0008b8 940e 0995 	CALL __GETW1P
0008ba 940e 09cf 	CALL __LOADLOCR4
0008bc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1:
0008bd 93ba      	ST   -Y,R27
0008be 93aa      	ST   -Y,R26
0008bf 940e 0496 	CALL _glcd_clear
0008c1 e0ef      	LDI  R30,LOW(15)
0008c2 93ea      	ST   -Y,R30
0008c3 e1e4      	LDI  R30,LOW(20)
0008c4 93ea      	ST   -Y,R30
0008c5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2:
0008c6 93fa      	ST   -Y,R31
0008c7 93ea      	ST   -Y,R30
0008c8 e7ac      	LDI  R26,LOW(_tmp)
0008c9 e0b5      	LDI  R27,HIGH(_tmp)
0008ca 940e 07fd 	CALL _itoa
0008cc e1ee      	LDI  R30,LOW(30)
0008cd 93ea      	ST   -Y,R30
0008ce 93ea      	ST   -Y,R30
0008cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
                +
0008d0 e000     +LDI R16 , LOW ( 0 )
0008d1 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
0008d2 ef2f     +LDI R18 , LOW ( - 1 )
0008d3 ef3f     +LDI R19 , HIGH ( - 1 )
                 	__GETWRN 18,19,-1
                +
0008d4 e040     +LDI R20 , LOW ( 0 )
0008d5 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
0008d6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4:
0008d7 93fa      	ST   -Y,R31
0008d8 93ea      	ST   -Y,R30
0008d9 efaf      	LDI  R26,LOW(65535)
0008da efbf      	LDI  R27,HIGH(65535)
0008db 940c 0229 	JMP  _mainScreen
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x5:
0008dd 940e 01eb 	CALL _read
0008df 019f      	MOVW R18,R30
0008e0 eca8      	LDI  R26,LOW(200)
0008e1 e0b0      	LDI  R27,0
0008e2 940e 096e 	CALL _delay_ms
0008e4 efef      	LDI  R30,LOW(65535)
0008e5 efff      	LDI  R31,HIGH(65535)
0008e6 17e2      	CP   R30,R18
0008e7 07f3      	CPC  R31,R19
0008e8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x6:
0008e9 93fa      	ST   -Y,R31
0008ea 93ea      	ST   -Y,R30
0008eb 01fe      	MOVW R30,R28
0008ec 9632      	ADIW R30,2
0008ed 93fa      	ST   -Y,R31
0008ee 93ea      	ST   -Y,R30
0008ef e1ae      	LDI  R26,LOW(30)
0008f0 e0b0      	LDI  R27,0
0008f1 940c 023f 	JMP  _mainScreen2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x7:
0008f3 e8a6      	LDI  R26,LOW(_gfx_addr_G100)
0008f4 e0b5      	LDI  R27,HIGH(_gfx_addr_G100)
0008f5 91ed      	LD   R30,X+
0008f6 91fd      	LD   R31,X+
0008f7 9631      	ADIW R30,1
0008f8 93fe      	ST   -X,R31
0008f9 93ee      	ST   -X,R30
0008fa 9731      	SBIW R30,1
0008fb 57e8      	SUBI R30,LOW(-_gfx_buffer_G100)
0008fc 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G100)
0008fd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
0008fe 93e0 0064 	STS  100,R30
000900 91e0 0065 	LDS  R30,101
000902 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
000903 0fea      	ADD  R30,R26
000904 1ffb      	ADC  R31,R27
000905 83ee      	STD  Y+6,R30
000906 83ff      	STD  Y+6+1,R31
000907 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0xA:
000908 85ec      	LDD  R30,Y+12
000909 93ea      	ST   -Y,R30
00090a 81ef      	LDD  R30,Y+7
00090b 85f8      	LDD  R31,Y+7+1
00090c 9631      	ADIW R30,1
00090d 83ef      	STD  Y+7,R30
00090e 87f8      	STD  Y+7+1,R31
00090f 9731      	SBIW R30,1
000910 93fa      	ST   -Y,R31
000911 93ea      	ST   -Y,R30
000912 e0a0      	LDI  R26,LOW(0)
000913 940c 088d 	JMP  _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
000915 930a      	ST   -Y,R16
000916 89a8      	LDD  R26,Y+16
000917 940c 03b5 	JMP  _pcd8544_setaddr_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0xC:
000919 85ec      	LDD  R30,Y+12
00091a 93ea      	ST   -Y,R30
00091b 81ef      	LDD  R30,Y+7
00091c 85f8      	LDD  R31,Y+7+1
00091d 9631      	ADIW R30,1
00091e 83ef      	STD  Y+7,R30
00091f 87f8      	STD  Y+7+1,R31
000920 9731      	SBIW R30,1
000921 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xD:
000922 2766      	CLR  R22
000923 2777      	CLR  R23
000924 01df      	MOVW R26,R30
000925 01cb      	MOVW R24,R22
000926 940c 086e 	JMP  _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
000928 935a      	ST   -Y,R21
000929 85aa      	LDD  R26,Y+10
00092a 940c 0846 	JMP  _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF:
00092c 930a      	ST   -Y,R16
00092d 9503      	INC  R16
00092e 89e8      	LDD  R30,Y+16
00092f 93ea      	ST   -Y,R30
000930 935a      	ST   -Y,R21
000931 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x10:
000932 2f5e      	MOV  R21,R30
000933 85ec      	LDD  R30,Y+12
000934 93ea      	ST   -Y,R30
000935 81af      	LDD  R26,Y+7
000936 85b8      	LDD  R27,Y+7+1
000937 2788      	CLR  R24
000938 2799      	CLR  R25
000939 940e 086e 	CALL _glcd_readmem
00093b 2e1e      	MOV  R1,R30
00093c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x11:
00093d 930a      	ST   -Y,R16
00093e 9503      	INC  R16
00093f 89e8      	LDD  R30,Y+16
000940 93ea      	ST   -Y,R30
000941 85ee      	LDD  R30,Y+14
000942 93ea      	ST   -Y,R30
000943 85e9      	LDD  R30,Y+9
000944 85fa      	LDD  R31,Y+9+1
000945 9631      	ADIW R30,1
000946 87e9      	STD  Y+9,R30
000947 87fa      	STD  Y+9+1,R31
000948 9731      	SBIW R30,1
000949 cfd8      	RJMP SUBOPT_0xD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
00094a 93ba      	ST   -Y,R27
00094b 93aa      	ST   -Y,R26
00094c 81a8      	LD   R26,Y
00094d 81b9      	LDD  R27,Y+1
00094e 940e 09c2 	CALL __CPW02
000950 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13:
000951 940e 09c6 	CALL __SAVELOCR6
                +
000953 91e0 0551+LDS R30 , _glcd_state + ( 4 )
000955 91f0 0552+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000957 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x14:
000958 01f8      	MOVW R30,R16
                +
000959 5f0f     +SUBI R16 , LOW ( - 1 )
00095a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00095b 9004      	LPM  R0,Z
00095c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x15:
                +
00095d 91e0 0551+LDS R30 , _glcd_state + ( 4 )
00095f 91f0 0552+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000961 9631      	ADIW R30,1
000962 91e4      	LPM  R30,Z
000963 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x16:
000964 93ea      	ST   -Y,R30
000965 e0e0      	LDI  R30,LOW(0)
000966 93ea      	ST   -Y,R30
000967 e0e0      	LDI  R30,LOW(0)
000968 e0f0      	LDI  R31,HIGH(0)
000969 93fa      	ST   -Y,R31
00096a 93ea      	ST   -Y,R30
00096b e0a9      	LDI  R26,LOW(9)
00096c 940c 04ed 	JMP  _glcd_block
                 
                 
                 	.CSEG
                 _delay_ms:
00096e 9610      	adiw r26,0
00096f f039      	breq __delay_ms1
                 __delay_ms0:
                +
000970 ed80     +LDI R24 , LOW ( 0x7D0 )
000971 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000972 9701     +SBIW R24 , 1
000973 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000974 95a8      	wdr
000975 9711      	sbiw r26,1
000976 f7c9      	brne __delay_ms0
                 __delay_ms1:
000977 9508      	ret
                 
                 __LSLB12:
000978 23ee      	TST  R30
000979 2e0e      	MOV  R0,R30
00097a 2fea      	MOV  R30,R26
00097b f019      	BREQ __LSLB12R
                 __LSLB12L:
00097c 0fee      	LSL  R30
00097d 940a      	DEC  R0
00097e f7e9      	BRNE __LSLB12L
                 __LSLB12R:
00097f 9508      	RET
                 
                 __LSRB12:
000980 23ee      	TST  R30
000981 2e0e      	MOV  R0,R30
000982 2fea      	MOV  R30,R26
000983 f019      	BREQ __LSRB12R
                 __LSRB12L:
000984 95e6      	LSR  R30
000985 940a      	DEC  R0
000986 f7e9      	BRNE __LSRB12L
                 __LSRB12R:
000987 9508      	RET
                 
                 __LSLW2:
000988 0fee      	LSL  R30
000989 1fff      	ROL  R31
00098a 0fee      	LSL  R30
00098b 1fff      	ROL  R31
00098c 9508      	RET
                 
                 __MULW12U:
00098d 9ffa      	MUL  R31,R26
00098e 2df0      	MOV  R31,R0
00098f 9feb      	MUL  R30,R27
000990 0df0      	ADD  R31,R0
000991 9fea      	MUL  R30,R26
000992 2de0      	MOV  R30,R0
000993 0df1      	ADD  R31,R1
000994 9508      	RET
                 
                 __GETW1P:
000995 91ed      	LD   R30,X+
000996 91fc      	LD   R31,X
000997 9711      	SBIW R26,1
000998 9508      	RET
                 
                 __EEPROMRDW:
000999 9611      	ADIW R26,1
00099a d002      	RCALL __EEPROMRDB
00099b 2ffe      	MOV  R31,R30
00099c 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
00099d 99e1      	SBIC EECR,EEWE
00099e cffe      	RJMP __EEPROMRDB
00099f 93ff      	PUSH R31
0009a0 b7ff      	IN   R31,SREG
0009a1 94f8      	CLI
0009a2 bbae      	OUT  EEARL,R26
0009a3 bbbf      	OUT  EEARH,R27
0009a4 9ae0      	SBI  EECR,EERE
0009a5 b3ed      	IN   R30,EEDR
0009a6 bfff      	OUT  SREG,R31
0009a7 91ff      	POP  R31
0009a8 9508      	RET
                 
                 __EEPROMWRW:
0009a9 d007      	RCALL __EEPROMWRB
0009aa 9611      	ADIW R26,1
0009ab 93ef      	PUSH R30
0009ac 2fef      	MOV  R30,R31
0009ad d003      	RCALL __EEPROMWRB
0009ae 91ef      	POP  R30
0009af 9711      	SBIW R26,1
0009b0 9508      	RET
                 
                 __EEPROMWRB:
0009b1 9be1      	SBIS EECR,EEWE
0009b2 c002      	RJMP __EEPROMWRB1
0009b3 95a8      	WDR
0009b4 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
0009b5 b79f      	IN   R25,SREG
0009b6 94f8      	CLI
0009b7 bbae      	OUT  EEARL,R26
0009b8 bbbf      	OUT  EEARH,R27
0009b9 9ae0      	SBI  EECR,EERE
0009ba b38d      	IN   R24,EEDR
0009bb 17e8      	CP   R30,R24
0009bc f019      	BREQ __EEPROMWRB0
0009bd bbed      	OUT  EEDR,R30
0009be 9ae2      	SBI  EECR,EEMWE
0009bf 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
0009c0 bf9f      	OUT  SREG,R25
0009c1 9508      	RET
                 
                 __CPW02:
0009c2 2400      	CLR  R0
0009c3 160a      	CP   R0,R26
0009c4 060b      	CPC  R0,R27
0009c5 9508      	RET
                 
                 __SAVELOCR6:
0009c6 935a      	ST   -Y,R21
                 __SAVELOCR5:
0009c7 934a      	ST   -Y,R20
                 __SAVELOCR4:
0009c8 933a      	ST   -Y,R19
                 __SAVELOCR3:
0009c9 932a      	ST   -Y,R18
                 __SAVELOCR2:
0009ca 931a      	ST   -Y,R17
0009cb 930a      	ST   -Y,R16
0009cc 9508      	RET
                 
                 __LOADLOCR6:
0009cd 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0009ce 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0009cf 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0009d0 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0009d1 8119      	LDD  R17,Y+1
0009d2 8108      	LD   R16,Y
0009d3 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128A register use summary:
r0 :  30 r1 :   5 r2 :   0 r3 :   0 r4 :   5 r5 :   3 r6 :   6 r7 :   4 
r8 :   3 r9 :   1 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:  55 r17:  81 r18:  34 r19:  42 r20:  26 r21:  39 r22:  16 r23:   1 
r24:  20 r25:  11 r26: 262 r27:  92 r28:  24 r29:   1 r30: 703 r31: 161 
x  :  18 y  : 419 z  :  24 
Registers used: 27 out of 35 (77.1%)

ATmega128A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  17 add   :  25 
adiw  :  32 and   :   8 andi  :  20 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  38 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   5 brmi  :   0 brne  :  68 brpl  :   1 brsh  :  18 brtc  :   0 
brts  :   1 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  : 124 
cbi   :   5 cbr   :   0 clc   :   0 clh   :   0 cli   :   3 cln   :   0 
clr   :  26 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   9 
cp    :  28 cpc   :  21 cpi   :  78 cpse  :   0 dec   :   3 des   :   0 
elpm  :   0 eor   :   1 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 
ijmp  :   0 in    :   8 inc   :   3 jmp   :  58 ld    :  40 ldd   : 214 
ldi   : 240 lds   :  44 lpm   :  23 lsl   :   5 lsr   :  15 mov   :  84 
movw  :  41 mul   :   9 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 
or    :   6 ori   :  18 out   :  20 pop   :  12 push  :  12 rcall :  53 
ret   :  43 reti  :   1 rjmp  :  94 rol   :   3 ror   :   0 sbc   :   1 
sbci  :  11 sbi   :  10 sbic  :   1 sbis  :   1 sbiw  :  28 sbr   :   0 
sbrc  :   0 sbrs  :   0 sec   :   0 seh   :   0 sei   :   1 sen   :   0 
ser   :   0 ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    : 147 std   :  45 sts   :  44 sub   :   7 subi  :  34 
swap  :   0 tst   :   3 wdr   :   2 
Instructions used: 62 out of 117 (53.0%)

ATmega128A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0013a8   4372    660   5032  131072   3.8%
[.dseg] 0x000100 0x000784      0    644    644    4096  15.7%
[.eseg] 0x000000 0x000002      0      2      2    4096   0.0%

Assembly complete, 0 errors, 11 warnings
