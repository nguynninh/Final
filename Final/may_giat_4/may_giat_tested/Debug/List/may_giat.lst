
AVRASM ver. 2.1.30  D:\Private\CODE\Classsroom\Embedded\Final2\Final\may_giat_4\may_giat_tested\Debug\List\may_giat.asm Sat Dec 21 14:40:15 2024

D:\Private\CODE\Classsroom\Embedded\Final2\Final\may_giat_4\may_giat_tested\Debug\List\may_giat.asm(1090): warning: Register r4 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\may_giat_4\may_giat_tested\Debug\List\may_giat.asm(1091): warning: Register r5 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\may_giat_4\may_giat_tested\Debug\List\may_giat.asm(1092): warning: Register r7 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\may_giat_4\may_giat_tested\Debug\List\may_giat.asm(1093): warning: Register r8 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\may_giat_4\may_giat_tested\Debug\List\may_giat.asm(1094): warning: Register r9 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\may_giat_4\may_giat_tested\Debug\List\may_giat.asm(1095): warning: Register r6 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\may_giat_4\may_giat_tested\Debug\List\may_giat.asm(1096): warning: Register r11 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\may_giat_4\may_giat_tested\Debug\List\may_giat.asm(1097): warning: Register r10 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128A
                 ;Program type           : Application
                 ;Clock frequency        : 8,000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128A
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _curSpeed=R4
                 	.DEF _curSpeed_msb=R5
                 	.DEF _led=R7
                 	.DEF _counter=R8
                 	.DEF _counter_msb=R9
                 	.DEF __lcd_x=R6
                 	.DEF __lcd_y=R11
                 	.DEF __lcd_maxx=R10
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 016f 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 019f 	JMP  _timer1_ovf_isr
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _font5x7:
000046 0705
000047 6020
000048 0000
000049 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
00004a 0000
00004b 5f00
00004c 0000
00004d 0700      	.DB  0x0,0x0,0x0,0x5F,0x0,0x0,0x0,0x7
00004e 0700
00004f 1400
000050 147f
000051 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
000052 2a24
000053 2a7f
000054 2312
000055 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
000056 6264
000057 4936
000058 2255
000059 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
00005a 0305
00005b 0000
00005c 1c00
00005d 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
00005e 0000
00005f 2241
000060 001c
000061 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
000062 2a1c
000063 0808
000064 3e08
000065 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
000066 5000
000067 0030
000068 0800
000069 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
00006a 0808
00006b 3000
00006c 0030
00006d 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
00006e 0810
00006f 0204
000070 513e
000071 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
000072 003e
000073 7f42
000074 0040
000075 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
000076 4951
000077 2146
000078 4541
000079 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
00007a 1418
00007b 7f12
00007c 2710
00007d 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
00007e 3945
00007f 4a3c
000080 4949
000081 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
000082 0971
000083 0305
000084 4936
000085 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
000086 0636
000087 4949
000088 1e29
000089 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
00008a 0036
00008b 0000
00008c 3656
00008d 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
00008e 0800
00008f 2214
000090 1441
000091 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
000092 1414
000093 2241
000094 0814
000095 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
000096 5101
000097 0609
000098 4932
000099 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
00009a 7e3e
00009b 1111
00009c 7e11
00009d 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
00009e 4949
00009f 3e36
0000a0 4141
0000a1 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
0000a2 417f
0000a3 2241
0000a4 7f1c
0000a5 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
0000a6 4149
0000a7 097f
0000a8 0109
0000a9 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
0000aa 4141
0000ab 3251
0000ac 087f
0000ad 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
0000ae 007f
0000af 7f41
0000b0 0041
0000b1 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
0000b2 3f41
0000b3 7f01
0000b4 1408
0000b5 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
0000b6 407f
0000b7 4040
0000b8 7f40
0000b9 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
0000ba 7f02
0000bb 047f
0000bc 1008
0000bd 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
0000be 4141
0000bf 3e41
0000c0 097f
0000c1 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
0000c2 3e06
0000c3 5141
0000c4 5e21
0000c5 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
0000c6 2919
0000c7 4646
0000c8 4949
0000c9 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
0000ca 0101
0000cb 017f
0000cc 3f01
0000cd 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
0000ce 3f40
0000cf 201f
0000d0 2040
0000d1 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
0000d2 1820
0000d3 7f20
0000d4 1463
0000d5 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000d6 0363
0000d7 7804
0000d8 0304
0000d9 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000da 4549
0000db 0043
0000dc 7f00
0000dd 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000de 0402
0000df 1008
0000e0 4120
0000e1 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000e2 0000
0000e3 0204
0000e4 0201
0000e5 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000e6 4040
0000e7 4040
0000e8 0100
0000e9 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000ea 2000
0000eb 5454
0000ec 7854
0000ed 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000ee 4444
0000ef 3838
0000f0 4444
0000f1 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000f2 4438
0000f3 4844
0000f4 387f
0000f5 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000f6 1854
0000f7 7e08
0000f8 0109
0000f9 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000fa 5414
0000fb 3c54
0000fc 087f
0000fd 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000fe 0078
0000ff 7d44
000100 0040
000101 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
000102 3d44
000103 0000
000104 107f
000105 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
000106 4100
000107 407f
000108 7c00
000109 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
00010a 7804
00010b 087c
00010c 0404
00010d 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
00010e 4444
00010f 3844
000110 147c
000111 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
000112 0808
000113 1414
000114 7c18
000115 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
000116 0404
000117 4808
000118 5454
000119 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
00011a 3f04
00011b 4044
00011c 3c20
00011d 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
00011e 7c20
00011f 201c
000120 2040
000121 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
000122 3040
000123 3c40
000124 2844
000125 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
000126 0c44
000127 5050
000128 3c50
000129 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
00012a 4c54
00012b 0044
00012c 3608
00012d 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
00012e 0000
00012f 007f
000130 0000
000131 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
000132 0008
000133 0102
000134 0402
000135 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
000136 4141
000137 7f41      	.DB  0x41,0x41,0x41,0x7F
                 __glcd_mask:
000138 0100
000139 0703
00013a 1f0f
00013b 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
D:\Private\CODE\Classsroom\Embedded\Final2\Final\may_giat_4\may_giat_tested\Debug\List\may_giat.asm(1206): warning: .cseg .db misalignment - padding zero byte
00013c 00ff      	.DB  0xFF
                 _tbl10_G103:
00013d 2710
00013e 03e8
00013f 0064
000140 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000141 0001      	.DB  0x1,0x0
                 _tbl16_G103:
000142 1000
000143 0100
000144 0010
000145 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000146 0000
000147 0000      	.DB  0x0,0x0,0x0,0x0
000148 0000      	.DB  0x0,0x0
                 
                 _0x0:
000149 6144
00014a 676e
00014b 6720
00014c 6169      	.DB  0x44,0x61,0x6E,0x67,0x20,0x67,0x69,0x61
00014d 0074
00014e 6f54
00014f 2063
000150 6f64      	.DB  0x74,0x0,0x54,0x6F,0x63,0x20,0x64,0x6F
000151 203a
000152 6425
000153 4d00
000154 7961      	.DB  0x3A,0x20,0x25,0x64,0x0,0x4D,0x61,0x79
000155 6720
000156 6169
000157 0074      	.DB  0x20,0x67,0x69,0x61,0x74,0x0
                 _0x2080003:
000158 c080      	.DB  0x80,0xC0
                 _0x2120060:
D:\Private\CODE\Classsroom\Embedded\Final2\Final\may_giat_4\may_giat_tested\Debug\List\may_giat.asm(1226): warning: .cseg .db misalignment - padding zero byte
000159 0001      	.DB  0x1
                 _0x2120000:
00015a 4e2d
00015b 4e41
00015c 4900
00015d 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\Private\CODE\Classsroom\Embedded\Final2\Final\may_giat_4\may_giat_tested\Debug\List\may_giat.asm(1229): warning: .cseg .db misalignment - padding zero byte
00015e 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00015f 0006      	.DW  0x06
000160 0004      	.DW  0x04
000161 028c      	.DW  __REG_VARS*2
                 
000162 000a      	.DW  0x0A
000163 0500      	.DW  _0x24
000164 0292      	.DW  _0x0*2
                 
000165 0009      	.DW  0x09
000166 050a      	.DW  _0x39
000167 02a7      	.DW  _0x0*2+21
                 
000168 0002      	.DW  0x02
000169 073a      	.DW  __base_y_G104
00016a 02b0      	.DW  _0x2080003*2
                 
00016b 0001      	.DW  0x01
00016c 073e      	.DW  __seed_G109
00016d 02b2      	.DW  _0x2120060*2
                 
                 _0xFFFFFFFF:
00016e 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00016f 94f8      	CLI
000170 27ee      	CLR  R30
000171 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000172 e0f1      	LDI  R31,1
000173 bff5      	OUT  MCUCR,R31
000174 bfe5      	OUT  MCUCR,R30
000175 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
000177 e08d      	LDI  R24,(14-2)+1
000178 e0a2      	LDI  R26,2
000179 27bb      	CLR  R27
                 __CLEAR_REG:
00017a 93ed      	ST   X+,R30
00017b 958a      	DEC  R24
00017c f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00017d e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00017e e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00017f e0a0      	LDI  R26,LOW(__SRAM_START)
000180 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000181 93ed      	ST   X+,R30
000182 9701      	SBIW R24,1
000183 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000184 ebee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000185 e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000186 9185      	LPM  R24,Z+
000187 9195      	LPM  R25,Z+
000188 9700      	SBIW R24,0
000189 f061      	BREQ __GLOBAL_INI_END
00018a 91a5      	LPM  R26,Z+
00018b 91b5      	LPM  R27,Z+
00018c 9005      	LPM  R0,Z+
00018d 9015      	LPM  R1,Z+
00018e 01bf      	MOVW R22,R30
00018f 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000190 9005      	LPM  R0,Z+
000191 920d      	ST   X+,R0
000192 9701      	SBIW R24,1
000193 f7e1      	BRNE __GLOBAL_INI_LOOP
000194 01fb      	MOVW R30,R22
000195 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
000196 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000197 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000198 bfed      	OUT  SPL,R30
000199 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00019a bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00019b e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00019c e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00019d 940c 0262 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;/*
                 ; * may_giat.c
                 ; *
                 ; * Created: 12/28/2022 2:23:27 AM
                 ; * Author: Who
                 ; */
                 ;
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <glcd.h>
                 ;#include <font5x7.h>
                 ;#include <stdio.h>
                 ;#include  <alcd.h>
                 ;int curSpeed = 0;
                 ;bool led = false;
                 ;int counter = 0;
                 ;char speedText[16];
                 ;// Interrupt c?a timer1
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
                 ; 0000 0014 {
                 
                 	.CSEG
                 _timer1_ovf_isr:
                 ; .FSTART _timer1_ovf_isr
00019f 920a      	ST   -Y,R0
0001a0 93ea      	ST   -Y,R30
0001a1 93fa      	ST   -Y,R31
0001a2 b7ef      	IN   R30,SREG
0001a3 93ea      	ST   -Y,R30
                 ; 0000 0015     // Reinitialize Timer1 value
                 ; 0000 0016     TCNT1H = 0xE0C0 >> 8;
0001a4 eee0      	LDI  R30,LOW(224)
0001a5 bded      	OUT  0x2D,R30
                 ; 0000 0017     TCNT1L = 0xE0C0 & 0xff;
0001a6 ece0      	LDI  R30,LOW(192)
0001a7 bdec      	OUT  0x2C,R30
                 ; 0000 0018 
                 ; 0000 0019     // ?i?u khi?n LED nh?p nh?y
                 ; 0000 001A     if (led) {
0001a8 2077      	TST  R7
0001a9 f0b1      	BREQ _0x3
                 ; 0000 001B         if (counter == 2000)
0001aa ede0      	LDI  R30,LOW(2000)
0001ab e0f7      	LDI  R31,HIGH(2000)
0001ac 15e8      	CP   R30,R8
0001ad 05f9      	CPC  R31,R9
0001ae f411      	BRNE _0x4
                 ; 0000 001C             counter = 0;
0001af 2488      	CLR  R8
0001b0 2499      	CLR  R9
                 ; 0000 001D 
                 ; 0000 001E         if (counter == 0) {
                 _0x4:
0001b1 2c08      	MOV  R0,R8
0001b2 2809      	OR   R0,R9
0001b3 f411      	BRNE _0x5
                 ; 0000 001F             PORTD.4 = 0;
0001b4 9894      	CBI  0x12,4
                 ; 0000 0020             PORTD.5 = 1;
0001b5 9a95      	SBI  0x12,5
                 ; 0000 0021         }
                 ; 0000 0022 
                 ; 0000 0023         if (counter == 1000) {
                 _0x5:
0001b6 eee8      	LDI  R30,LOW(1000)
0001b7 e0f3      	LDI  R31,HIGH(1000)
0001b8 15e8      	CP   R30,R8
0001b9 05f9      	CPC  R31,R9
0001ba f411      	BRNE _0xA
                 ; 0000 0024             PORTD.5 = 0;
0001bb 9895      	CBI  0x12,5
                 ; 0000 0025             PORTD.4 = 1;
0001bc 9a94      	SBI  0x12,4
                 ; 0000 0026         }
                 ; 0000 0027         counter++;
                 _0xA:
0001bd 01f4      	MOVW R30,R8
0001be 9631      	ADIW R30,1
0001bf 014f      	MOVW R8,R30
                 ; 0000 0028     }
                 ; 0000 0029 }
                 _0x3:
0001c0 91e9      	LD   R30,Y+
0001c1 bfef      	OUT  SREG,R30
0001c2 91f9      	LD   R31,Y+
0001c3 91e9      	LD   R30,Y+
0001c4 9009      	LD   R0,Y+
0001c5 9518      	RETI
                 ; .FEND
                 ;
                 ;// H?m di?u ch?nh t?c d? d?ng co
                 ;void adjustSpeed(int speed) {
                 ; 0000 002C void adjustSpeed(int speed) {
                 _adjustSpeed:
                 ; .FSTART _adjustSpeed
                 ; 0000 002D     OCR0 = 255 - speed;
0001c6 93ba      	ST   -Y,R27
0001c7 93aa      	ST   -Y,R26
                 ;	speed -> Y+0
0001c8 81a8      	LD   R26,Y
0001c9 efef      	LDI  R30,LOW(255)
0001ca 1bea      	SUB  R30,R26
0001cb bfe1      	OUT  0x31,R30
                 ; 0000 002E }
0001cc c150      	RJMP _0x214000C
                 ; .FEND
                 ;
                 ;// H?m c?p nh?t t?c d? d?ng co
                 ;void speedUpdater(int option) {
                 ; 0000 0031 void speedUpdater(int option) {
                 _speedUpdater:
                 ; .FSTART _speedUpdater
                 ; 0000 0032     int newSpeed;
                 ; 0000 0033     if (curSpeed == 0) {
0001cd 93ba      	ST   -Y,R27
0001ce 93aa      	ST   -Y,R26
0001cf 931a      	ST   -Y,R17
0001d0 930a      	ST   -Y,R16
                 ;	option -> Y+2
                 ;	newSpeed -> R16,R17
0001d1 2c04      	MOV  R0,R4
0001d2 2805      	OR   R0,R5
0001d3 f421      	BRNE _0xF
                 ; 0000 0034         curSpeed = 63;
0001d4 e3ef      	LDI  R30,LOW(63)
0001d5 e0f0      	LDI  R31,HIGH(63)
0001d6 012f      	MOVW R4,R30
                 ; 0000 0035     } else {
0001d7 c01f      	RJMP _0x10
                 _0xF:
                 ; 0000 0036         if (option == 20)
0001d8 81aa      	LDD  R26,Y+2
0001d9 81bb      	LDD  R27,Y+2+1
0001da 9754      	SBIW R26,20
0001db f441      	BRNE _0x11
                 ; 0000 0037             newSpeed = curSpeed + curSpeed / 5;
0001dc 01d2      	MOVW R26,R4
0001dd e0e5      	LDI  R30,LOW(5)
0001de e0f0      	LDI  R31,HIGH(5)
0001df 940e 0b23 	CALL __DIVW21
0001e1 0de4      	ADD  R30,R4
0001e2 1df5      	ADC  R31,R5
0001e3 c009      	RJMP _0x40
                 ; 0000 0038         else if (option == 100)
                 _0x11:
0001e4 81aa      	LDD  R26,Y+2
0001e5 81bb      	LDD  R27,Y+2+1
0001e6 36a4      	CPI  R26,LOW(0x64)
0001e7 e0e0      	LDI  R30,HIGH(0x64)
0001e8 07be      	CPC  R27,R30
0001e9 f421      	BRNE _0x13
                 ; 0000 0039             newSpeed = curSpeed * 2;
0001ea 01f2      	MOVW R30,R4
0001eb 0fee      	LSL  R30
0001ec 1fff      	ROL  R31
                 _0x40:
0001ed 018f      	MOVW R16,R30
                 ; 0000 003A 
                 ; 0000 003B         if (newSpeed > 255)
                 _0x13:
                +
0001ee 3000     +CPI R16 , LOW ( 256 )
0001ef e0e1     +LDI R30 , HIGH ( 256 )
0001f0 071e     +CPC R17 , R30
                 	__CPWRN 16,17,256
0001f1 f024      	BRLT _0x14
                 ; 0000 003C             curSpeed = 255;
0001f2 efef      	LDI  R30,LOW(255)
0001f3 e0f0      	LDI  R31,HIGH(255)
0001f4 012f      	MOVW R4,R30
                 ; 0000 003D         else
0001f5 c001      	RJMP _0x15
                 _0x14:
                 ; 0000 003E             curSpeed = newSpeed;
0001f6 0128      	MOVW R4,R16
                 ; 0000 003F     }
                 _0x15:
                 _0x10:
                 ; 0000 0040     adjustSpeed(curSpeed);
0001f7 01d2      	MOVW R26,R4
0001f8 dfcd      	RCALL _adjustSpeed
                 ; 0000 0041 }
0001f9 8119      	LDD  R17,Y+1
0001fa 8108      	LDD  R16,Y+0
0001fb c1ed      	RJMP _0x214000A
                 ; .FEND
                 ;
                 ;// H?m x? l? ch? d? v?t
                 ;void vat() {
                 ; 0000 0044 void vat() {
                 _vat:
                 ; .FSTART _vat
                 ; 0000 0045     int second = -1;
                 ; 0000 0046 
                 ; 0000 0047     // B?t role 2 trong 2 gi?y
                 ; 0000 0048     PORTC.2 = 1;
0001fc 931a      	ST   -Y,R17
0001fd 930a      	ST   -Y,R16
                 ;	second -> R16,R17
                +
0001fe ef0f     +LDI R16 , LOW ( - 1 )
0001ff ef1f     +LDI R17 , HIGH ( - 1 )
                 	__GETWRN 16,17,-1
000200 9aaa      	SBI  0x15,2
                 ; 0000 0049     delay_ms(2000);
000201 eda0      	LDI  R26,LOW(2000)
000202 e0b7      	LDI  R27,HIGH(2000)
000203 940e 0ae1 	CALL _delay_ms
                 ; 0000 004A     PORTC.2 = 0;
000205 98aa      	CBI  0x15,2
                 ; 0000 004B 
                 ; 0000 004C     // Quay d?ng co trong 3 gi?y
                 ; 0000 004D     while (second != 3) {
                 _0x1A:
000206 e0e3      	LDI  R30,LOW(3)
000207 e0f0      	LDI  R31,HIGH(3)
000208 17e0      	CP   R30,R16
000209 07f1      	CPC  R31,R17
00020a f031      	BREQ _0x1C
                 ; 0000 004E         speedUpdater(100);
00020b e6a4      	LDI  R26,LOW(100)
00020c e0b0      	LDI  R27,0
00020d dfbf      	RCALL _speedUpdater
                 ; 0000 004F         second++;
00020e 940e 0a1e 	CALL SUBOPT_0x0
                 ; 0000 0050         delay_ms(1000);
                 ; 0000 0051     }
000210 cff5      	RJMP _0x1A
                 _0x1C:
                 ; 0000 0052 
                 ; 0000 0053     curSpeed = 0;
000211 2444      	CLR  R4
000212 2455      	CLR  R5
                 ; 0000 0054     adjustSpeed(0);
000213 e0a0      	LDI  R26,LOW(0)
000214 e0b0      	LDI  R27,0
000215 dfb0      	RCALL _adjustSpeed
                 ; 0000 0055     led = true;
000216 e0e1      	LDI  R30,LOW(1)
000217 2e7e      	MOV  R7,R30
                 ; 0000 0056 }
000218 c046      	RJMP _0x214000D
                 ; .FEND
                 ;
                 ;// H?m x? l? ch? d? gi?t
                 ;void giat() {
                 ; 0000 0059 void giat() {
                 _giat:
                 ; .FSTART _giat
                 ; 0000 005A     int second = -1;
                 ; 0000 005B 
                 ; 0000 005C     // B?t role 1 trong 2 gi?y
                 ; 0000 005D     PORTC.3 = 1;
000219 931a      	ST   -Y,R17
00021a 930a      	ST   -Y,R16
                 ;	second -> R16,R17
                +
00021b ef0f     +LDI R16 , LOW ( - 1 )
00021c ef1f     +LDI R17 , HIGH ( - 1 )
                 	__GETWRN 16,17,-1
00021d 9aab      	SBI  0x15,3
                 ; 0000 005E     delay_ms(2000);
00021e eda0      	LDI  R26,LOW(2000)
00021f e0b7      	LDI  R27,HIGH(2000)
000220 940e 0ae1 	CALL _delay_ms
                 ; 0000 005F     PORTC.3 = 0;
000222 98ab      	CBI  0x15,3
                 ; 0000 0060 
                 ; 0000 0061     // Quay d?ng co trong 10 gi?y
                 ; 0000 0062     while (second != 10) {
                 _0x21:
000223 e0ea      	LDI  R30,LOW(10)
000224 e0f0      	LDI  R31,HIGH(10)
000225 17e0      	CP   R30,R16
000226 07f1      	CPC  R31,R17
000227 f1b9      	BREQ _0x23
                 ; 0000 0063         lcd_clear();
000228 940e 0915 	CALL _lcd_clear
                 ; 0000 0064         lcd_putsf("Dang giat");
                +
00022a e9a2     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
00022b e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW2FN _0x0,0
00022c 940e 0942 	CALL _lcd_putsf
                 ; 0000 0065         glcd_clear();
00022e d19e      	RCALL _glcd_clear
                 ; 0000 0066         glcd_outtextxy(10, 30, "Dang giat");
00022f e0ea      	LDI  R30,LOW(10)
000230 93ea      	ST   -Y,R30
000231 e1ee      	LDI  R30,LOW(30)
000232 93ea      	ST   -Y,R30
                +
000233 e0a0     +LDI R26 , LOW ( _0x24 + ( 0 ) )
000234 e0b5     +LDI R27 , HIGH ( _0x24 + ( 0 ) )
                 	__POINTW2MN _0x24,0
000235 940e 0712 	CALL _glcd_outtextxy
                 ; 0000 0067         lcd_gotoxy(0,1);
000237 e0e0      	LDI  R30,LOW(0)
000238 93ea      	ST   -Y,R30
000239 e0a1      	LDI  R26,LOW(1)
00023a 940e 0908 	CALL _lcd_gotoxy
                 ; 0000 0068         speedUpdater(20);
00023c e1a4      	LDI  R26,LOW(20)
00023d e0b0      	LDI  R27,0
00023e df8e      	RCALL _speedUpdater
                 ; 0000 0069 
                 ; 0000 006A         // Hi?n th? t?c d? hi?n t?i l?n GLCD
                 ; 0000 006B 
                 ; 0000 006C         sprintf(speedText, "Toc do: %d", curSpeed);
00023f e3e0      	LDI  R30,LOW(_speedText)
000240 e0f5      	LDI  R31,HIGH(_speedText)
000241 93fa      	ST   -Y,R31
000242 93ea      	ST   -Y,R30
                +
000243 e9ec     +LDI R30 , LOW ( 2 * _0x0 + ( 10 ) )
000244 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 10 ) )
                 	__POINTW1FN _0x0,10
000245 93fa      	ST   -Y,R31
000246 93ea      	ST   -Y,R30
000247 01f2      	MOVW R30,R4
000248 940e 0b03 	CALL __CWD1
00024a 940e 0b3e 	CALL __PUTPARD1
00024c e084      	LDI  R24,4
00024d 940e 08a3 	CALL _sprintf
00024f 9628      	ADIW R28,8
                 ; 0000 006D         glcd_outtextxy(10, 40, speedText);
000250 e0ea      	LDI  R30,LOW(10)
000251 93ea      	ST   -Y,R30
000252 e2e8      	LDI  R30,LOW(40)
000253 93ea      	ST   -Y,R30
000254 e3a0      	LDI  R26,LOW(_speedText)
000255 e0b5      	LDI  R27,HIGH(_speedText)
000256 940e 0712 	CALL _glcd_outtextxy
                 ; 0000 006E 
                 ; 0000 006F         lcd_puts(speedText);
000258 e3a0      	LDI  R26,LOW(_speedText)
000259 e0b5      	LDI  R27,HIGH(_speedText)
00025a 940e 0936 	CALL _lcd_puts
                 ; 0000 0070 
                 ; 0000 0071         second++;
00025c 940e 0a1e 	CALL SUBOPT_0x0
                 ; 0000 0072         delay_ms(1000);
                 ; 0000 0073     }
00025e cfc4      	RJMP _0x21
                 _0x23:
                 ; 0000 0074 
                 ; 0000 0075 
                 ; 0000 0076 }
                 _0x214000D:
00025f 9109      	LD   R16,Y+
000260 9119      	LD   R17,Y+
000261 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x24:
000500           	.BYTE 0xA
                 ;
                 ;void main(void)
                 ; 0000 0079 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 007A     // Kh?i t?o GLCD
                 ; 0000 007B     GLCDINIT_t glcd_init_data;
                 ; 0000 007C     glcd_init_data.font = font5x7;
000262 9728      	SBIW R28,8
                 ;	glcd_init_data -> Y+0
000263 e8ec      	LDI  R30,LOW(_font5x7*2)
000264 e0f0      	LDI  R31,HIGH(_font5x7*2)
000265 83e8      	ST   Y,R30
000266 83f9      	STD  Y+1,R31
                 ; 0000 007D     glcd_init_data.temp_coef = 140;
000267 81ee      	LDD  R30,Y+6
000268 7fec      	ANDI R30,LOW(0xFC)
000269 83ee      	STD  Y+6,R30
                 ; 0000 007E     glcd_init_data.bias = 4;
00026a 7ee3      	ANDI R30,LOW(0xE3)
00026b 61e0      	ORI  R30,0x10
00026c 83ee      	STD  Y+6,R30
                 ; 0000 007F     glcd_init_data.vlcd = 66;
00026d 81ef      	LDD  R30,Y+7
00026e 78e0      	ANDI R30,LOW(0x80)
00026f 64e2      	ORI  R30,LOW(0x42)
000270 83ef      	STD  Y+7,R30
                 ; 0000 0080     glcd_init(&glcd_init_data);
000271 01de      	MOVW R26,R28
000272 d0b3      	RCALL _glcd_init
                 ; 0000 0081     lcd_init(16);
000273 e1a0      	LDI  R26,LOW(16)
000274 940e 0955 	CALL _lcd_init
                 ; 0000 0082 
                 ; 0000 0083     // K?o l?n BT1
                 ; 0000 0084     DDRB.2 = 0;
000276 98ba      	CBI  0x17,2
                 ; 0000 0085     PORTB.2 = 1;
000277 9ac2      	SBI  0x18,2
                 ; 0000 0086 
                 ; 0000 0087     // K?o l?n BT2
                 ; 0000 0088     DDRB.3 = 0;
000278 98bb      	CBI  0x17,3
                 ; 0000 0089     PORTB.3 = 1;
000279 9ac3      	SBI  0x18,3
                 ; 0000 008A 
                 ; 0000 008B     // Role 1 v? 2
                 ; 0000 008C     DDRC.3 = 1;
00027a 9aa3      	SBI  0x14,3
                 ; 0000 008D     DDRC.2 = 1;
00027b 9aa2      	SBI  0x14,2
                 ; 0000 008E 
                 ; 0000 008F     // LED
                 ; 0000 0090     DDRD.5 = 1;
00027c 9a8d      	SBI  0x11,5
                 ; 0000 0091     DDRD.4 = 1;
00027d 9a8c      	SBI  0x11,4
                 ; 0000 0092 
                 ; 0000 0093     // Kh?i t?o d?ng co v? timer
                 ; 0000 0094     DDRB.4 = 1;
00027e 9abc      	SBI  0x17,4
                 ; 0000 0095     DDRD.7 = 1;
00027f 9a8f      	SBI  0x11,7
                 ; 0000 0096     ASSR = 0 << AS0;
000280 e0e0      	LDI  R30,LOW(0)
000281 bfe0      	OUT  0x30,R30
                 ; 0000 0097     TCCR0 = (1 << WGM00) | (1 << COM01) | (1 << COM00) | (0 << WGM01) | (1 << CS02) | (0 << CS01) | (0 << CS00);
000282 e7e4      	LDI  R30,LOW(116)
000283 bfe3      	OUT  0x33,R30
                 ; 0000 0098     TCNT0 = 0x00;
000284 e0e0      	LDI  R30,LOW(0)
000285 bfe2      	OUT  0x32,R30
                 ; 0000 0099     adjustSpeed(255);
000286 efaf      	LDI  R26,LOW(255)
000287 e0b0      	LDI  R27,0
000288 df3d      	RCALL _adjustSpeed
                 ; 0000 009A     TCCR1A = (0 << COM1A1) | (0 << COM1A0) | (0 << COM1B1) | (0 << COM1B0) | (0 << COM1C1) | (0 << COM1C0) | (0 << WGM11 ...
000289 e0e0      	LDI  R30,LOW(0)
00028a bdef      	OUT  0x2F,R30
                 ; 0000 009B     TCCR1B = (0 << ICNC1) | (0 << ICES1) | (0 << WGM13) | (0 << WGM12) | (0 << CS12) | (0 << CS11) | (1 << CS10);
00028b e0e1      	LDI  R30,LOW(1)
00028c bdee      	OUT  0x2E,R30
                 ; 0000 009C     TCNT1H = 0xE0;
00028d eee0      	LDI  R30,LOW(224)
00028e bded      	OUT  0x2D,R30
                 ; 0000 009D     TCNT1L = 0xC0;
00028f ece0      	LDI  R30,LOW(192)
000290 bdec      	OUT  0x2C,R30
                 ; 0000 009E 
                 ; 0000 009F     // Kh?i t?o ng?t cho timer1
                 ; 0000 00A0     TIMSK = (0 << OCIE2) | (0 << TOIE2) | (0 << TICIE1) | (0 << OCIE1A) | (0 << OCIE1B) | (1 << TOIE1) | (0 << OCIE0) |  ...
000291 e0e4      	LDI  R30,LOW(4)
000292 bfe7      	OUT  0x37,R30
                 ; 0000 00A1     ETIMSK = (0 << TICIE3) | (0 << OCIE3A) | (0 << OCIE3B) | (0 << TOIE3) | (0 << OCIE3C) | (0 << OCIE1C);
000293 e0e0      	LDI  R30,LOW(0)
000294 93e0 007d 	STS  125,R30
                 ; 0000 00A2     #asm("sei")
000296 9478      	sei
                 ; 0000 00A3 
                 ; 0000 00A4     // Hi?n th? menu ban d?u
                 ; 0000 00A5   //  glcd_outtextxy(10, 10, "MAY GIAT");
                 ; 0000 00A6     //glcd_outtextxy(10, 20, "BT1. GIAT");
                 ; 0000 00A7     glcd_outtextxy(10, 30, "May giat");
000297 e0ea      	LDI  R30,LOW(10)
000298 93ea      	ST   -Y,R30
000299 e1ee      	LDI  R30,LOW(30)
00029a 93ea      	ST   -Y,R30
                +
00029b e0aa     +LDI R26 , LOW ( _0x39 + ( 0 ) )
00029c e0b5     +LDI R27 , HIGH ( _0x39 + ( 0 ) )
                 	__POINTW2MN _0x39,0
00029d 940e 0712 	CALL _glcd_outtextxy
                 ; 0000 00A8     lcd_putsf("May giat");
                +
00029f eaa7     +LDI R26 , LOW ( 2 * _0x0 + ( 21 ) )
0002a0 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 21 ) )
                 	__POINTW2FN _0x0,21
0002a1 940e 0942 	CALL _lcd_putsf
                 ; 0000 00A9 
                 ; 0000 00AA     while (1)
                 _0x3A:
                 ; 0000 00AB     {
                 ; 0000 00AC         if (PINB.3 == 0)
0002a3 9bb3      	SBIS 0x16,3
                 ; 0000 00AD             giat();
0002a4 df74      	RCALL _giat
                 ; 0000 00AE         if (PINB.2 == 0)
0002a5 9bb2      	SBIS 0x16,2
                 ; 0000 00AF             vat();
0002a6 df55      	RCALL _vat
                 ; 0000 00B0         delay_ms(250);
0002a7 efaa      	LDI  R26,LOW(250)
0002a8 e0b0      	LDI  R27,0
0002a9 940e 0ae1 	CALL _delay_ms
                 ; 0000 00B1     }
0002ab cff7      	RJMP _0x3A
                 ; 0000 00B2 }
                 _0x3F:
0002ac cfff      	RJMP _0x3F
                 ; .FEND
                 
                 	.DSEG
                 _0x39:
00050a           	.BYTE 0x9
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _pcd8544_delay_G100:
                 ; .FSTART _pcd8544_delay_G100
0002ad 9508      	RET
                 ; .FEND
                 _pcd8544_wrbus_G100:
                 ; .FSTART _pcd8544_wrbus_G100
0002ae 93aa      	ST   -Y,R26
0002af 931a      	ST   -Y,R17
0002b0 91e0 0065 	LDS  R30,101
0002b2 7eef      	ANDI R30,0xEF
0002b3 93e0 0065 	STS  101,R30
0002b5 e018      	LDI  R17,LOW(8)
                 _0x2000004:
0002b6 dff6      	RCALL _pcd8544_delay_G100
0002b7 81e9      	LDD  R30,Y+1
0002b8 78e0      	ANDI R30,LOW(0x80)
0002b9 f021      	BREQ _0x2000006
0002ba 91e0 0065 	LDS  R30,101
0002bc 60e2      	ORI  R30,2
0002bd c003      	RJMP _0x20000A0
                 _0x2000006:
0002be 91e0 0065 	LDS  R30,101
0002c0 7fed      	ANDI R30,0xFD
                 _0x20000A0:
0002c1 93e0 0065 	STS  101,R30
0002c3 81e9      	LDD  R30,Y+1
0002c4 0fee      	LSL  R30
0002c5 83e9      	STD  Y+1,R30
0002c6 dfe6      	RCALL _pcd8544_delay_G100
0002c7 91e0 0065 	LDS  R30,101
0002c9 60e4      	ORI  R30,4
0002ca 93e0 0065 	STS  101,R30
0002cc dfe0      	RCALL _pcd8544_delay_G100
0002cd 91e0 0065 	LDS  R30,101
0002cf 7feb      	ANDI R30,0xFB
0002d0 93e0 0065 	STS  101,R30
0002d2 5011      	SUBI R17,LOW(1)
0002d3 f711      	BRNE _0x2000004
0002d4 91e0 0065 	LDS  R30,101
0002d6 61e0      	ORI  R30,0x10
0002d7 93e0 0065 	STS  101,R30
0002d9 8118      	LDD  R17,Y+0
0002da c042      	RJMP _0x214000C
                 ; .FEND
                 _pcd8544_wrcmd:
                 ; .FSTART _pcd8544_wrcmd
0002db 93aa      	ST   -Y,R26
0002dc 91e0 0065 	LDS  R30,101
0002de 7fee      	ANDI R30,0xFE
0002df 93e0 0065 	STS  101,R30
0002e1 81a8      	LD   R26,Y
0002e2 dfcb      	RCALL _pcd8544_wrbus_G100
0002e3 c0e7      	RJMP _0x214000B
                 ; .FEND
                 _pcd8544_wrdata_G100:
                 ; .FSTART _pcd8544_wrdata_G100
0002e4 93aa      	ST   -Y,R26
0002e5 91e0 0065 	LDS  R30,101
0002e7 60e1      	ORI  R30,1
0002e8 93e0 0065 	STS  101,R30
0002ea 81a8      	LD   R26,Y
0002eb dfc2      	RCALL _pcd8544_wrbus_G100
0002ec c0de      	RJMP _0x214000B
                 ; .FEND
                 _pcd8544_setaddr_G100:
                 ; .FSTART _pcd8544_setaddr_G100
0002ed 93aa      	ST   -Y,R26
0002ee 931a      	ST   -Y,R17
0002ef 81e9      	LDD  R30,Y+1
0002f0 95e6      	LSR  R30
0002f1 95e6      	LSR  R30
0002f2 95e6      	LSR  R30
0002f3 2f1e      	MOV  R17,R30
0002f4 e5e4      	LDI  R30,LOW(84)
0002f5 9fe1      	MUL  R30,R17
0002f6 01f0      	MOVW R30,R0
0002f7 01df      	MOVW R26,R30
0002f8 81ea      	LDD  R30,Y+2
0002f9 e0f0      	LDI  R31,0
0002fa 0fea      	ADD  R30,R26
0002fb 1ffb      	ADC  R31,R27
0002fc 93e0 0540 	STS  _gfx_addr_G100,R30
0002fe 93f0 0541 	STS  _gfx_addr_G100+1,R31
000300 2fe1      	MOV  R30,R17
000301 8118      	LDD  R17,Y+0
000302 9623      	ADIW R28,3
000303 9508      	RET
                 ; .FEND
                 _pcd8544_gotoxy:
                 ; .FSTART _pcd8544_gotoxy
000304 93aa      	ST   -Y,R26
000305 81e9      	LDD  R30,Y+1
000306 68e0      	ORI  R30,0x80
000307 2fae      	MOV  R26,R30
000308 dfd2      	RCALL _pcd8544_wrcmd
000309 81e9      	LDD  R30,Y+1
00030a 93ea      	ST   -Y,R30
00030b 81a9      	LDD  R26,Y+1
00030c dfe0      	RCALL _pcd8544_setaddr_G100
00030d 64e0      	ORI  R30,0x40
00030e 2fae      	MOV  R26,R30
00030f dfcb      	RCALL _pcd8544_wrcmd
000310 c00c      	RJMP _0x214000C
                 ; .FEND
                 _pcd8544_rdbyte:
                 ; .FSTART _pcd8544_rdbyte
000311 93aa      	ST   -Y,R26
000312 81e9      	LDD  R30,Y+1
000313 93ea      	ST   -Y,R30
000314 81a9      	LDD  R26,Y+1
000315 dfee      	RCALL _pcd8544_gotoxy
000316 91e0 0540 	LDS  R30,_gfx_addr_G100
000318 91f0 0541 	LDS  R31,_gfx_addr_G100+1
00031a 5bee      	SUBI R30,LOW(-_gfx_buffer_G100)
00031b 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G100)
00031c 81e0      	LD   R30,Z
                 _0x214000C:
00031d 9622      	ADIW R28,2
00031e 9508      	RET
                 ; .FEND
                 _pcd8544_wrbyte:
                 ; .FSTART _pcd8544_wrbyte
00031f 93aa      	ST   -Y,R26
000320 940e 0a24 	CALL SUBOPT_0x1
000322 81a8      	LD   R26,Y
000323 83a0      	STD  Z+0,R26
000324 dfbf      	RCALL _pcd8544_wrdata_G100
000325 c0a5      	RJMP _0x214000B
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
000326 93ba      	ST   -Y,R27
000327 93aa      	ST   -Y,R26
000328 940e 0b66 	CALL __SAVELOCR4
00032a 91e0 0064 	LDS  R30,100
00032c 61e0      	ORI  R30,0x10
00032d 940e 0a2f 	CALL SUBOPT_0x2
00032f 61e0      	ORI  R30,0x10
000330 93e0 0065 	STS  101,R30
000332 91e0 0064 	LDS  R30,100
000334 60e4      	ORI  R30,4
000335 940e 0a2f 	CALL SUBOPT_0x2
000337 7feb      	ANDI R30,0xFB
000338 93e0 0065 	STS  101,R30
00033a 91e0 0064 	LDS  R30,100
00033c 60e2      	ORI  R30,2
00033d 93e0 0064 	STS  100,R30
00033f 91e0 0064 	LDS  R30,100
000341 60e1      	ORI  R30,1
000342 93e0 0064 	STS  100,R30
000344 91e0 0064 	LDS  R30,100
000346 60e8      	ORI  R30,8
000347 940e 0a2f 	CALL SUBOPT_0x2
000349 7fe7      	ANDI R30,0XF7
00034a 93e0 0065 	STS  101,R30
00034c e0aa      	LDI  R26,LOW(10)
00034d e0b0      	LDI  R27,0
00034e 940e 0ae1 	CALL _delay_ms
000350 91e0 0065 	LDS  R30,101
000352 60e8      	ORI  R30,8
000353 93e0 0065 	STS  101,R30
000355 81ec      	LDD  R30,Y+4
000356 81fd      	LDD  R31,Y+4+1
000357 9730      	SBIW R30,0
000358 f121      	BREQ _0x2000008
000359 81e6      	LDD  R30,Z+6
00035a 70e3      	ANDI R30,LOW(0x3)
00035b 2f1e      	MOV  R17,R30
00035c 81ec      	LDD  R30,Y+4
00035d 81fd      	LDD  R31,Y+4+1
00035e 81e6      	LDD  R30,Z+6
00035f 95e6      	LSR  R30
000360 95e6      	LSR  R30
000361 70e7      	ANDI R30,LOW(0x7)
000362 2f0e      	MOV  R16,R30
000363 81ec      	LDD  R30,Y+4
000364 81fd      	LDD  R31,Y+4+1
000365 81e7      	LDD  R30,Z+7
000366 77ef      	ANDI R30,0x7F
000367 2f3e      	MOV  R19,R30
000368 81ac      	LDD  R26,Y+4
000369 81bd      	LDD  R27,Y+4+1
00036a 940e 0b36 	CALL __GETW1P
                +
00036c 93e0 0517+STS _glcd_state + ( 4 ) , R30
00036e 93f0 0518+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
000370 9612      	ADIW R26,2
000371 940e 0b36 	CALL __GETW1P
                +
000373 93e0 052c+STS _glcd_state + ( 25 ) , R30
000375 93f0 052d+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
000377 81ac      	LDD  R26,Y+4
000378 81bd      	LDD  R27,Y+4+1
000379 9614      	ADIW R26,4
00037a 940e 0b36 	CALL __GETW1P
00037c c00d      	RJMP _0x20000A1
                 _0x2000008:
00037d e010      	LDI  R17,LOW(0)
00037e e003      	LDI  R16,LOW(3)
00037f e332      	LDI  R19,LOW(50)
000380 e0e0      	LDI  R30,LOW(0)
000381 e0f0      	LDI  R31,HIGH(0)
                +
000382 93e0 0517+STS _glcd_state + ( 4 ) , R30
000384 93f0 0518+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
                +
000386 93e0 052c+STS _glcd_state + ( 25 ) , R30
000388 93f0 052d+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
                 _0x20000A1:
                +
00038a 93e0 052e+STS _glcd_state + ( 27 ) , R30
00038c 93f0 052f+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
00038e e2a1      	LDI  R26,LOW(33)
00038f df4b      	RCALL _pcd8544_wrcmd
000390 2fe1      	MOV  R30,R17
000391 60e4      	ORI  R30,4
000392 2fae      	MOV  R26,R30
000393 df47      	RCALL _pcd8544_wrcmd
000394 2fe0      	MOV  R30,R16
000395 61e0      	ORI  R30,0x10
000396 2fae      	MOV  R26,R30
000397 df43      	RCALL _pcd8544_wrcmd
000398 2fe3      	MOV  R30,R19
000399 68e0      	ORI  R30,0x80
00039a 2fae      	MOV  R26,R30
00039b df3f      	RCALL _pcd8544_wrcmd
00039c e2a0      	LDI  R26,LOW(32)
00039d df3d      	RCALL _pcd8544_wrcmd
00039e e0a1      	LDI  R26,LOW(1)
00039f d022      	RCALL _glcd_display
0003a0 e0e1      	LDI  R30,LOW(1)
0003a1 93e0 0513 	STS  _glcd_state,R30
0003a3 e0e0      	LDI  R30,LOW(0)
                +
0003a4 93e0 0514+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
0003a6 e0e1      	LDI  R30,LOW(1)
                +
0003a7 93e0 0519+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
0003a9 93e0 051a+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
0003ab 93e0 051b+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
0003ad efef      	LDI  R30,LOW(255)
                +
0003ae 93e0 051c+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
0003b0 e0e1      	LDI  R30,LOW(1)
                +
0003b1 93e0 0523+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
0003b3 e2e4     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
0003b4 e0f5     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
0003b5 93fa      	ST   -Y,R31
0003b6 93ea      	ST   -Y,R30
0003b7 efef      	LDI  R30,LOW(255)
0003b8 93ea      	ST   -Y,R30
0003b9 e0a8      	LDI  R26,LOW(8)
0003ba e0b0      	LDI  R27,0
0003bb 940e 0984 	CALL _memset
0003bd d00f      	RCALL _glcd_clear
0003be e0e1      	LDI  R30,LOW(1)
0003bf 940e 0b6d 	CALL __LOADLOCR4
0003c1 c060      	RJMP _0x2140009
                 ; .FEND
                 _glcd_display:
                 ; .FSTART _glcd_display
0003c2 93aa      	ST   -Y,R26
0003c3 81e8      	LD   R30,Y
0003c4 30e0      	CPI  R30,0
0003c5 f011      	BREQ _0x200000A
0003c6 e0ec      	LDI  R30,LOW(12)
0003c7 c001      	RJMP _0x200000B
                 _0x200000A:
0003c8 e0e8      	LDI  R30,LOW(8)
                 _0x200000B:
0003c9 2fae      	MOV  R26,R30
0003ca df10      	RCALL _pcd8544_wrcmd
                 _0x214000B:
0003cb 9621      	ADIW R28,1
0003cc 9508      	RET
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
0003cd 940e 0b66 	CALL __SAVELOCR4
0003cf e030      	LDI  R19,0
                +
0003d0 91e0 0514+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
0003d2 30e0      	CPI  R30,0
0003d3 f009      	BREQ _0x200000D
0003d4 ef3f      	LDI  R19,LOW(255)
                 _0x200000D:
0003d5 e0e0      	LDI  R30,LOW(0)
0003d6 93ea      	ST   -Y,R30
0003d7 e0a0      	LDI  R26,LOW(0)
0003d8 df2b      	RCALL _pcd8544_gotoxy
                +
0003d9 ef08     +LDI R16 , LOW ( 504 )
0003da e011     +LDI R17 , HIGH ( 504 )
                 	__GETWRN 16,17,504
                 _0x200000E:
0003db 01f8      	MOVW R30,R16
                +
0003dc 5001     +SUBI R16 , LOW ( 1 )
0003dd 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
0003de 9730      	SBIW R30,0
0003df f019      	BREQ _0x2000010
0003e0 2fa3      	MOV  R26,R19
0003e1 df3d      	RCALL _pcd8544_wrbyte
0003e2 cff8      	RJMP _0x200000E
                 _0x2000010:
0003e3 e0e0      	LDI  R30,LOW(0)
0003e4 93ea      	ST   -Y,R30
0003e5 e0a0      	LDI  R26,LOW(0)
0003e6 d33b      	RCALL _glcd_moveto
0003e7 940e 0b6d 	CALL __LOADLOCR4
                 _0x214000A:
0003e9 9624      	ADIW R28,4
0003ea 9508      	RET
                 ; .FEND
                 _pcd8544_wrmasked_G100:
                 ; .FSTART _pcd8544_wrmasked_G100
0003eb 93aa      	ST   -Y,R26
0003ec 931a      	ST   -Y,R17
0003ed 81ed      	LDD  R30,Y+5
0003ee 93ea      	ST   -Y,R30
0003ef 81ad      	LDD  R26,Y+5
0003f0 df20      	RCALL _pcd8544_rdbyte
0003f1 2f1e      	MOV  R17,R30
0003f2 81e9      	LDD  R30,Y+1
0003f3 30e7      	CPI  R30,LOW(0x7)
0003f4 f011      	BREQ _0x2000020
0003f5 30e8      	CPI  R30,LOW(0x8)
0003f6 f439      	BRNE _0x2000021
                 _0x2000020:
0003f7 81eb      	LDD  R30,Y+3
0003f8 93ea      	ST   -Y,R30
0003f9 81aa      	LDD  R26,Y+2
0003fa 940e 09b8 	CALL _glcd_mappixcolor1bit
0003fc 83eb      	STD  Y+3,R30
0003fd c008      	RJMP _0x2000022
                 _0x2000021:
0003fe 30e3      	CPI  R30,LOW(0x3)
0003ff f421      	BRNE _0x2000024
000400 81eb      	LDD  R30,Y+3
000401 95e0      	COM  R30
000402 83eb      	STD  Y+3,R30
000403 c002      	RJMP _0x2000025
                 _0x2000024:
000404 30e0      	CPI  R30,0
000405 f421      	BRNE _0x2000026
                 _0x2000025:
                 _0x2000022:
000406 81ea      	LDD  R30,Y+2
000407 95e0      	COM  R30
000408 231e      	AND  R17,R30
000409 c002      	RJMP _0x2000027
                 _0x2000026:
00040a 30e2      	CPI  R30,LOW(0x2)
00040b f429      	BRNE _0x2000028
                 _0x2000027:
00040c 81ea      	LDD  R30,Y+2
00040d 81ab      	LDD  R26,Y+3
00040e 23ea      	AND  R30,R26
00040f 2b1e      	OR   R17,R30
000410 c00e      	RJMP _0x200001E
                 _0x2000028:
000411 30e1      	CPI  R30,LOW(0x1)
000412 f429      	BRNE _0x2000029
000413 81ea      	LDD  R30,Y+2
000414 81ab      	LDD  R26,Y+3
000415 23ea      	AND  R30,R26
000416 271e      	EOR  R17,R30
000417 c007      	RJMP _0x200001E
                 _0x2000029:
000418 30e4      	CPI  R30,LOW(0x4)
000419 f429      	BRNE _0x200001E
00041a 81ea      	LDD  R30,Y+2
00041b 95e0      	COM  R30
00041c 81ab      	LDD  R26,Y+3
00041d 2bea      	OR   R30,R26
00041e 231e      	AND  R17,R30
                 _0x200001E:
00041f 2fa1      	MOV  R26,R17
000420 defe      	RCALL _pcd8544_wrbyte
000421 8118      	LDD  R17,Y+0
                 _0x2140009:
000422 9626      	ADIW R28,6
000423 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
000424 93aa      	ST   -Y,R26
000425 9723      	SBIW R28,3
000426 940e 0b64 	CALL __SAVELOCR6
000428 89a8      	LDD  R26,Y+16
000429 35a4      	CPI  R26,LOW(0x54)
00042a f448      	BRSH _0x200002C
00042b 85af      	LDD  R26,Y+15
00042c 33a0      	CPI  R26,LOW(0x30)
00042d f430      	BRSH _0x200002C
00042e 85ae      	LDD  R26,Y+14
00042f 30a0      	CPI  R26,LOW(0x0)
000430 f019      	BREQ _0x200002C
000431 85ad      	LDD  R26,Y+13
000432 30a0      	CPI  R26,LOW(0x0)
000433 f409      	BRNE _0x200002B
                 _0x200002C:
000434 c1cc      	RJMP _0x2140008
                 _0x200002B:
000435 85ee      	LDD  R30,Y+14
000436 87e8      	STD  Y+8,R30
000437 89a8      	LDD  R26,Y+16
000438 27bb      	CLR  R27
000439 85ee      	LDD  R30,Y+14
00043a e0f0      	LDI  R31,0
00043b 0fae      	ADD  R26,R30
00043c 1fbf      	ADC  R27,R31
00043d 35a5      	CPI  R26,LOW(0x55)
00043e e0e0      	LDI  R30,HIGH(0x55)
00043f 07be      	CPC  R27,R30
000440 f020      	BRLO _0x200002E
000441 89a8      	LDD  R26,Y+16
000442 e5e4      	LDI  R30,LOW(84)
000443 1bea      	SUB  R30,R26
000444 87ee      	STD  Y+14,R30
                 _0x200002E:
000445 852d      	LDD  R18,Y+13
000446 85af      	LDD  R26,Y+15
000447 27bb      	CLR  R27
000448 85ed      	LDD  R30,Y+13
000449 e0f0      	LDI  R31,0
00044a 0fae      	ADD  R26,R30
00044b 1fbf      	ADC  R27,R31
00044c 97d1      	SBIW R26,49
00044d f020      	BRLO _0x200002F
00044e 85af      	LDD  R26,Y+15
00044f e3e0      	LDI  R30,LOW(48)
000450 1bea      	SUB  R30,R26
000451 87ed      	STD  Y+13,R30
                 _0x200002F:
000452 85a9      	LDD  R26,Y+9
000453 30a6      	CPI  R26,LOW(0x6)
000454 f009      	BREQ PC+2
000455 c05b      	RJMP _0x2000030
000456 85ec      	LDD  R30,Y+12
000457 30e1      	CPI  R30,LOW(0x1)
000458 f409      	BRNE _0x2000034
000459 c1a7      	RJMP _0x2140008
                 _0x2000034:
00045a 30e3      	CPI  R30,LOW(0x3)
00045b f439      	BRNE _0x2000037
                +
00045c 91e0 052e+LDS R30 , _glcd_state + ( 27 )
00045e 91f0 052f+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
000460 9730      	SBIW R30,0
000461 f409      	BRNE _0x2000036
000462 c19e      	RJMP _0x2140008
                 _0x2000036:
                 _0x2000037:
000463 8508      	LDD  R16,Y+8
000464 85ed      	LDD  R30,Y+13
000465 95e6      	LSR  R30
000466 95e6      	LSR  R30
000467 95e6      	LSR  R30
000468 2f3e      	MOV  R19,R30
000469 2fe2      	MOV  R30,R18
00046a 70e7      	ANDI R30,LOW(0x7)
00046b f419      	BRNE _0x2000039
00046c 85ad      	LDD  R26,Y+13
00046d 172a      	CP   R18,R26
00046e f0e9      	BREQ _0x2000038
                 _0x2000039:
00046f 2fa0      	MOV  R26,R16
000470 27bb      	CLR  R27
000471 2fe3      	MOV  R30,R19
000472 e0f0      	LDI  R31,0
000473 940e 0b08 	CALL __MULW12U
000475 85aa      	LDD  R26,Y+10
000476 85bb      	LDD  R27,Y+10+1
000477 940e 0a34 	CALL SUBOPT_0x3
000479 9526      	LSR  R18
00047a 9526      	LSR  R18
00047b 9526      	LSR  R18
00047c 2f53      	MOV  R21,R19
                 _0x200003B:
00047d 935f      	PUSH R21
00047e 5f5f      	SUBI R21,-1
00047f 2fe2      	MOV  R30,R18
000480 91af      	POP  R26
000481 17ea      	CP   R30,R26
000482 f048      	BRLO _0x200003D
000483 2f10      	MOV  R17,R16
                 _0x200003E:
000484 2fe1      	MOV  R30,R17
000485 5011      	SUBI R17,1
000486 30e0      	CPI  R30,0
000487 f019      	BREQ _0x2000040
000488 940e 0a39 	CALL SUBOPT_0x4
00048a cff9      	RJMP _0x200003E
                 _0x2000040:
00048b cff1      	RJMP _0x200003B
                 _0x200003D:
                 _0x2000038:
00048c 85ae      	LDD  R26,Y+14
00048d 170a      	CP   R16,R26
00048e f111      	BREQ _0x2000041
00048f 85ee      	LDD  R30,Y+14
000490 85aa      	LDD  R26,Y+10
000491 85bb      	LDD  R27,Y+10+1
000492 e0f0      	LDI  R31,0
000493 940e 0a34 	CALL SUBOPT_0x3
000495 85ed      	LDD  R30,Y+13
000496 70e7      	ANDI R30,LOW(0x7)
000497 f009      	BREQ _0x2000042
000498 5f3f      	SUBI R19,-LOW(1)
                 _0x2000042:
000499 e020      	LDI  R18,LOW(0)
                 _0x2000043:
00049a 932f      	PUSH R18
00049b 5f2f      	SUBI R18,-1
00049c 2fe3      	MOV  R30,R19
00049d 91af      	POP  R26
00049e 17ae      	CP   R26,R30
00049f f488      	BRSH _0x2000045
0004a0 851e      	LDD  R17,Y+14
                 _0x2000046:
0004a1 931f      	PUSH R17
0004a2 5f1f      	SUBI R17,-1
0004a3 2fe0      	MOV  R30,R16
0004a4 91af      	POP  R26
0004a5 17ae      	CP   R26,R30
0004a6 f418      	BRSH _0x2000048
0004a7 940e 0a39 	CALL SUBOPT_0x4
0004a9 cff7      	RJMP _0x2000046
                 _0x2000048:
0004aa 85ee      	LDD  R30,Y+14
0004ab 81ae      	LDD  R26,Y+6
0004ac 81bf      	LDD  R27,Y+6+1
0004ad e0f0      	LDI  R31,0
0004ae 940e 0a34 	CALL SUBOPT_0x3
0004b0 cfe9      	RJMP _0x2000043
                 _0x2000045:
                 _0x2000041:
                 _0x2000030:
0004b1 85ef      	LDD  R30,Y+15
0004b2 70e7      	ANDI R30,LOW(0x7)
0004b3 2f3e      	MOV  R19,R30
                 _0x2000049:
0004b4 85ed      	LDD  R30,Y+13
0004b5 30e0      	CPI  R30,0
0004b6 f409      	BRNE PC+2
0004b7 c149      	RJMP _0x200004B
0004b8 85ea      	LDD  R30,Y+10
0004b9 85fb      	LDD  R31,Y+10+1
0004ba 83ee      	STD  Y+6,R30
0004bb 83ff      	STD  Y+6+1,R31
0004bc e010      	LDI  R17,LOW(0)
0004bd 8908      	LDD  R16,Y+16
0004be 3030      	CPI  R19,0
0004bf f009      	BREQ PC+2
0004c0 c063      	RJMP _0x200004C
0004c1 85ad      	LDD  R26,Y+13
0004c2 30a8      	CPI  R26,LOW(0x8)
0004c3 f408      	BRSH PC+2
0004c4 c05a      	RJMP _0x200004D
0004c5 85e9      	LDD  R30,Y+9
0004c6 30e0      	CPI  R30,0
0004c7 f011      	BREQ _0x2000052
0004c8 30e3      	CPI  R30,LOW(0x3)
0004c9 f409      	BRNE _0x2000053
                 _0x2000052:
0004ca c002      	RJMP _0x2000054
                 _0x2000053:
0004cb 30e7      	CPI  R30,LOW(0x7)
0004cc f409      	BRNE _0x2000055
                 _0x2000054:
0004cd c002      	RJMP _0x2000056
                 _0x2000055:
0004ce 30e8      	CPI  R30,LOW(0x8)
0004cf f409      	BRNE _0x2000057
                 _0x2000056:
0004d0 c002      	RJMP _0x2000058
                 _0x2000057:
0004d1 30e9      	CPI  R30,LOW(0x9)
0004d2 f409      	BRNE _0x2000059
                 _0x2000058:
0004d3 c002      	RJMP _0x200005A
                 _0x2000059:
0004d4 30ea      	CPI  R30,LOW(0xA)
0004d5 f421      	BRNE _0x200005B
                 _0x200005A:
0004d6 930a      	ST   -Y,R16
0004d7 89a8      	LDD  R26,Y+16
0004d8 de2b      	RCALL _pcd8544_gotoxy
0004d9 c004      	RJMP _0x2000050
                 _0x200005B:
0004da 30e6      	CPI  R30,LOW(0x6)
0004db f411      	BRNE _0x2000050
0004dc 940e 0a46 	CALL SUBOPT_0x5
                 _0x2000050:
                 _0x200005D:
0004de 931f      	PUSH R17
0004df 5f1f      	SUBI R17,-1
0004e0 85ee      	LDD  R30,Y+14
0004e1 91af      	POP  R26
0004e2 17ae      	CP   R26,R30
0004e3 f5a0      	BRSH _0x200005F
0004e4 85a9      	LDD  R26,Y+9
0004e5 30a6      	CPI  R26,LOW(0x6)
0004e6 f451      	BRNE _0x2000060
0004e7 940e 0a4a 	CALL SUBOPT_0x6
0004e9 93fa      	ST   -Y,R31
0004ea 93ea      	ST   -Y,R30
0004eb 940e 0a24 	CALL SUBOPT_0x1
0004ed 81a0      	LD   R26,Z
0004ee 940e 09ff 	CALL _glcd_writemem
0004f0 c026      	RJMP _0x2000061
                 _0x2000060:
0004f1 85e9      	LDD  R30,Y+9
0004f2 30e9      	CPI  R30,LOW(0x9)
0004f3 f411      	BRNE _0x2000065
0004f4 e050      	LDI  R21,LOW(0)
0004f5 c00e      	RJMP _0x2000066
                 _0x2000065:
0004f6 30ea      	CPI  R30,LOW(0xA)
0004f7 f411      	BRNE _0x2000064
0004f8 ef5f      	LDI  R21,LOW(255)
0004f9 c00a      	RJMP _0x2000066
                 _0x2000064:
0004fa 940e 0a4a 	CALL SUBOPT_0x6
0004fc 940e 0a53 	CALL SUBOPT_0x7
0004fe 2f5e      	MOV  R21,R30
0004ff 85e9      	LDD  R30,Y+9
000500 30e7      	CPI  R30,LOW(0x7)
000501 f011      	BREQ _0x200006D
000502 30e8      	CPI  R30,LOW(0x8)
000503 f421      	BRNE _0x200006E
                 _0x200006D:
                 _0x2000066:
000504 940e 0a59 	CALL SUBOPT_0x8
000506 2f5e      	MOV  R21,R30
000507 c006      	RJMP _0x200006F
                 _0x200006E:
000508 30e3      	CPI  R30,LOW(0x3)
000509 f411      	BRNE _0x2000071
00050a 9550      	COM  R21
00050b c002      	RJMP _0x2000072
                 _0x2000071:
00050c 30e0      	CPI  R30,0
00050d f419      	BRNE _0x2000074
                 _0x2000072:
                 _0x200006F:
00050e 2fa5      	MOV  R26,R21
00050f ddd4      	RCALL _pcd8544_wrdata_G100
000510 c006      	RJMP _0x200006B
                 _0x2000074:
000511 940e 0a5d 	CALL SUBOPT_0x9
000513 efef      	LDI  R30,LOW(255)
000514 93ea      	ST   -Y,R30
000515 85ad      	LDD  R26,Y+13
000516 ded4      	RCALL _pcd8544_wrmasked_G100
                 _0x200006B:
                 _0x2000061:
000517 cfc6      	RJMP _0x200005D
                 _0x200005F:
000518 85ef      	LDD  R30,Y+15
000519 5fe8      	SUBI R30,-LOW(8)
00051a 87ef      	STD  Y+15,R30
00051b 85ed      	LDD  R30,Y+13
00051c 50e8      	SUBI R30,LOW(8)
00051d 87ed      	STD  Y+13,R30
00051e c0d9      	RJMP _0x2000075
                 _0x200004D:
00051f 855d      	LDD  R21,Y+13
000520 e020      	LDI  R18,LOW(0)
000521 e0e0      	LDI  R30,LOW(0)
000522 87ed      	STD  Y+13,R30
000523 c07e      	RJMP _0x2000076
                 _0x200004C:
000524 2fe3      	MOV  R30,R19
000525 85ad      	LDD  R26,Y+13
000526 0fae      	ADD  R26,R30
000527 30a9      	CPI  R26,LOW(0x9)
000528 f420      	BRSH _0x2000077
000529 852d      	LDD  R18,Y+13
00052a e0e0      	LDI  R30,LOW(0)
00052b 87ed      	STD  Y+13,R30
00052c c003      	RJMP _0x2000078
                 _0x2000077:
00052d e0e8      	LDI  R30,LOW(8)
00052e 1be3      	SUB  R30,R19
00052f 2f2e      	MOV  R18,R30
                 _0x2000078:
000530 933a      	ST   -Y,R19
000531 2fa2      	MOV  R26,R18
000532 940e 09ad 	CALL _glcd_getmask
000534 2f4e      	MOV  R20,R30
000535 85e9      	LDD  R30,Y+9
000536 30e6      	CPI  R30,LOW(0x6)
000537 f511      	BRNE _0x200007C
000538 940e 0a46 	CALL SUBOPT_0x5
                 _0x200007D:
00053a 931f      	PUSH R17
00053b 5f1f      	SUBI R17,-1
00053c 85ee      	LDD  R30,Y+14
00053d 91af      	POP  R26
00053e 17ae      	CP   R26,R30
00053f f4c8      	BRSH _0x200007F
000540 940e 0a24 	CALL SUBOPT_0x1
000542 81e0      	LD   R30,Z
000543 23e4      	AND  R30,R20
000544 2fae      	MOV  R26,R30
000545 2fe3      	MOV  R30,R19
000546 940e 0afb 	CALL __LSRB12
000548 940e 0a63 	CALL SUBOPT_0xA
00054a 2fe3      	MOV  R30,R19
00054b 2fa4      	MOV  R26,R20
00054c 940e 0afb 	CALL __LSRB12
00054e 95e0      	COM  R30
00054f 21e1      	AND  R30,R1
000550 2b5e      	OR   R21,R30
000551 940e 0a4a 	CALL SUBOPT_0x6
000553 93fa      	ST   -Y,R31
000554 93ea      	ST   -Y,R30
000555 2fa5      	MOV  R26,R21
000556 940e 09ff 	CALL _glcd_writemem
000558 cfe1      	RJMP _0x200007D
                 _0x200007F:
000559 c02c      	RJMP _0x200007B
                 _0x200007C:
00055a 30e9      	CPI  R30,LOW(0x9)
00055b f411      	BRNE _0x2000080
00055c e050      	LDI  R21,LOW(0)
00055d c003      	RJMP _0x2000081
                 _0x2000080:
00055e 30ea      	CPI  R30,LOW(0xA)
00055f f4a9      	BRNE _0x2000087
000560 ef5f      	LDI  R21,LOW(255)
                 _0x2000081:
000561 940e 0a59 	CALL SUBOPT_0x8
000563 2fae      	MOV  R26,R30
000564 2fe3      	MOV  R30,R19
000565 940e 0af3 	CALL __LSLB12
000567 2f5e      	MOV  R21,R30
                 _0x2000084:
000568 931f      	PUSH R17
000569 5f1f      	SUBI R17,-1
00056a 85ee      	LDD  R30,Y+14
00056b 91af      	POP  R26
00056c 17ae      	CP   R26,R30
00056d f430      	BRSH _0x2000086
00056e 940e 0a5d 	CALL SUBOPT_0x9
000570 934a      	ST   -Y,R20
000571 e0a0      	LDI  R26,LOW(0)
000572 de78      	RCALL _pcd8544_wrmasked_G100
000573 cff4      	RJMP _0x2000084
                 _0x2000086:
000574 c011      	RJMP _0x200007B
                 _0x2000087:
                 _0x2000088:
000575 931f      	PUSH R17
000576 5f1f      	SUBI R17,-1
000577 85ee      	LDD  R30,Y+14
000578 91af      	POP  R26
000579 17ae      	CP   R26,R30
00057a f458      	BRSH _0x200008A
00057b 940e 0a6e 	CALL SUBOPT_0xB
00057d 2fae      	MOV  R26,R30
00057e 2fe3      	MOV  R30,R19
00057f 940e 0af3 	CALL __LSLB12
000581 93ea      	ST   -Y,R30
000582 934a      	ST   -Y,R20
000583 85ad      	LDD  R26,Y+13
000584 de66      	RCALL _pcd8544_wrmasked_G100
000585 cfef      	RJMP _0x2000088
                 _0x200008A:
                 _0x200007B:
000586 85ed      	LDD  R30,Y+13
000587 30e0      	CPI  R30,0
000588 f409      	BRNE _0x200008B
000589 c077      	RJMP _0x200004B
                 _0x200008B:
00058a 85ad      	LDD  R26,Y+13
00058b 30a8      	CPI  R26,LOW(0x8)
00058c f428      	BRSH _0x200008C
00058d 85ed      	LDD  R30,Y+13
00058e 1be2      	SUB  R30,R18
00058f 2f5e      	MOV  R21,R30
000590 e0e0      	LDI  R30,LOW(0)
000591 c003      	RJMP _0x20000A2
                 _0x200008C:
000592 2f53      	MOV  R21,R19
000593 85ed      	LDD  R30,Y+13
000594 50e8      	SUBI R30,LOW(8)
                 _0x20000A2:
000595 87ed      	STD  Y+13,R30
000596 e010      	LDI  R17,LOW(0)
000597 85ef      	LDD  R30,Y+15
000598 5fe8      	SUBI R30,-LOW(8)
000599 87ef      	STD  Y+15,R30
00059a e0e8      	LDI  R30,LOW(8)
00059b 1be3      	SUB  R30,R19
00059c 2f2e      	MOV  R18,R30
00059d 8908      	LDD  R16,Y+16
00059e 85ea      	LDD  R30,Y+10
00059f 85fb      	LDD  R31,Y+10+1
0005a0 83ee      	STD  Y+6,R30
0005a1 83ff      	STD  Y+6+1,R31
                 _0x2000076:
0005a2 2fe5      	MOV  R30,R21
0005a3 e0f0      	LDI  R31,0
0005a4 59e0      	SUBI R30,LOW(-__glcd_mask*2)
0005a5 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
0005a6 9144      	LPM  R20,Z
0005a7 85e9      	LDD  R30,Y+9
0005a8 30e6      	CPI  R30,LOW(0x6)
0005a9 f511      	BRNE _0x2000091
0005aa 940e 0a46 	CALL SUBOPT_0x5
                 _0x2000092:
0005ac 931f      	PUSH R17
0005ad 5f1f      	SUBI R17,-1
0005ae 85ee      	LDD  R30,Y+14
0005af 91af      	POP  R26
0005b0 17ae      	CP   R26,R30
0005b1 f4c8      	BRSH _0x2000094
0005b2 940e 0a24 	CALL SUBOPT_0x1
0005b4 81e0      	LD   R30,Z
0005b5 23e4      	AND  R30,R20
0005b6 2fae      	MOV  R26,R30
0005b7 2fe2      	MOV  R30,R18
0005b8 940e 0af3 	CALL __LSLB12
0005ba 940e 0a63 	CALL SUBOPT_0xA
0005bc 2fe2      	MOV  R30,R18
0005bd 2fa4      	MOV  R26,R20
0005be 940e 0af3 	CALL __LSLB12
0005c0 95e0      	COM  R30
0005c1 21e1      	AND  R30,R1
0005c2 2b5e      	OR   R21,R30
0005c3 940e 0a4a 	CALL SUBOPT_0x6
0005c5 93fa      	ST   -Y,R31
0005c6 93ea      	ST   -Y,R30
0005c7 2fa5      	MOV  R26,R21
0005c8 940e 09ff 	CALL _glcd_writemem
0005ca cfe1      	RJMP _0x2000092
                 _0x2000094:
0005cb c02c      	RJMP _0x2000090
                 _0x2000091:
0005cc 30e9      	CPI  R30,LOW(0x9)
0005cd f411      	BRNE _0x2000095
0005ce e050      	LDI  R21,LOW(0)
0005cf c003      	RJMP _0x2000096
                 _0x2000095:
0005d0 30ea      	CPI  R30,LOW(0xA)
0005d1 f4a9      	BRNE _0x200009C
0005d2 ef5f      	LDI  R21,LOW(255)
                 _0x2000096:
0005d3 940e 0a59 	CALL SUBOPT_0x8
0005d5 2fae      	MOV  R26,R30
0005d6 2fe2      	MOV  R30,R18
0005d7 940e 0afb 	CALL __LSRB12
0005d9 2f5e      	MOV  R21,R30
                 _0x2000099:
0005da 931f      	PUSH R17
0005db 5f1f      	SUBI R17,-1
0005dc 85ee      	LDD  R30,Y+14
0005dd 91af      	POP  R26
0005de 17ae      	CP   R26,R30
0005df f430      	BRSH _0x200009B
0005e0 940e 0a5d 	CALL SUBOPT_0x9
0005e2 934a      	ST   -Y,R20
0005e3 e0a0      	LDI  R26,LOW(0)
0005e4 de06      	RCALL _pcd8544_wrmasked_G100
0005e5 cff4      	RJMP _0x2000099
                 _0x200009B:
0005e6 c011      	RJMP _0x2000090
                 _0x200009C:
                 _0x200009D:
0005e7 931f      	PUSH R17
0005e8 5f1f      	SUBI R17,-1
0005e9 85ee      	LDD  R30,Y+14
0005ea 91af      	POP  R26
0005eb 17ae      	CP   R26,R30
0005ec f458      	BRSH _0x200009F
0005ed 940e 0a6e 	CALL SUBOPT_0xB
0005ef 2fae      	MOV  R26,R30
0005f0 2fe2      	MOV  R30,R18
0005f1 940e 0afb 	CALL __LSRB12
0005f3 93ea      	ST   -Y,R30
0005f4 934a      	ST   -Y,R20
0005f5 85ad      	LDD  R26,Y+13
0005f6 ddf4      	RCALL _pcd8544_wrmasked_G100
0005f7 cfef      	RJMP _0x200009D
                 _0x200009F:
                 _0x2000090:
                 _0x2000075:
0005f8 85e8      	LDD  R30,Y+8
0005f9 85aa      	LDD  R26,Y+10
0005fa 85bb      	LDD  R27,Y+10+1
0005fb e0f0      	LDI  R31,0
0005fc 0fea      	ADD  R30,R26
0005fd 1ffb      	ADC  R31,R27
0005fe 87ea      	STD  Y+10,R30
0005ff 87fb      	STD  Y+10+1,R31
000600 ceb3      	RJMP _0x2000049
                 _0x200004B:
                 _0x2140008:
000601 940e 0b6b 	CALL __LOADLOCR6
000603 9661      	ADIW R28,17
000604 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
000605 940e 0a7b 	CALL SUBOPT_0xC
000607 f024      	BRLT _0x2020003
000608 e0e0      	LDI  R30,LOW(0)
000609 e0f0      	LDI  R31,HIGH(0)
00060a 940c 09b6 	JMP  _0x2140002
                 _0x2020003:
00060c 81a8      	LD   R26,Y
00060d 81b9      	LDD  R27,Y+1
00060e 35a4      	CPI  R26,LOW(0x54)
00060f e0e0      	LDI  R30,HIGH(0x54)
000610 07be      	CPC  R27,R30
000611 f024      	BRLT _0x2020004
000612 e5e3      	LDI  R30,LOW(83)
000613 e0f0      	LDI  R31,HIGH(83)
000614 940c 09b6 	JMP  _0x2140002
                 _0x2020004:
000616 81e8      	LD   R30,Y
000617 81f9      	LDD  R31,Y+1
000618 940c 09b6 	JMP  _0x2140002
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
00061a 940e 0a7b 	CALL SUBOPT_0xC
00061c f024      	BRLT _0x2020005
00061d e0e0      	LDI  R30,LOW(0)
00061e e0f0      	LDI  R31,HIGH(0)
00061f 940c 09b6 	JMP  _0x2140002
                 _0x2020005:
000621 81a8      	LD   R26,Y
000622 81b9      	LDD  R27,Y+1
000623 97d0      	SBIW R26,48
000624 f024      	BRLT _0x2020006
000625 e2ef      	LDI  R30,LOW(47)
000626 e0f0      	LDI  R31,HIGH(47)
000627 940c 09b6 	JMP  _0x2140002
                 _0x2020006:
000629 81e8      	LD   R30,Y
00062a 81f9      	LDD  R31,Y+1
00062b 940c 09b6 	JMP  _0x2140002
                 ; .FEND
                 _glcd_getcharw_G101:
                 ; .FSTART _glcd_getcharw_G101
00062d 93ba      	ST   -Y,R27
00062e 93aa      	ST   -Y,R26
00062f 9723      	SBIW R28,3
000630 940e 0a82 	CALL SUBOPT_0xD
000632 018f      	MOVW R16,R30
000633 2e00      	MOV  R0,R16
000634 2a01      	OR   R0,R17
000635 f419      	BRNE _0x202000B
000636 e0e0      	LDI  R30,LOW(0)
000637 e0f0      	LDI  R31,HIGH(0)
000638 c05f      	RJMP _0x2140007
                 _0x202000B:
000639 940e 0a89 	CALL SUBOPT_0xE
00063b 820f      	STD  Y+7,R0
00063c 940e 0a89 	CALL SUBOPT_0xE
00063e 820e      	STD  Y+6,R0
00063f 940e 0a89 	CALL SUBOPT_0xE
000641 8608      	STD  Y+8,R0
000642 85eb      	LDD  R30,Y+11
000643 85a8      	LDD  R26,Y+8
000644 17ea      	CP   R30,R26
000645 f418      	BRSH _0x202000C
000646 e0e0      	LDI  R30,LOW(0)
000647 e0f0      	LDI  R31,HIGH(0)
000648 c04f      	RJMP _0x2140007
                 _0x202000C:
000649 01f8      	MOVW R30,R16
                +
00064a 5f0f     +SUBI R16 , LOW ( - 1 )
00064b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00064c 9154      	LPM  R21,Z
00064d 85a8      	LDD  R26,Y+8
00064e 27bb      	CLR  R27
00064f 27ee      	CLR  R30
000650 0fa5      	ADD  R26,R21
000651 1fbe      	ADC  R27,R30
000652 85eb      	LDD  R30,Y+11
000653 e0f0      	LDI  R31,0
000654 17ea      	CP   R30,R26
000655 07fb      	CPC  R31,R27
000656 f018      	BRLO _0x202000D
000657 e0e0      	LDI  R30,LOW(0)
000658 e0f0      	LDI  R31,HIGH(0)
000659 c03e      	RJMP _0x2140007
                 _0x202000D:
00065a 81ee      	LDD  R30,Y+6
00065b 95e6      	LSR  R30
00065c 95e6      	LSR  R30
00065d 95e6      	LSR  R30
00065e 2f4e      	MOV  R20,R30
00065f 81ee      	LDD  R30,Y+6
000660 70e7      	ANDI R30,LOW(0x7)
000661 f009      	BREQ _0x202000E
000662 5f4f      	SUBI R20,-LOW(1)
                 _0x202000E:
000663 81ef      	LDD  R30,Y+7
000664 30e0      	CPI  R30,0
000665 f0a1      	BREQ _0x202000F
000666 85a9      	LDD  R26,Y+9
000667 85ba      	LDD  R27,Y+9+1
000668 93ec      	ST   X,R30
000669 85a8      	LDD  R26,Y+8
00066a 85eb      	LDD  R30,Y+11
00066b 1bea      	SUB  R30,R26
00066c e0f0      	LDI  R31,0
00066d 01df      	MOVW R26,R30
00066e 81ef      	LDD  R30,Y+7
00066f e0f0      	LDI  R31,0
000670 940e 0b08 	CALL __MULW12U
000672 01df      	MOVW R26,R30
000673 2fe4      	MOV  R30,R20
000674 e0f0      	LDI  R31,0
000675 940e 0b08 	CALL __MULW12U
000677 0fe0      	ADD  R30,R16
000678 1ff1      	ADC  R31,R17
000679 c01e      	RJMP _0x2140007
                 _0x202000F:
00067a 0198      	MOVW R18,R16
00067b 2fe5      	MOV  R30,R21
00067c e0f0      	LDI  R31,0
                +
00067d 0f0e     +ADD R16 , R30
00067e 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2020010:
00067f 85a8      	LDD  R26,Y+8
000680 5faf      	SUBI R26,-LOW(1)
000681 87a8      	STD  Y+8,R26
000682 50a1      	SUBI R26,LOW(1)
000683 85eb      	LDD  R30,Y+11
000684 17ae      	CP   R26,R30
000685 f460      	BRSH _0x2020012
000686 01f9      	MOVW R30,R18
                +
000687 5f2f     +SUBI R18 , LOW ( - 1 )
000688 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000689 91a4      	LPM  R26,Z
00068a e0b0      	LDI  R27,0
00068b 2fe4      	MOV  R30,R20
00068c e0f0      	LDI  R31,0
00068d 940e 0b08 	CALL __MULW12U
                +
00068f 0f0e     +ADD R16 , R30
000690 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
000691 cfed      	RJMP _0x2020010
                 _0x2020012:
000692 01f9      	MOVW R30,R18
000693 91e4      	LPM  R30,Z
000694 85a9      	LDD  R26,Y+9
000695 85ba      	LDD  R27,Y+9+1
000696 93ec      	ST   X,R30
000697 01f8      	MOVW R30,R16
                 _0x2140007:
000698 940e 0b6b 	CALL __LOADLOCR6
00069a 962c      	ADIW R28,12
00069b 9508      	RET
                 ; .FEND
                 _glcd_new_line_G101:
                 ; .FSTART _glcd_new_line_G101
00069c e0e0      	LDI  R30,LOW(0)
                +
00069d 93e0 0515+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
00069f 91a0 0516+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
0006a1 27bb      	CLR  R27
0006a2 940e 0a8e 	CALL SUBOPT_0xF
0006a4 e0f0      	LDI  R31,0
0006a5 0fae      	ADD  R26,R30
0006a6 1fbf      	ADC  R27,R31
                +
0006a7 91e0 051a+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
0006a9 e0f0      	LDI  R31,0
0006aa 0fae      	ADD  R26,R30
0006ab 1fbf      	ADC  R27,R31
0006ac df6d      	RCALL _glcd_clipy
                +
0006ad 93e0 0516+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
0006af 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
0006b0 93aa      	ST   -Y,R26
0006b1 9721      	SBIW R28,1
0006b2 940e 0a82 	CALL SUBOPT_0xD
0006b4 9730      	SBIW R30,0
0006b5 f409      	BRNE PC+2
0006b6 c055      	RJMP _0x202001F
0006b7 81af      	LDD  R26,Y+7
0006b8 30aa      	CPI  R26,LOW(0xA)
0006b9 f409      	BRNE _0x2020020
0006ba c04f      	RJMP _0x2020021
                 _0x2020020:
0006bb 81ef      	LDD  R30,Y+7
0006bc 93ea      	ST   -Y,R30
0006bd 01de      	MOVW R26,R28
0006be 9617      	ADIW R26,7
0006bf df6d      	RCALL _glcd_getcharw_G101
0006c0 01af      	MOVW R20,R30
0006c1 9730      	SBIW R30,0
0006c2 f409      	BRNE _0x2020022
0006c3 c04a      	RJMP _0x2140006
                 _0x2020022:
                +
0006c4 91e0 0519+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
0006c6 81ae      	LDD  R26,Y+6
0006c7 0fea      	ADD  R30,R26
0006c8 2f3e      	MOV  R19,R30
                +
0006c9 91a0 0515+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
0006cb 27bb      	CLR  R27
0006cc e0f0      	LDI  R31,0
0006cd 0fea      	ADD  R30,R26
0006ce 1ffb      	ADC  R31,R27
0006cf 018f      	MOVW R16,R30
                +
0006d0 3505     +CPI R16 , LOW ( 85 )
0006d1 e0e0     +LDI R30 , HIGH ( 85 )
0006d2 071e     +CPC R17 , R30
                 	__CPWRN 16,17,85
0006d3 f018      	BRLO _0x2020023
0006d4 2f03      	MOV  R16,R19
0006d5 2711      	CLR  R17
0006d6 dfc5      	RCALL _glcd_new_line_G101
                 _0x2020023:
                +
0006d7 91e0 0515+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
0006d9 93ea      	ST   -Y,R30
                +
0006da 91e0 0516+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
0006dc 93ea      	ST   -Y,R30
0006dd 85e8      	LDD  R30,Y+8
0006de 93ea      	ST   -Y,R30
0006df 940e 0a8e 	CALL SUBOPT_0xF
0006e1 93ea      	ST   -Y,R30
0006e2 e0e1      	LDI  R30,LOW(1)
0006e3 93ea      	ST   -Y,R30
0006e4 935a      	ST   -Y,R21
0006e5 934a      	ST   -Y,R20
0006e6 e0a7      	LDI  R26,LOW(7)
0006e7 dd3c      	RCALL _glcd_block
                +
0006e8 91e0 0515+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
0006ea 81ae      	LDD  R26,Y+6
0006eb 0fea      	ADD  R30,R26
0006ec 93ea      	ST   -Y,R30
                +
0006ed 91e0 0516+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
0006ef 93ea      	ST   -Y,R30
                +
0006f0 91e0 0519+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
0006f2 93ea      	ST   -Y,R30
0006f3 940e 0a8e 	CALL SUBOPT_0xF
0006f5 940e 0a95 	CALL SUBOPT_0x10
                +
0006f7 91e0 0515+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
0006f9 93ea      	ST   -Y,R30
                +
0006fa 91a0 0516+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
0006fc 940e 0a8e 	CALL SUBOPT_0xF
0006fe 0fea      	ADD  R30,R26
0006ff 93ea      	ST   -Y,R30
000700 933a      	ST   -Y,R19
                +
000701 91e0 051a+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000703 940e 0a95 	CALL SUBOPT_0x10
000705 e5e4      	LDI  R30,LOW(84)
000706 e0f0      	LDI  R31,HIGH(84)
000707 17e0      	CP   R30,R16
000708 07f1      	CPC  R31,R17
000709 f411      	BRNE _0x2020024
                 _0x2020021:
00070a df91      	RCALL _glcd_new_line_G101
00070b c002      	RJMP _0x2140006
                 _0x2020024:
                 _0x202001F:
                +
00070c 9300 0515+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
                 _0x2140006:
00070e 940e 0b6b 	CALL __LOADLOCR6
000710 9628      	ADIW R28,8
000711 9508      	RET
                 ; .FEND
                 _glcd_outtextxy:
                 ; .FSTART _glcd_outtextxy
000712 93ba      	ST   -Y,R27
000713 93aa      	ST   -Y,R26
000714 931a      	ST   -Y,R17
000715 81ec      	LDD  R30,Y+4
000716 93ea      	ST   -Y,R30
000717 81ac      	LDD  R26,Y+4
000718 d009      	RCALL _glcd_moveto
                 _0x2020025:
000719 940e 0a9f 	CALL SUBOPT_0x11
00071b f019      	BREQ _0x2020027
00071c 2fa1      	MOV  R26,R17
00071d df92      	RCALL _glcd_putchar
00071e cffa      	RJMP _0x2020025
                 _0x2020027:
00071f 8118      	LDD  R17,Y+0
000720 940c 0992 	JMP  _0x2140003
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
000722 93aa      	ST   -Y,R26
000723 81a9      	LDD  R26,Y+1
000724 27bb      	CLR  R27
000725 dedf      	RCALL _glcd_clipx
                +
000726 93e0 0515+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000728 81a8      	LD   R26,Y
000729 27bb      	CLR  R27
00072a deef      	RCALL _glcd_clipy
                +
00072b 93e0 0516+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
00072d 940c 09b6 	JMP  _0x2140002
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G103:
                 ; .FSTART _put_buff_G103
00072f 93ba      	ST   -Y,R27
000730 93aa      	ST   -Y,R26
000731 931a      	ST   -Y,R17
000732 930a      	ST   -Y,R16
000733 81aa      	LDD  R26,Y+2
000734 81bb      	LDD  R27,Y+2+1
000735 9612      	ADIW R26,2
000736 940e 0b36 	CALL __GETW1P
000738 9730      	SBIW R30,0
000739 f159      	BREQ _0x2060010
00073a 81aa      	LDD  R26,Y+2
00073b 81bb      	LDD  R27,Y+2+1
00073c 9614      	ADIW R26,4
00073d 940e 0b36 	CALL __GETW1P
00073f 018f      	MOVW R16,R30
000740 9730      	SBIW R30,0
000741 f061      	BREQ _0x2060012
                +
000742 3002     +CPI R16 , LOW ( 2 )
000743 e0e0     +LDI R30 , HIGH ( 2 )
000744 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000745 f098      	BRLO _0x2060013
000746 01f8      	MOVW R30,R16
000747 9731      	SBIW R30,1
000748 018f      	MOVW R16,R30
                +
000749 81aa     +LDD R26 , Y + 2
00074a 81bb     +LDD R27 , Y + 2 + 1
00074b 9614     +ADIW R26 , 4
00074c 93ed     +ST X + , R30
00074d 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2060012:
00074e 81aa      	LDD  R26,Y+2
00074f 81bb      	LDD  R27,Y+2+1
000750 9612      	ADIW R26,2
000751 91ed      	LD   R30,X+
000752 91fd      	LD   R31,X+
000753 9631      	ADIW R30,1
000754 93fe      	ST   -X,R31
000755 93ee      	ST   -X,R30
000756 9731      	SBIW R30,1
000757 81ac      	LDD  R26,Y+4
000758 83a0      	STD  Z+0,R26
                 _0x2060013:
000759 81aa      	LDD  R26,Y+2
00075a 81bb      	LDD  R27,Y+2+1
00075b 940e 0b36 	CALL __GETW1P
00075d 23ff      	TST  R31
00075e f02a      	BRMI _0x2060014
00075f 91ed      	LD   R30,X+
000760 91fd      	LD   R31,X+
000761 9631      	ADIW R30,1
000762 93fe      	ST   -X,R31
000763 93ee      	ST   -X,R30
                 _0x2060014:
000764 c006      	RJMP _0x2060015
                 _0x2060010:
000765 81aa      	LDD  R26,Y+2
000766 81bb      	LDD  R27,Y+2+1
000767 efef      	LDI  R30,LOW(65535)
000768 efff      	LDI  R31,HIGH(65535)
000769 93ed      	ST   X+,R30
00076a 93fc      	ST   X,R31
                 _0x2060015:
00076b 8119      	LDD  R17,Y+1
00076c 8108      	LDD  R16,Y+0
00076d 940c 0992 	JMP  _0x2140003
                 ; .FEND
                 __print_G103:
                 ; .FSTART __print_G103
00076f 93ba      	ST   -Y,R27
000770 93aa      	ST   -Y,R26
000771 9726      	SBIW R28,6
000772 940e 0b64 	CALL __SAVELOCR6
000774 e010      	LDI  R17,0
000775 85ac      	LDD  R26,Y+12
000776 85bd      	LDD  R27,Y+12+1
000777 e0e0      	LDI  R30,LOW(0)
000778 e0f0      	LDI  R31,HIGH(0)
000779 93ed      	ST   X+,R30
00077a 93fc      	ST   X,R31
                 _0x2060016:
00077b 89ea      	LDD  R30,Y+18
00077c 89fb      	LDD  R31,Y+18+1
00077d 9631      	ADIW R30,1
00077e 8bea      	STD  Y+18,R30
00077f 8bfb      	STD  Y+18+1,R31
000780 9731      	SBIW R30,1
000781 91e4      	LPM  R30,Z
000782 2f2e      	MOV  R18,R30
000783 30e0      	CPI  R30,0
000784 f409      	BRNE PC+2
000785 c115      	RJMP _0x2060018
000786 2fe1      	MOV  R30,R17
000787 30e0      	CPI  R30,0
000788 f439      	BRNE _0x206001C
000789 3225      	CPI  R18,37
00078a f411      	BRNE _0x206001D
00078b e011      	LDI  R17,LOW(1)
00078c c002      	RJMP _0x206001E
                 _0x206001D:
00078d 940e 0aa7 	CALL SUBOPT_0x12
                 _0x206001E:
00078f c10a      	RJMP _0x206001B
                 _0x206001C:
000790 30e1      	CPI  R30,LOW(0x1)
000791 f4a9      	BRNE _0x206001F
000792 3225      	CPI  R18,37
000793 f419      	BRNE _0x2060020
000794 940e 0aa7 	CALL SUBOPT_0x12
000796 c102      	RJMP _0x20600CC
                 _0x2060020:
000797 e012      	LDI  R17,LOW(2)
000798 e040      	LDI  R20,LOW(0)
000799 e000      	LDI  R16,LOW(0)
00079a 322d      	CPI  R18,45
00079b f411      	BRNE _0x2060021
00079c e001      	LDI  R16,LOW(1)
00079d c0fc      	RJMP _0x206001B
                 _0x2060021:
00079e 322b      	CPI  R18,43
00079f f411      	BRNE _0x2060022
0007a0 e24b      	LDI  R20,LOW(43)
0007a1 c0f8      	RJMP _0x206001B
                 _0x2060022:
0007a2 3220      	CPI  R18,32
0007a3 f411      	BRNE _0x2060023
0007a4 e240      	LDI  R20,LOW(32)
0007a5 c0f4      	RJMP _0x206001B
                 _0x2060023:
0007a6 c002      	RJMP _0x2060024
                 _0x206001F:
0007a7 30e2      	CPI  R30,LOW(0x2)
0007a8 f439      	BRNE _0x2060025
                 _0x2060024:
0007a9 e050      	LDI  R21,LOW(0)
0007aa e013      	LDI  R17,LOW(3)
0007ab 3320      	CPI  R18,48
0007ac f411      	BRNE _0x2060026
0007ad 6800      	ORI  R16,LOW(128)
0007ae c0eb      	RJMP _0x206001B
                 _0x2060026:
0007af c003      	RJMP _0x2060027
                 _0x2060025:
0007b0 30e3      	CPI  R30,LOW(0x3)
0007b1 f009      	BREQ PC+2
0007b2 c0e7      	RJMP _0x206001B
                 _0x2060027:
0007b3 3320      	CPI  R18,48
0007b4 f010      	BRLO _0x206002A
0007b5 332a      	CPI  R18,58
0007b6 f008      	BRLO _0x206002B
                 _0x206002A:
0007b7 c007      	RJMP _0x2060029
                 _0x206002B:
0007b8 e0aa      	LDI  R26,LOW(10)
0007b9 9f5a      	MUL  R21,R26
0007ba 2d50      	MOV  R21,R0
0007bb 2fe2      	MOV  R30,R18
0007bc 53e0      	SUBI R30,LOW(48)
0007bd 0f5e      	ADD  R21,R30
0007be c0db      	RJMP _0x206001B
                 _0x2060029:
0007bf 2fe2      	MOV  R30,R18
0007c0 36e3      	CPI  R30,LOW(0x63)
0007c1 f449      	BRNE _0x206002F
0007c2 940e 0aae 	CALL SUBOPT_0x13
0007c4 89e8      	LDD  R30,Y+16
0007c5 89f9      	LDD  R31,Y+16+1
0007c6 81a4      	LDD  R26,Z+4
0007c7 93aa      	ST   -Y,R26
0007c8 940e 0ab4 	CALL SUBOPT_0x14
0007ca c0ce      	RJMP _0x2060030
                 _0x206002F:
0007cb 37e3      	CPI  R30,LOW(0x73)
0007cc f441      	BRNE _0x2060032
0007cd 940e 0aae 	CALL SUBOPT_0x13
0007cf 940e 0aba 	CALL SUBOPT_0x15
0007d1 940e 0994 	CALL _strlen
0007d3 2f1e      	MOV  R17,R30
0007d4 c00a      	RJMP _0x2060033
                 _0x2060032:
0007d5 37e0      	CPI  R30,LOW(0x70)
0007d6 f461      	BRNE _0x2060035
0007d7 940e 0aae 	CALL SUBOPT_0x13
0007d9 940e 0aba 	CALL SUBOPT_0x15
0007db 940e 09a0 	CALL _strlenf
0007dd 2f1e      	MOV  R17,R30
0007de 6008      	ORI  R16,LOW(8)
                 _0x2060033:
0007df 6002      	ORI  R16,LOW(2)
0007e0 770f      	ANDI R16,LOW(127)
0007e1 e030      	LDI  R19,LOW(0)
0007e2 c034      	RJMP _0x2060036
                 _0x2060035:
0007e3 36e4      	CPI  R30,LOW(0x64)
0007e4 f011      	BREQ _0x2060039
0007e5 36e9      	CPI  R30,LOW(0x69)
0007e6 f411      	BRNE _0x206003A
                 _0x2060039:
0007e7 6004      	ORI  R16,LOW(4)
0007e8 c002      	RJMP _0x206003B
                 _0x206003A:
0007e9 37e5      	CPI  R30,LOW(0x75)
0007ea f431      	BRNE _0x206003C
                 _0x206003B:
0007eb e7ea      	LDI  R30,LOW(_tbl10_G103*2)
0007ec e0f2      	LDI  R31,HIGH(_tbl10_G103*2)
0007ed 83ee      	STD  Y+6,R30
0007ee 83ff      	STD  Y+6+1,R31
0007ef e015      	LDI  R17,LOW(5)
0007f0 c00c      	RJMP _0x206003D
                 _0x206003C:
0007f1 35e8      	CPI  R30,LOW(0x58)
0007f2 f411      	BRNE _0x206003F
0007f3 6008      	ORI  R16,LOW(8)
0007f4 c003      	RJMP _0x2060040
                 _0x206003F:
0007f5 37e8      	CPI  R30,LOW(0x78)
0007f6 f009      	BREQ PC+2
0007f7 c0a1      	RJMP _0x2060071
                 _0x2060040:
0007f8 e8e4      	LDI  R30,LOW(_tbl16_G103*2)
0007f9 e0f2      	LDI  R31,HIGH(_tbl16_G103*2)
0007fa 83ee      	STD  Y+6,R30
0007fb 83ff      	STD  Y+6+1,R31
0007fc e014      	LDI  R17,LOW(4)
                 _0x206003D:
0007fd ff02      	SBRS R16,2
0007fe c014      	RJMP _0x2060042
0007ff 940e 0aae 	CALL SUBOPT_0x13
000801 940e 0ac4 	CALL SUBOPT_0x16
000803 85ab      	LDD  R26,Y+11
000804 23aa      	TST  R26
000805 f43a      	BRPL _0x2060043
000806 85ea      	LDD  R30,Y+10
000807 85fb      	LDD  R31,Y+10+1
000808 940e 0aef 	CALL __ANEGW1
00080a 87ea      	STD  Y+10,R30
00080b 87fb      	STD  Y+10+1,R31
00080c e24d      	LDI  R20,LOW(45)
                 _0x2060043:
00080d 3040      	CPI  R20,0
00080e f011      	BREQ _0x2060044
00080f 5f1f      	SUBI R17,-LOW(1)
000810 c001      	RJMP _0x2060045
                 _0x2060044:
000811 7f0b      	ANDI R16,LOW(251)
                 _0x2060045:
000812 c004      	RJMP _0x2060046
                 _0x2060042:
000813 940e 0aae 	CALL SUBOPT_0x13
000815 940e 0ac4 	CALL SUBOPT_0x16
                 _0x2060046:
                 _0x2060036:
000817 fd00      	SBRC R16,0
000818 c011      	RJMP _0x2060047
                 _0x2060048:
000819 1715      	CP   R17,R21
00081a f478      	BRSH _0x206004A
00081b ff07      	SBRS R16,7
00081c c008      	RJMP _0x206004B
00081d ff02      	SBRS R16,2
00081e c004      	RJMP _0x206004C
00081f 7f0b      	ANDI R16,LOW(251)
000820 2f24      	MOV  R18,R20
000821 5011      	SUBI R17,LOW(1)
000822 c001      	RJMP _0x206004D
                 _0x206004C:
000823 e320      	LDI  R18,LOW(48)
                 _0x206004D:
000824 c001      	RJMP _0x206004E
                 _0x206004B:
000825 e220      	LDI  R18,LOW(32)
                 _0x206004E:
000826 940e 0aa7 	CALL SUBOPT_0x12
000828 5051      	SUBI R21,LOW(1)
000829 cfef      	RJMP _0x2060048
                 _0x206004A:
                 _0x2060047:
00082a 2f31      	MOV  R19,R17
00082b ff01      	SBRS R16,1
00082c c017      	RJMP _0x206004F
                 _0x2060050:
00082d 3030      	CPI  R19,0
00082e f0a1      	BREQ _0x2060052
00082f ff03      	SBRS R16,3
000830 c006      	RJMP _0x2060053
000831 81ee      	LDD  R30,Y+6
000832 81ff      	LDD  R31,Y+6+1
000833 9125      	LPM  R18,Z+
000834 83ee      	STD  Y+6,R30
000835 83ff      	STD  Y+6+1,R31
000836 c005      	RJMP _0x2060054
                 _0x2060053:
000837 81ae      	LDD  R26,Y+6
000838 81bf      	LDD  R27,Y+6+1
000839 912d      	LD   R18,X+
00083a 83ae      	STD  Y+6,R26
00083b 83bf      	STD  Y+6+1,R27
                 _0x2060054:
00083c 940e 0aa7 	CALL SUBOPT_0x12
00083e 3050      	CPI  R21,0
00083f f009      	BREQ _0x2060055
000840 5051      	SUBI R21,LOW(1)
                 _0x2060055:
000841 5031      	SUBI R19,LOW(1)
000842 cfea      	RJMP _0x2060050
                 _0x2060052:
000843 c04b      	RJMP _0x2060056
                 _0x206004F:
                 _0x2060058:
000844 e320      	LDI  R18,LOW(48)
000845 81ee      	LDD  R30,Y+6
000846 81ff      	LDD  R31,Y+6+1
000847 940e 0b3a 	CALL __GETW1PF
000849 87e8      	STD  Y+8,R30
00084a 87f9      	STD  Y+8+1,R31
00084b 81ee      	LDD  R30,Y+6
00084c 81ff      	LDD  R31,Y+6+1
00084d 9632      	ADIW R30,2
00084e 83ee      	STD  Y+6,R30
00084f 83ff      	STD  Y+6+1,R31
                 _0x206005A:
000850 85e8      	LDD  R30,Y+8
000851 85f9      	LDD  R31,Y+8+1
000852 85aa      	LDD  R26,Y+10
000853 85bb      	LDD  R27,Y+10+1
000854 17ae      	CP   R26,R30
000855 07bf      	CPC  R27,R31
000856 f050      	BRLO _0x206005C
000857 5f2f      	SUBI R18,-LOW(1)
000858 85a8      	LDD  R26,Y+8
000859 85b9      	LDD  R27,Y+8+1
00085a 85ea      	LDD  R30,Y+10
00085b 85fb      	LDD  R31,Y+10+1
00085c 1bea      	SUB  R30,R26
00085d 0bfb      	SBC  R31,R27
00085e 87ea      	STD  Y+10,R30
00085f 87fb      	STD  Y+10+1,R31
000860 cfef      	RJMP _0x206005A
                 _0x206005C:
000861 332a      	CPI  R18,58
000862 f028      	BRLO _0x206005D
000863 ff03      	SBRS R16,3
000864 c002      	RJMP _0x206005E
000865 5f29      	SUBI R18,-LOW(7)
000866 c001      	RJMP _0x206005F
                 _0x206005E:
000867 5d29      	SUBI R18,-LOW(39)
                 _0x206005F:
                 _0x206005D:
000868 fd04      	SBRC R16,4
000869 c01a      	RJMP _0x2060061
00086a 3321      	CPI  R18,49
00086b f420      	BRSH _0x2060063
00086c 85a8      	LDD  R26,Y+8
00086d 85b9      	LDD  R27,Y+8+1
00086e 9711      	SBIW R26,1
00086f f409      	BRNE _0x2060062
                 _0x2060063:
000870 c009      	RJMP _0x20600CD
                 _0x2060062:
000871 1753      	CP   R21,R19
000872 f010      	BRLO _0x2060067
000873 ff00      	SBRS R16,0
000874 c001      	RJMP _0x2060068
                 _0x2060067:
000875 c013      	RJMP _0x2060066
                 _0x2060068:
000876 e220      	LDI  R18,LOW(32)
000877 ff07      	SBRS R16,7
000878 c00b      	RJMP _0x2060069
000879 e320      	LDI  R18,LOW(48)
                 _0x20600CD:
00087a 6100      	ORI  R16,LOW(16)
00087b ff02      	SBRS R16,2
00087c c007      	RJMP _0x206006A
00087d 7f0b      	ANDI R16,LOW(251)
00087e 934a      	ST   -Y,R20
00087f 940e 0ab4 	CALL SUBOPT_0x14
000881 3050      	CPI  R21,0
000882 f009      	BREQ _0x206006B
000883 5051      	SUBI R21,LOW(1)
                 _0x206006B:
                 _0x206006A:
                 _0x2060069:
                 _0x2060061:
000884 940e 0aa7 	CALL SUBOPT_0x12
000886 3050      	CPI  R21,0
000887 f009      	BREQ _0x206006C
000888 5051      	SUBI R21,LOW(1)
                 _0x206006C:
                 _0x2060066:
000889 5031      	SUBI R19,LOW(1)
00088a 85a8      	LDD  R26,Y+8
00088b 85b9      	LDD  R27,Y+8+1
00088c 9712      	SBIW R26,2
00088d f008      	BRLO _0x2060059
00088e cfb5      	RJMP _0x2060058
                 _0x2060059:
                 _0x2060056:
00088f ff00      	SBRS R16,0
000890 c008      	RJMP _0x206006D
                 _0x206006E:
000891 3050      	CPI  R21,0
000892 f031      	BREQ _0x2060070
000893 5051      	SUBI R21,LOW(1)
000894 e2e0      	LDI  R30,LOW(32)
000895 93ea      	ST   -Y,R30
000896 940e 0ab4 	CALL SUBOPT_0x14
000898 cff8      	RJMP _0x206006E
                 _0x2060070:
                 _0x206006D:
                 _0x2060071:
                 _0x2060030:
                 _0x20600CC:
000899 e010      	LDI  R17,LOW(0)
                 _0x206001B:
00089a cee0      	RJMP _0x2060016
                 _0x2060018:
00089b 85ac      	LDD  R26,Y+12
00089c 85bd      	LDD  R27,Y+12+1
00089d 940e 0b36 	CALL __GETW1P
00089f 940e 0b6b 	CALL __LOADLOCR6
0008a1 9664      	ADIW R28,20
0008a2 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0008a3 92ff      	PUSH R15
0008a4 2ef8      	MOV  R15,R24
0008a5 9726      	SBIW R28,6
0008a6 940e 0b66 	CALL __SAVELOCR4
0008a8 940e 0acc 	CALL SUBOPT_0x17
0008aa 9730      	SBIW R30,0
0008ab f419      	BRNE _0x2060072
0008ac efef      	LDI  R30,LOW(65535)
0008ad efff      	LDI  R31,HIGH(65535)
0008ae c023      	RJMP _0x2140005
                 _0x2060072:
0008af 01de      	MOVW R26,R28
0008b0 9616      	ADIW R26,6
0008b1 940e 0aeb 	CALL __ADDW2R15
0008b3 018d      	MOVW R16,R26
0008b4 940e 0acc 	CALL SUBOPT_0x17
0008b6 83ee      	STD  Y+6,R30
0008b7 83ff      	STD  Y+6+1,R31
0008b8 e0e0      	LDI  R30,LOW(0)
0008b9 87e8      	STD  Y+8,R30
0008ba 87e9      	STD  Y+8+1,R30
0008bb 01de      	MOVW R26,R28
0008bc 961a      	ADIW R26,10
0008bd 940e 0aeb 	CALL __ADDW2R15
0008bf 940e 0b36 	CALL __GETW1P
0008c1 93fa      	ST   -Y,R31
0008c2 93ea      	ST   -Y,R30
0008c3 931a      	ST   -Y,R17
0008c4 930a      	ST   -Y,R16
0008c5 e2ef      	LDI  R30,LOW(_put_buff_G103)
0008c6 e0f7      	LDI  R31,HIGH(_put_buff_G103)
0008c7 93fa      	ST   -Y,R31
0008c8 93ea      	ST   -Y,R30
0008c9 01de      	MOVW R26,R28
0008ca 961a      	ADIW R26,10
0008cb dea3      	RCALL __print_G103
0008cc 019f      	MOVW R18,R30
0008cd 81ae      	LDD  R26,Y+6
0008ce 81bf      	LDD  R27,Y+6+1
0008cf e0e0      	LDI  R30,LOW(0)
0008d0 93ec      	ST   X,R30
0008d1 01f9      	MOVW R30,R18
                 _0x2140005:
0008d2 940e 0b6d 	CALL __LOADLOCR4
0008d4 962a      	ADIW R28,10
0008d5 90ff      	POP  R15
0008d6 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G104:
                 ; .FSTART __lcd_write_nibble_G104
0008d7 93aa      	ST   -Y,R26
0008d8 81e8      	LD   R30,Y
0008d9 71e0      	ANDI R30,LOW(0x10)
0008da f011      	BREQ _0x2080004
0008db 9adb      	SBI  0x1B,3
0008dc c001      	RJMP _0x2080005
                 _0x2080004:
0008dd 98db      	CBI  0x1B,3
                 _0x2080005:
0008de 81e8      	LD   R30,Y
0008df 72e0      	ANDI R30,LOW(0x20)
0008e0 f011      	BREQ _0x2080006
0008e1 9adc      	SBI  0x1B,4
0008e2 c001      	RJMP _0x2080007
                 _0x2080006:
0008e3 98dc      	CBI  0x1B,4
                 _0x2080007:
0008e4 81e8      	LD   R30,Y
0008e5 74e0      	ANDI R30,LOW(0x40)
0008e6 f011      	BREQ _0x2080008
0008e7 9add      	SBI  0x1B,5
0008e8 c001      	RJMP _0x2080009
                 _0x2080008:
0008e9 98dd      	CBI  0x1B,5
                 _0x2080009:
0008ea 81e8      	LD   R30,Y
0008eb 78e0      	ANDI R30,LOW(0x80)
0008ec f011      	BREQ _0x208000A
0008ed 9ade      	SBI  0x1B,6
0008ee c001      	RJMP _0x208000B
                 _0x208000A:
0008ef 98de      	CBI  0x1B,6
                 _0x208000B:
                +
0008f0 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0008f1 958a     +DEC R24
0008f2 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0008f3 9ada      	SBI  0x1B,2
                +
0008f4 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0008f5 958a     +DEC R24
0008f6 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0008f7 98da      	CBI  0x1B,2
                +
0008f8 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0008f9 958a     +DEC R24
0008fa f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0008fb c086      	RJMP _0x2140004
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0008fc 93aa      	ST   -Y,R26
0008fd 81a8      	LD   R26,Y
0008fe dfd8      	RCALL __lcd_write_nibble_G104
0008ff 81e8          ld    r30,y
000900 95e2          swap  r30
000901 83e8          st    y,r30
000902 81a8      	LD   R26,Y
000903 dfd3      	RCALL __lcd_write_nibble_G104
                +
000904 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
000905 958a     +DEC R24
000906 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
000907 c07a      	RJMP _0x2140004
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000908 93aa      	ST   -Y,R26
000909 81e8      	LD   R30,Y
00090a e0f0      	LDI  R31,0
00090b 5ce6      	SUBI R30,LOW(-__base_y_G104)
00090c 4ff8      	SBCI R31,HIGH(-__base_y_G104)
00090d 81e0      	LD   R30,Z
00090e 81a9      	LDD  R26,Y+1
00090f 0fae      	ADD  R26,R30
000910 dfeb      	RCALL __lcd_write_data
000911 8069      	LDD  R6,Y+1
000912 80b8      	LDD  R11,Y+0
000913 940c 09b6 	JMP  _0x2140002
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000915 e0a2      	LDI  R26,LOW(2)
000916 940e 0ad3 	CALL SUBOPT_0x18
000918 e0ac      	LDI  R26,LOW(12)
000919 dfe2      	RCALL __lcd_write_data
00091a e0a1      	LDI  R26,LOW(1)
00091b 940e 0ad3 	CALL SUBOPT_0x18
00091d e0e0      	LDI  R30,LOW(0)
00091e 2ebe      	MOV  R11,R30
00091f 2e6e      	MOV  R6,R30
000920 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000921 93aa      	ST   -Y,R26
000922 81a8      	LD   R26,Y
000923 30aa      	CPI  R26,LOW(0xA)
000924 f011      	BREQ _0x2080011
000925 146a      	CP   R6,R10
000926 f048      	BRLO _0x2080010
                 _0x2080011:
000927 e0e0      	LDI  R30,LOW(0)
000928 93ea      	ST   -Y,R30
000929 94b3      	INC  R11
00092a 2dab      	MOV  R26,R11
00092b dfdc      	RCALL _lcd_gotoxy
00092c 81a8      	LD   R26,Y
00092d 30aa      	CPI  R26,LOW(0xA)
00092e f409      	BRNE _0x2080013
00092f c052      	RJMP _0x2140004
                 _0x2080013:
                 _0x2080010:
000930 9463      	INC  R6
000931 9ad8      	SBI  0x1B,0
000932 81a8      	LD   R26,Y
000933 dfc8      	RCALL __lcd_write_data
000934 98d8      	CBI  0x1B,0
000935 c04c      	RJMP _0x2140004
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000936 93ba      	ST   -Y,R27
000937 93aa      	ST   -Y,R26
000938 931a      	ST   -Y,R17
                 _0x2080014:
000939 940e 0a9f 	CALL SUBOPT_0x11
00093b f019      	BREQ _0x2080016
00093c 2fa1      	MOV  R26,R17
00093d dfe3      	RCALL _lcd_putchar
00093e cffa      	RJMP _0x2080014
                 _0x2080016:
00093f 8118      	LDD  R17,Y+0
000940 940c 09fd 	JMP  _0x2140001
                 ; .FEND
                 _lcd_putsf:
                 ; .FSTART _lcd_putsf
000942 93ba      	ST   -Y,R27
000943 93aa      	ST   -Y,R26
000944 931a      	ST   -Y,R17
                 _0x2080017:
000945 81e9      	LDD  R30,Y+1
000946 81fa      	LDD  R31,Y+1+1
000947 9631      	ADIW R30,1
000948 83e9      	STD  Y+1,R30
000949 83fa      	STD  Y+1+1,R31
00094a 9731      	SBIW R30,1
00094b 91e4      	LPM  R30,Z
00094c 2f1e      	MOV  R17,R30
00094d 30e0      	CPI  R30,0
00094e f019      	BREQ _0x2080019
00094f 2fa1      	MOV  R26,R17
000950 dfd0      	RCALL _lcd_putchar
000951 cff3      	RJMP _0x2080017
                 _0x2080019:
000952 8118      	LDD  R17,Y+0
000953 940c 09fd 	JMP  _0x2140001
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000955 93aa      	ST   -Y,R26
000956 9ad3      	SBI  0x1A,3
000957 9ad4      	SBI  0x1A,4
000958 9ad5      	SBI  0x1A,5
000959 9ad6      	SBI  0x1A,6
00095a 9ad2      	SBI  0x1A,2
00095b 9ad0      	SBI  0x1A,0
00095c 9ad1      	SBI  0x1A,1
00095d 98da      	CBI  0x1B,2
00095e 98d8      	CBI  0x1B,0
00095f 98d9      	CBI  0x1B,1
000960 80a8      	LDD  R10,Y+0
000961 81e8      	LD   R30,Y
000962 58e0      	SUBI R30,-LOW(128)
                +
000963 93e0 073c+STS __base_y_G104 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G104,2
000965 81e8      	LD   R30,Y
000966 54e0      	SUBI R30,-LOW(192)
                +
000967 93e0 073d+STS __base_y_G104 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G104,3
000969 e1a4      	LDI  R26,LOW(20)
00096a e0b0      	LDI  R27,0
00096b 940e 0ae1 	CALL _delay_ms
00096d 940e 0ad9 	CALL SUBOPT_0x19
00096f 940e 0ad9 	CALL SUBOPT_0x19
000971 940e 0ad9 	CALL SUBOPT_0x19
000973 e2a0      	LDI  R26,LOW(32)
000974 df62      	RCALL __lcd_write_nibble_G104
                +
000975 ec88     +LDI R24 , LOW ( 200 )
000976 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000977 9701     +SBIW R24 , 1
000978 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000979 e2a8      	LDI  R26,LOW(40)
00097a df81      	RCALL __lcd_write_data
00097b e0a4      	LDI  R26,LOW(4)
00097c df7f      	RCALL __lcd_write_data
00097d e8a5      	LDI  R26,LOW(133)
00097e df7d      	RCALL __lcd_write_data
00097f e0a6      	LDI  R26,LOW(6)
000980 df7b      	RCALL __lcd_write_data
000981 df93      	RCALL _lcd_clear
                 _0x2140004:
000982 9621      	ADIW R28,1
000983 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
000984 93ba      	ST   -Y,R27
000985 93aa      	ST   -Y,R26
000986 81b9          ldd  r27,y+1
000987 81a8          ld   r26,y
000988 9610          adiw r26,0
000989 f031          breq memset1
00098a 81fc          ldd  r31,y+4
00098b 81eb          ldd  r30,y+3
00098c 816a          ldd  r22,y+2
                 memset0:
00098d 9361          st   z+,r22
00098e 9711          sbiw r26,1
00098f f7e9          brne memset0
                 memset1:
000990 81eb          ldd  r30,y+3
000991 81fc          ldd  r31,y+4
                 _0x2140003:
000992 9625      	ADIW R28,5
000993 9508      	RET
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
000994 93ba      	ST   -Y,R27
000995 93aa      	ST   -Y,R26
000996 91a9          ld   r26,y+
000997 91b9          ld   r27,y+
000998 27ee          clr  r30
000999 27ff          clr  r31
                 strlen0:
00099a 916d          ld   r22,x+
00099b 2366          tst  r22
00099c f011          breq strlen1
00099d 9631          adiw r30,1
00099e cffb          rjmp strlen0
                 strlen1:
00099f 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0009a0 93ba      	ST   -Y,R27
0009a1 93aa      	ST   -Y,R26
0009a2 27aa          clr  r26
0009a3 27bb          clr  r27
0009a4 91e9          ld   r30,y+
0009a5 91f9          ld   r31,y+
                 strlenf0:
0009a6 9005      	lpm  r0,z+
0009a7 2000          tst  r0
0009a8 f011          breq strlenf1
0009a9 9611          adiw r26,1
0009aa cffb          rjmp strlenf0
                 strlenf1:
0009ab 01fd          movw r30,r26
0009ac 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
0009ad 93aa      	ST   -Y,R26
0009ae 81e8      	LD   R30,Y
0009af e0f0      	LDI  R31,0
0009b0 59e0      	SUBI R30,LOW(-__glcd_mask*2)
0009b1 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
0009b2 91a4      	LPM  R26,Z
0009b3 81e9      	LDD  R30,Y+1
0009b4 940e 0af3 	CALL __LSLB12
                 _0x2140002:
0009b6 9622      	ADIW R28,2
0009b7 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
0009b8 93aa      	ST   -Y,R26
0009b9 931a      	ST   -Y,R17
0009ba 81e9      	LDD  R30,Y+1
0009bb 30e7      	CPI  R30,LOW(0x7)
0009bc f011      	BREQ _0x20C0007
0009bd 30ea      	CPI  R30,LOW(0xA)
0009be f419      	BRNE _0x20C0008
                 _0x20C0007:
0009bf 9110 0513 	LDS  R17,_glcd_state
0009c1 c009      	RJMP _0x20C0009
                 _0x20C0008:
0009c2 30e9      	CPI  R30,LOW(0x9)
0009c3 f419      	BRNE _0x20C000B
                +
0009c4 9110 0514+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
0009c6 c004      	RJMP _0x20C0009
                 _0x20C000B:
0009c7 30e8      	CPI  R30,LOW(0x8)
0009c8 f4a1      	BRNE _0x20C0005
                +
0009c9 9110 0523+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x20C0009:
                +
0009cb 91e0 0514+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
0009cd 30e0      	CPI  R30,0
0009ce f049      	BREQ _0x20C000E
0009cf 3010      	CPI  R17,0
0009d0 f019      	BREQ _0x20C000F
0009d1 efef      	LDI  R30,LOW(255)
0009d2 8118      	LDD  R17,Y+0
0009d3 c029      	RJMP _0x2140001
                 _0x20C000F:
0009d4 81ea      	LDD  R30,Y+2
0009d5 95e0      	COM  R30
0009d6 8118      	LDD  R17,Y+0
0009d7 c025      	RJMP _0x2140001
                 _0x20C000E:
0009d8 3010      	CPI  R17,0
0009d9 f419      	BRNE _0x20C0011
0009da e0e0      	LDI  R30,LOW(0)
0009db 8118      	LDD  R17,Y+0
0009dc c020      	RJMP _0x2140001
                 _0x20C0011:
                 _0x20C0005:
0009dd 81ea      	LDD  R30,Y+2
0009de 8118      	LDD  R17,Y+0
0009df c01d      	RJMP _0x2140001
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
0009e0 93ba      	ST   -Y,R27
0009e1 93aa      	ST   -Y,R26
0009e2 81ea      	LDD  R30,Y+2
0009e3 30e1      	CPI  R30,LOW(0x1)
0009e4 f421      	BRNE _0x20C0015
0009e5 81e8      	LD   R30,Y
0009e6 81f9      	LDD  R31,Y+1
0009e7 91e4      	LPM  R30,Z
0009e8 c014      	RJMP _0x2140001
                 _0x20C0015:
0009e9 30e2      	CPI  R30,LOW(0x2)
0009ea f429      	BRNE _0x20C0016
0009eb 81a8      	LD   R26,Y
0009ec 81b9      	LDD  R27,Y+1
0009ed 940e 0b43 	CALL __EEPROMRDB
0009ef c00d      	RJMP _0x2140001
                 _0x20C0016:
0009f0 30e3      	CPI  R30,LOW(0x3)
0009f1 f441      	BRNE _0x20C0018
0009f2 81a8      	LD   R26,Y
0009f3 81b9      	LDD  R27,Y+1
                +
0009f4 91e0 052c+LDS R30 , _glcd_state + ( 25 )
0009f6 91f0 052d+LDS R31 , _glcd_state + ( 25 ) + 1
0009f8 9509     +ICALL
                 	__CALL1MN _glcd_state,25
0009f9 c003      	RJMP _0x2140001
                 _0x20C0018:
0009fa 81a8      	LD   R26,Y
0009fb 81b9      	LDD  R27,Y+1
0009fc 91ec      	LD   R30,X
                 _0x2140001:
0009fd 9623      	ADIW R28,3
0009fe 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
0009ff 93aa      	ST   -Y,R26
000a00 81eb      	LDD  R30,Y+3
000a01 30e0      	CPI  R30,0
000a02 f429      	BRNE _0x20C001C
000a03 81e8      	LD   R30,Y
000a04 81a9      	LDD  R26,Y+1
000a05 81ba      	LDD  R27,Y+1+1
000a06 93ec      	ST   X,R30
000a07 c014      	RJMP _0x20C001B
                 _0x20C001C:
000a08 30e2      	CPI  R30,LOW(0x2)
000a09 f431      	BRNE _0x20C001D
000a0a 81e8      	LD   R30,Y
000a0b 81a9      	LDD  R26,Y+1
000a0c 81ba      	LDD  R27,Y+1+1
000a0d 940e 0b4f 	CALL __EEPROMWRB
000a0f c00c      	RJMP _0x20C001B
                 _0x20C001D:
000a10 30e3      	CPI  R30,LOW(0x3)
000a11 f451      	BRNE _0x20C001B
000a12 81e9      	LDD  R30,Y+1
000a13 81fa      	LDD  R31,Y+1+1
000a14 93fa      	ST   -Y,R31
000a15 93ea      	ST   -Y,R30
000a16 81aa      	LDD  R26,Y+2
                +
000a17 91e0 052e+LDS R30 , _glcd_state + ( 27 )
000a19 91f0 052f+LDS R31 , _glcd_state + ( 27 ) + 1
000a1b 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x20C001B:
000a1c 9624      	ADIW R28,4
000a1d 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _glcd_state:
000513           	.BYTE 0x1D
                 _speedText:
000530           	.BYTE 0x10
                 _gfx_addr_G100:
000540           	.BYTE 0x2
                 _gfx_buffer_G100:
000542           	.BYTE 0x1F8
                 __base_y_G104:
00073a           	.BYTE 0x4
                 __seed_G109:
00073e           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
                +
000a1e 5f0f     +SUBI R16 , LOW ( - 1 )
000a1f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000a20 eea8      	LDI  R26,LOW(1000)
000a21 e0b3      	LDI  R27,HIGH(1000)
000a22 940c 0ae1 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1:
000a24 e4a0      	LDI  R26,LOW(_gfx_addr_G100)
000a25 e0b5      	LDI  R27,HIGH(_gfx_addr_G100)
000a26 91ed      	LD   R30,X+
000a27 91fd      	LD   R31,X+
000a28 9631      	ADIW R30,1
000a29 93fe      	ST   -X,R31
000a2a 93ee      	ST   -X,R30
000a2b 9731      	SBIW R30,1
000a2c 5bee      	SUBI R30,LOW(-_gfx_buffer_G100)
000a2d 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G100)
000a2e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
000a2f 93e0 0064 	STS  100,R30
000a31 91e0 0065 	LDS  R30,101
000a33 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
000a34 0fea      	ADD  R30,R26
000a35 1ffb      	ADC  R31,R27
000a36 83ee      	STD  Y+6,R30
000a37 83ff      	STD  Y+6+1,R31
000a38 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x4:
000a39 85ec      	LDD  R30,Y+12
000a3a 93ea      	ST   -Y,R30
000a3b 81ef      	LDD  R30,Y+7
000a3c 85f8      	LDD  R31,Y+7+1
000a3d 9631      	ADIW R30,1
000a3e 83ef      	STD  Y+7,R30
000a3f 87f8      	STD  Y+7+1,R31
000a40 9731      	SBIW R30,1
000a41 93fa      	ST   -Y,R31
000a42 93ea      	ST   -Y,R30
000a43 e0a0      	LDI  R26,LOW(0)
000a44 940c 09ff 	JMP  _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
000a46 930a      	ST   -Y,R16
000a47 89a8      	LDD  R26,Y+16
000a48 940c 02ed 	JMP  _pcd8544_setaddr_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x6:
000a4a 85ec      	LDD  R30,Y+12
000a4b 93ea      	ST   -Y,R30
000a4c 81ef      	LDD  R30,Y+7
000a4d 85f8      	LDD  R31,Y+7+1
000a4e 9631      	ADIW R30,1
000a4f 83ef      	STD  Y+7,R30
000a50 87f8      	STD  Y+7+1,R31
000a51 9731      	SBIW R30,1
000a52 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x7:
000a53 2766      	CLR  R22
000a54 2777      	CLR  R23
000a55 01df      	MOVW R26,R30
000a56 01cb      	MOVW R24,R22
000a57 940c 09e0 	JMP  _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
000a59 935a      	ST   -Y,R21
000a5a 85aa      	LDD  R26,Y+10
000a5b 940c 09b8 	JMP  _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9:
000a5d 930a      	ST   -Y,R16
000a5e 9503      	INC  R16
000a5f 89e8      	LDD  R30,Y+16
000a60 93ea      	ST   -Y,R30
000a61 935a      	ST   -Y,R21
000a62 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA:
000a63 2f5e      	MOV  R21,R30
000a64 85ec      	LDD  R30,Y+12
000a65 93ea      	ST   -Y,R30
000a66 81af      	LDD  R26,Y+7
000a67 85b8      	LDD  R27,Y+7+1
000a68 2788      	CLR  R24
000a69 2799      	CLR  R25
000a6a 940e 09e0 	CALL _glcd_readmem
000a6c 2e1e      	MOV  R1,R30
000a6d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xB:
000a6e 930a      	ST   -Y,R16
000a6f 9503      	INC  R16
000a70 89e8      	LDD  R30,Y+16
000a71 93ea      	ST   -Y,R30
000a72 85ee      	LDD  R30,Y+14
000a73 93ea      	ST   -Y,R30
000a74 85e9      	LDD  R30,Y+9
000a75 85fa      	LDD  R31,Y+9+1
000a76 9631      	ADIW R30,1
000a77 87e9      	STD  Y+9,R30
000a78 87fa      	STD  Y+9+1,R31
000a79 9731      	SBIW R30,1
000a7a cfd8      	RJMP SUBOPT_0x7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
000a7b 93ba      	ST   -Y,R27
000a7c 93aa      	ST   -Y,R26
000a7d 81a8      	LD   R26,Y
000a7e 81b9      	LDD  R27,Y+1
000a7f 940e 0b60 	CALL __CPW02
000a81 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
000a82 940e 0b64 	CALL __SAVELOCR6
                +
000a84 91e0 0517+LDS R30 , _glcd_state + ( 4 )
000a86 91f0 0518+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000a88 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
000a89 01f8      	MOVW R30,R16
                +
000a8a 5f0f     +SUBI R16 , LOW ( - 1 )
000a8b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000a8c 9004      	LPM  R0,Z
000a8d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xF:
                +
000a8e 91e0 0517+LDS R30 , _glcd_state + ( 4 )
000a90 91f0 0518+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000a92 9631      	ADIW R30,1
000a93 91e4      	LPM  R30,Z
000a94 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x10:
000a95 93ea      	ST   -Y,R30
000a96 e0e0      	LDI  R30,LOW(0)
000a97 93ea      	ST   -Y,R30
000a98 e0e0      	LDI  R30,LOW(0)
000a99 e0f0      	LDI  R31,HIGH(0)
000a9a 93fa      	ST   -Y,R31
000a9b 93ea      	ST   -Y,R30
000a9c e0a9      	LDI  R26,LOW(9)
000a9d 940c 0424 	JMP  _glcd_block
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x11:
000a9f 81a9      	LDD  R26,Y+1
000aa0 81ba      	LDD  R27,Y+1+1
000aa1 91ed      	LD   R30,X+
000aa2 83a9      	STD  Y+1,R26
000aa3 83ba      	STD  Y+1+1,R27
000aa4 2f1e      	MOV  R17,R30
000aa5 30e0      	CPI  R30,0
000aa6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x12:
000aa7 932a      	ST   -Y,R18
000aa8 85ad      	LDD  R26,Y+13
000aa9 85be      	LDD  R27,Y+13+1
000aaa 85ef      	LDD  R30,Y+15
000aab 89f8      	LDD  R31,Y+15+1
000aac 9509      	ICALL
000aad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x13:
000aae 89e8      	LDD  R30,Y+16
000aaf 89f9      	LDD  R31,Y+16+1
000ab0 9734      	SBIW R30,4
000ab1 8be8      	STD  Y+16,R30
000ab2 8bf9      	STD  Y+16+1,R31
000ab3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x14:
000ab4 85ad      	LDD  R26,Y+13
000ab5 85be      	LDD  R27,Y+13+1
000ab6 85ef      	LDD  R30,Y+15
000ab7 89f8      	LDD  R31,Y+15+1
000ab8 9509      	ICALL
000ab9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x15:
000aba 89a8      	LDD  R26,Y+16
000abb 89b9      	LDD  R27,Y+16+1
000abc 9614      	ADIW R26,4
000abd 940e 0b36 	CALL __GETW1P
000abf 83ee      	STD  Y+6,R30
000ac0 83ff      	STD  Y+6+1,R31
000ac1 81ae      	LDD  R26,Y+6
000ac2 81bf      	LDD  R27,Y+6+1
000ac3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x16:
000ac4 89a8      	LDD  R26,Y+16
000ac5 89b9      	LDD  R27,Y+16+1
000ac6 9614      	ADIW R26,4
000ac7 940e 0b36 	CALL __GETW1P
000ac9 87ea      	STD  Y+10,R30
000aca 87fb      	STD  Y+10+1,R31
000acb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x17:
000acc 01de      	MOVW R26,R28
000acd 961c      	ADIW R26,12
000ace 940e 0aeb 	CALL __ADDW2R15
000ad0 940e 0b36 	CALL __GETW1P
000ad2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18:
000ad3 940e 08fc 	CALL __lcd_write_data
000ad5 e0a3      	LDI  R26,LOW(3)
000ad6 e0b0      	LDI  R27,0
000ad7 940c 0ae1 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x19:
000ad9 e3a0      	LDI  R26,LOW(48)
000ada 940e 08d7 	CALL __lcd_write_nibble_G104
                +
000adc ec88     +LDI R24 , LOW ( 200 )
000add e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000ade 9701     +SBIW R24 , 1
000adf f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000ae0 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000ae1 9610      	adiw r26,0
000ae2 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000ae3 ed80     +LDI R24 , LOW ( 0x7D0 )
000ae4 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000ae5 9701     +SBIW R24 , 1
000ae6 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000ae7 95a8      	wdr
000ae8 9711      	sbiw r26,1
000ae9 f7c9      	brne __delay_ms0
                 __delay_ms1:
000aea 9508      	ret
                 
                 __ADDW2R15:
000aeb 2400      	CLR  R0
000aec 0daf      	ADD  R26,R15
000aed 1db0      	ADC  R27,R0
000aee 9508      	RET
                 
                 __ANEGW1:
000aef 95f1      	NEG  R31
000af0 95e1      	NEG  R30
000af1 40f0      	SBCI R31,0
000af2 9508      	RET
                 
                 __LSLB12:
000af3 23ee      	TST  R30
000af4 2e0e      	MOV  R0,R30
000af5 2fea      	MOV  R30,R26
000af6 f019      	BREQ __LSLB12R
                 __LSLB12L:
000af7 0fee      	LSL  R30
000af8 940a      	DEC  R0
000af9 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
000afa 9508      	RET
                 
                 __LSRB12:
000afb 23ee      	TST  R30
000afc 2e0e      	MOV  R0,R30
000afd 2fea      	MOV  R30,R26
000afe f019      	BREQ __LSRB12R
                 __LSRB12L:
000aff 95e6      	LSR  R30
000b00 940a      	DEC  R0
000b01 f7e9      	BRNE __LSRB12L
                 __LSRB12R:
000b02 9508      	RET
                 
                 __CWD1:
000b03 2f6f      	MOV  R22,R31
000b04 0f66      	ADD  R22,R22
000b05 0b66      	SBC  R22,R22
000b06 2f76      	MOV  R23,R22
000b07 9508      	RET
                 
                 __MULW12U:
000b08 9ffa      	MUL  R31,R26
000b09 2df0      	MOV  R31,R0
000b0a 9feb      	MUL  R30,R27
000b0b 0df0      	ADD  R31,R0
000b0c 9fea      	MUL  R30,R26
000b0d 2de0      	MOV  R30,R0
000b0e 0df1      	ADD  R31,R1
000b0f 9508      	RET
                 
                 __DIVW21U:
000b10 2400      	CLR  R0
000b11 2411      	CLR  R1
000b12 e190      	LDI  R25,16
                 __DIVW21U1:
000b13 0faa      	LSL  R26
000b14 1fbb      	ROL  R27
000b15 1c00      	ROL  R0
000b16 1c11      	ROL  R1
000b17 1a0e      	SUB  R0,R30
000b18 0a1f      	SBC  R1,R31
000b19 f418      	BRCC __DIVW21U2
000b1a 0e0e      	ADD  R0,R30
000b1b 1e1f      	ADC  R1,R31
000b1c c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000b1d 60a1      	SBR  R26,1
                 __DIVW21U3:
000b1e 959a      	DEC  R25
000b1f f799      	BRNE __DIVW21U1
000b20 01fd      	MOVW R30,R26
000b21 01d0      	MOVW R26,R0
000b22 9508      	RET
                 
                 __DIVW21:
000b23 d004      	RCALL __CHKSIGNW
000b24 dfeb      	RCALL __DIVW21U
000b25 f40e      	BRTC __DIVW211
000b26 dfc8      	RCALL __ANEGW1
                 __DIVW211:
000b27 9508      	RET
                 
                 __CHKSIGNW:
000b28 94e8      	CLT
000b29 fff7      	SBRS R31,7
000b2a c002      	RJMP __CHKSW1
000b2b dfc3      	RCALL __ANEGW1
000b2c 9468      	SET
                 __CHKSW1:
000b2d ffb7      	SBRS R27,7
000b2e c006      	RJMP __CHKSW2
000b2f 95a0      	COM  R26
000b30 95b0      	COM  R27
000b31 9611      	ADIW R26,1
000b32 f800      	BLD  R0,0
000b33 9403      	INC  R0
000b34 fa00      	BST  R0,0
                 __CHKSW2:
000b35 9508      	RET
                 
                 __GETW1P:
000b36 91ed      	LD   R30,X+
000b37 91fc      	LD   R31,X
000b38 9711      	SBIW R26,1
000b39 9508      	RET
                 
                 __GETW1PF:
000b3a 9005      	LPM  R0,Z+
000b3b 91f4      	LPM  R31,Z
000b3c 2de0      	MOV  R30,R0
000b3d 9508      	RET
                 
                 __PUTPARD1:
000b3e 937a      	ST   -Y,R23
000b3f 936a      	ST   -Y,R22
000b40 93fa      	ST   -Y,R31
000b41 93ea      	ST   -Y,R30
000b42 9508      	RET
                 
                 __EEPROMRDB:
000b43 99e1      	SBIC EECR,EEWE
000b44 cffe      	RJMP __EEPROMRDB
000b45 93ff      	PUSH R31
000b46 b7ff      	IN   R31,SREG
000b47 94f8      	CLI
000b48 bbae      	OUT  EEARL,R26
000b49 bbbf      	OUT  EEARH,R27
000b4a 9ae0      	SBI  EECR,EERE
000b4b b3ed      	IN   R30,EEDR
000b4c bfff      	OUT  SREG,R31
000b4d 91ff      	POP  R31
000b4e 9508      	RET
                 
                 __EEPROMWRB:
000b4f 9be1      	SBIS EECR,EEWE
000b50 c002      	RJMP __EEPROMWRB1
000b51 95a8      	WDR
000b52 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
000b53 b79f      	IN   R25,SREG
000b54 94f8      	CLI
000b55 bbae      	OUT  EEARL,R26
000b56 bbbf      	OUT  EEARH,R27
000b57 9ae0      	SBI  EECR,EERE
000b58 b38d      	IN   R24,EEDR
000b59 17e8      	CP   R30,R24
000b5a f019      	BREQ __EEPROMWRB0
000b5b bbed      	OUT  EEDR,R30
000b5c 9ae2      	SBI  EECR,EEMWE
000b5d 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
000b5e bf9f      	OUT  SREG,R25
000b5f 9508      	RET
                 
                 __CPW02:
000b60 2400      	CLR  R0
000b61 160a      	CP   R0,R26
000b62 060b      	CPC  R0,R27
000b63 9508      	RET
                 
                 __SAVELOCR6:
000b64 935a      	ST   -Y,R21
                 __SAVELOCR5:
000b65 934a      	ST   -Y,R20
                 __SAVELOCR4:
000b66 933a      	ST   -Y,R19
                 __SAVELOCR3:
000b67 932a      	ST   -Y,R18
                 __SAVELOCR2:
000b68 931a      	ST   -Y,R17
000b69 930a      	ST   -Y,R16
000b6a 9508      	RET
                 
                 __LOADLOCR6:
000b6b 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000b6c 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000b6d 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000b6e 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000b6f 8119      	LDD  R17,Y+1
000b70 8108      	LD   R16,Y
000b71 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128A register use summary:
r0 :  42 r1 :   9 r2 :   0 r3 :   0 r4 :  10 r5 :   3 r6 :   4 r7 :   2 
r8 :   6 r9 :   4 r10:   2 r11:   4 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  82 r17: 105 r18:  53 r19:  34 r20:  25 r21:  47 r22:  15 r23:   3 
r24:  28 r25:  10 r26: 328 r27: 112 r28:  29 r29:   1 r30: 745 r31: 176 
x  :  31 y  : 530 z  :  33 
Registers used: 30 out of 35 (85.7%)

ATmega128A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  15 add   :  24 
adiw  :  45 and   :   8 andi  :  25 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  50 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  13 
brlt  :   5 brmi  :   1 brne  :  87 brpl  :   1 brsh  :  18 brtc  :   1 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   1 call  : 145 
cbi   :  15 cbr   :   0 clc   :   0 clh   :   0 cli   :   3 cln   :   0 
clr   :  28 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   9 
cp    :  26 cpc   :  14 cpi   :  97 cpse  :   0 dec   :   8 des   :   0 
elpm  :   0 eor   :   1 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 
ijmp  :   0 in    :   5 inc   :   5 jmp   :  55 ld    :  60 ldd   : 266 
ldi   : 257 lds   :  44 lpm   :  32 lsl   :   4 lsr   :  15 mov   :  98 
movw  :  44 mul   :   5 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 
or    :   7 ori   :  24 out   :  25 pop   :  12 push  :  12 rcall :  67 
ret   :  57 reti  :   1 rjmp  : 156 rol   :   4 ror   :   0 sbc   :   3 
sbci  :  11 sbi   :  29 sbic  :   1 sbis  :   3 sbiw  :  37 sbr   :   1 
sbrc  :   2 sbrs  :  12 sec   :   0 seh   :   0 sei   :   1 sen   :   0 
ser   :   0 ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    : 179 std   :  68 sts   :  42 sub   :   9 subi  :  45 
swap  :   1 tst   :   7 wdr   :   2 
Instructions used: 71 out of 117 (60.7%)

ATmega128A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0016e4   5266    594   5860  131072   4.5%
[.dseg] 0x000100 0x000742      0    578    578    4096  14.1%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 11 warnings
