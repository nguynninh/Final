
AVRASM ver. 2.1.30  D:\Private\CODE\Classsroom\Embedded\Final2\Final\thang_may_6\Debug\List\elevator.asm Sat Dec 21 16:14:05 2024

D:\Private\CODE\Classsroom\Embedded\Final2\Final\thang_may_6\Debug\List\elevator.asm(1090): warning: Register r4 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\thang_may_6\Debug\List\elevator.asm(1091): warning: Register r5 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\thang_may_6\Debug\List\elevator.asm(1092): warning: Register r6 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\thang_may_6\Debug\List\elevator.asm(1093): warning: Register r7 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\thang_may_6\Debug\List\elevator.asm(1094): warning: Register r8 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\thang_may_6\Debug\List\elevator.asm(1095): warning: Register r9 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\thang_may_6\Debug\List\elevator.asm(1096): warning: Register r10 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\thang_may_6\Debug\List\elevator.asm(1097): warning: Register r11 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\thang_may_6\Debug\List\elevator.asm(1098): warning: Register r13 already defined by the .DEF directive
D:\Private\CODE\Classsroom\Embedded\Final2\Final\thang_may_6\Debug\List\elevator.asm(1099): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128A
                 ;Program type           : Application
                 ;Clock frequency        : 8,000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128A
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _dem=R4
                 	.DEF _dem_msb=R5
                 	.DEF _vi_tri=R6
                 	.DEF _vi_tri_msb=R7
                 	.DEF _i=R8
                 	.DEF _i_msb=R9
                 	.DEF _k=R10
                 	.DEF _k_msb=R11
                 	.DEF _len=R13
                 	.DEF __lcd_x=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0187 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 024e 	JMP  _timer1_ovf_isr
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _font5x7:
000046 0705
000047 6020
000048 0000
000049 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
00004a 0000
00004b 5f00
00004c 0000
00004d 0700      	.DB  0x0,0x0,0x0,0x5F,0x0,0x0,0x0,0x7
00004e 0700
00004f 1400
000050 147f
000051 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
000052 2a24
000053 2a7f
000054 2312
000055 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
000056 6264
000057 4936
000058 2255
000059 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
00005a 0305
00005b 0000
00005c 1c00
00005d 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
00005e 0000
00005f 2241
000060 001c
000061 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
000062 2a1c
000063 0808
000064 3e08
000065 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
000066 5000
000067 0030
000068 0800
000069 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
00006a 0808
00006b 3000
00006c 0030
00006d 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
00006e 0810
00006f 0204
000070 513e
000071 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
000072 003e
000073 7f42
000074 0040
000075 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
000076 4951
000077 2146
000078 4541
000079 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
00007a 1418
00007b 7f12
00007c 2710
00007d 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
00007e 3945
00007f 4a3c
000080 4949
000081 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
000082 0971
000083 0305
000084 4936
000085 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
000086 0636
000087 4949
000088 1e29
000089 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
00008a 0036
00008b 0000
00008c 3656
00008d 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
00008e 0800
00008f 2214
000090 1441
000091 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
000092 1414
000093 2241
000094 0814
000095 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
000096 5101
000097 0609
000098 4932
000099 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
00009a 7e3e
00009b 1111
00009c 7e11
00009d 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
00009e 4949
00009f 3e36
0000a0 4141
0000a1 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
0000a2 417f
0000a3 2241
0000a4 7f1c
0000a5 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
0000a6 4149
0000a7 097f
0000a8 0109
0000a9 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
0000aa 4141
0000ab 3251
0000ac 087f
0000ad 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
0000ae 007f
0000af 7f41
0000b0 0041
0000b1 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
0000b2 3f41
0000b3 7f01
0000b4 1408
0000b5 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
0000b6 407f
0000b7 4040
0000b8 7f40
0000b9 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
0000ba 7f02
0000bb 047f
0000bc 1008
0000bd 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
0000be 4141
0000bf 3e41
0000c0 097f
0000c1 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
0000c2 3e06
0000c3 5141
0000c4 5e21
0000c5 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
0000c6 2919
0000c7 4646
0000c8 4949
0000c9 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
0000ca 0101
0000cb 017f
0000cc 3f01
0000cd 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
0000ce 3f40
0000cf 201f
0000d0 2040
0000d1 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
0000d2 1820
0000d3 7f20
0000d4 1463
0000d5 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000d6 0363
0000d7 7804
0000d8 0304
0000d9 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000da 4549
0000db 0043
0000dc 7f00
0000dd 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000de 0402
0000df 1008
0000e0 4120
0000e1 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000e2 0000
0000e3 0204
0000e4 0201
0000e5 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000e6 4040
0000e7 4040
0000e8 0100
0000e9 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000ea 2000
0000eb 5454
0000ec 7854
0000ed 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000ee 4444
0000ef 3838
0000f0 4444
0000f1 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000f2 4438
0000f3 4844
0000f4 387f
0000f5 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000f6 1854
0000f7 7e08
0000f8 0109
0000f9 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000fa 5414
0000fb 3c54
0000fc 087f
0000fd 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000fe 0078
0000ff 7d44
000100 0040
000101 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
000102 3d44
000103 0000
000104 107f
000105 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
000106 4100
000107 407f
000108 7c00
000109 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
00010a 7804
00010b 087c
00010c 0404
00010d 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
00010e 4444
00010f 3844
000110 147c
000111 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
000112 0808
000113 1414
000114 7c18
000115 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
000116 0404
000117 4808
000118 5454
000119 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
00011a 3f04
00011b 4044
00011c 3c20
00011d 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
00011e 7c20
00011f 201c
000120 2040
000121 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
000122 3040
000123 3c40
000124 2844
000125 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
000126 0c44
000127 5050
000128 3c50
000129 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
00012a 4c54
00012b 0044
00012c 3608
00012d 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
00012e 0000
00012f 007f
000130 0000
000131 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
000132 0008
000133 0102
000134 0402
000135 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
000136 4141
000137 7f41      	.DB  0x41,0x41,0x41,0x7F
                 __glcd_mask:
000138 0100
000139 0703
00013a 1f0f
00013b 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
D:\Private\CODE\Classsroom\Embedded\Final2\Final\thang_may_6\Debug\List\elevator.asm(1208): warning: .cseg .db misalignment - padding zero byte
00013c 00ff      	.DB  0xFF
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
00013d 0000
00013e 000a      	.DB  0x0,0x0,0xA,0x0
00013f 0000
000140 0000      	.DB  0x0,0x0,0x0,0x0
000141 0100      	.DB  0x0,0x1
                 
                 _0x3:
000142 0000
000143 0001
000144 0002
000145 0003      	.DB  0x0,0x0,0x1,0x0,0x2,0x0,0x3,0x0
000146 0004
000147 0005
000148 0006
000149 0007      	.DB  0x4,0x0,0x5,0x0,0x6,0x0,0x7,0x0
D:\Private\CODE\Classsroom\Embedded\Final2\Final\thang_may_6\Debug\List\elevator.asm(1219): warning: .cseg .db misalignment - padding zero byte
00014a 0008      	.DB  0x8
                 _0x0:
00014b 654e
00014c 7478
00014d 003a
00014e 654e      	.DB  0x4E,0x65,0x78,0x74,0x3A,0x0,0x4E,0x65
00014f 7478
000150 203a
000151 4300
000152 7275      	.DB  0x78,0x74,0x3A,0x20,0x0,0x43,0x75,0x72
000153 6572
000154 746e
000155 003a
000156 7543      	.DB  0x72,0x65,0x6E,0x74,0x3A,0x0,0x43,0x75
000157 7272
000158 6e65
000159 3a74
00015a 0020      	.DB  0x72,0x72,0x65,0x6E,0x74,0x3A,0x20,0x0
                 _0x2060003:
00015b c080      	.DB  0x80,0xC0
                 _0x2080060:
D:\Private\CODE\Classsroom\Embedded\Final2\Final\thang_may_6\Debug\List\elevator.asm(1228): warning: .cseg .db misalignment - padding zero byte
00015c 0001      	.DB  0x1
                 _0x2080000:
00015d 4e2d
00015e 4e41
00015f 4900
000160 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\Private\CODE\Classsroom\Embedded\Final2\Final\thang_may_6\Debug\List\elevator.asm(1231): warning: .cseg .db misalignment - padding zero byte
000161 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000162 000a      	.DW  0x0A
000163 0004      	.DW  0x04
000164 027a      	.DW  __REG_VARS*2
                 
000165 0011      	.DW  0x11
000166 055d      	.DW  _keypad
000167 0284      	.DW  _0x3*2
                 
000168 0006      	.DW  0x06
000169 0500      	.DW  _0x42
00016a 0296      	.DW  _0x0*2
                 
00016b 0007      	.DW  0x07
00016c 0506      	.DW  _0x42+6
00016d 029c      	.DW  _0x0*2+6
                 
00016e 0009      	.DW  0x09
00016f 050d      	.DW  _0x42+13
000170 02a3      	.DW  _0x0*2+13
                 
000171 000a      	.DW  0x0A
000172 0516      	.DW  _0x42+22
000173 02ac      	.DW  _0x0*2+22
                 
000174 0009      	.DW  0x09
000175 0520      	.DW  _0x42+32
000176 02a3      	.DW  _0x0*2+13
                 
000177 0006      	.DW  0x06
000178 0529      	.DW  _0x42+41
000179 0296      	.DW  _0x0*2
                 
00017a 000a      	.DW  0x0A
00017b 052f      	.DW  _0x42+47
00017c 02ac      	.DW  _0x0*2+22
                 
00017d 0007      	.DW  0x07
00017e 0539      	.DW  _0x42+57
00017f 029c      	.DW  _0x0*2+6
                 
000180 0002      	.DW  0x02
000181 0784      	.DW  __base_y_G103
000182 02b6      	.DW  _0x2060003*2
                 
000183 0001      	.DW  0x01
000184 078a      	.DW  __seed_G104
000185 02b8      	.DW  _0x2080060*2
                 
                 _0xFFFFFFFF:
000186 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000187 94f8      	CLI
000188 27ee      	CLR  R30
000189 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00018a e0f1      	LDI  R31,1
00018b bff5      	OUT  MCUCR,R31
00018c bfe5      	OUT  MCUCR,R30
00018d 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
00018f e08d      	LDI  R24,(14-2)+1
000190 e0a2      	LDI  R26,2
000191 27bb      	CLR  R27
                 __CLEAR_REG:
000192 93ed      	ST   X+,R30
000193 958a      	DEC  R24
000194 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000195 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000196 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000197 e0a0      	LDI  R26,LOW(__SRAM_START)
000198 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000199 93ed      	ST   X+,R30
00019a 9701      	SBIW R24,1
00019b f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00019c ece4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00019d e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00019e 9185      	LPM  R24,Z+
00019f 9195      	LPM  R25,Z+
0001a0 9700      	SBIW R24,0
0001a1 f061      	BREQ __GLOBAL_INI_END
0001a2 91a5      	LPM  R26,Z+
0001a3 91b5      	LPM  R27,Z+
0001a4 9005      	LPM  R0,Z+
0001a5 9015      	LPM  R1,Z+
0001a6 01bf      	MOVW R22,R30
0001a7 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0001a8 9005      	LPM  R0,Z+
0001a9 920d      	ST   X+,R0
0001aa 9701      	SBIW R24,1
0001ab f7e1      	BRNE __GLOBAL_INI_LOOP
0001ac 01fb      	MOVW R30,R22
0001ad cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0001ae bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0001af efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0001b0 bfed      	OUT  SPL,R30
0001b1 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0001b2 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0001b3 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0001b4 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0001b5 940c 03c8 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;/*
                 ; * elevator.c
                 ; *
                 ; * Created: 12/29/2022 10:30:54 PM
                 ; * Author: Who
                 ; */
                 ;
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <hardware.c>
                 ;#include <delay.h>
                 ;#include <glcd.h>
                 ;#include <font5x7.h>
                 ;#include <alcd.h>
                 ;
                 ;int keypad[3][3] = {0,1,2,3,4,5,6,7,8};
                 
                 	.DSEG
                 ;
                 ;void init_register() {
                 ; 0000 0009 void init_register() {
                 
                 	.CSEG
                 _init_register:
                 ; .FSTART _init_register
                 ;    // ban phim ma tran
                 ;    DDRF = 0b11101010;
0001b7 eeea      	LDI  R30,LOW(234)
0001b8 93e0 0061 	STS  97,R30
                 ;    // DC
                 ;    DDRB.4 = 1;
0001ba 9abc      	SBI  0x17,4
                 ;    // servo
                 ;    DDRC.7 = 1;
0001bb 9aa7      	SBI  0x14,7
                 ;    //for servo inverse (nhung ko xuat xung PWM, can than cai USB drive)
                 ;    DDRB.5 = 1;
0001bc 9abd      	SBI  0x17,5
                 ;    ADCSRA=0x83;
0001bd e8e3      	LDI  R30,LOW(131)
0001be b9e6      	OUT  0x6,R30
                 ;}
0001bf 9508      	RET
                 ; .FEND
                 ;
                 ;// NOTE: DUNG CO CHE TAY VAO CAI LDR OR YOU WILL NEVER SEE IT COMING
                 ;int read() {
                 _read:
                 ; .FSTART _read
                 ;    char a, i, j;
                 ;    for(j = 0; j < 3; j++ ){
0001c0 940e 0b16 	CALL __SAVELOCR4
                 ;	a -> R17
                 ;	i -> R16
                 ;	j -> R19
0001c2 e030      	LDI  R19,LOW(0)
                 _0xB:
0001c3 3033      	CPI  R19,3
0001c4 f5a0      	BRSH _0xC
                 ;        if (j == 0) PORTF = 0b11111101;
0001c5 3030      	CPI  R19,0
0001c6 f419      	BRNE _0xD
0001c7 efed      	LDI  R30,LOW(253)
0001c8 93e0 0062 	STS  98,R30
                 ;        if (j == 1) PORTF = 0b11110111;
                 _0xD:
0001ca 3031      	CPI  R19,1
0001cb f419      	BRNE _0xE
0001cc efe7      	LDI  R30,LOW(247)
0001cd 93e0 0062 	STS  98,R30
                 ;        if (j == 2) PORTF = 0b11011111;
                 _0xE:
0001cf 3032      	CPI  R19,2
0001d0 f419      	BRNE _0xF
0001d1 edef      	LDI  R30,LOW(223)
0001d2 93e0 0062 	STS  98,R30
                 ;        for(i = 0; i < 3; i++){
                 _0xF:
0001d4 e000      	LDI  R16,LOW(0)
                 _0x11:
0001d5 3003      	CPI  R16,3
0001d6 f500      	BRSH _0x12
                 ;            if (i == 0){
0001d7 3000      	CPI  R16,0
0001d8 f441      	BRNE _0x13
                 ;                a = PINF&0x04;
0001d9 b1e0      	IN   R30,0x0
0001da 70e4      	ANDI R30,LOW(0x4)
0001db 2f1e      	MOV  R17,R30
                 ;                if(a != 0x04) {
0001dc 3014      	CPI  R17,4
0001dd f019      	BREQ _0x14
                 ;                    return keypad[i][j];
0001de 940e 09ca 	CALL SUBOPT_0x0
0001e0 c01a      	RJMP _0x212000A
                 ;                }
                 ;            }
                 _0x14:
                 ;            if (i == 1){
                 _0x13:
0001e1 3001      	CPI  R16,1
0001e2 f441      	BRNE _0x15
                 ;                a = PINF&0x10;
0001e3 b1e0      	IN   R30,0x0
0001e4 71e0      	ANDI R30,LOW(0x10)
0001e5 2f1e      	MOV  R17,R30
                 ;                if (a != 0x10) {
0001e6 3110      	CPI  R17,16
0001e7 f019      	BREQ _0x16
                 ;                    return keypad[i][j];
0001e8 940e 09ca 	CALL SUBOPT_0x0
0001ea c010      	RJMP _0x212000A
                 ;                }
                 ;            }
                 _0x16:
                 ;            if (i == 2){
                 _0x15:
0001eb 3002      	CPI  R16,2
0001ec f441      	BRNE _0x17
                 ;                a = PINF&0x01;
0001ed b1e0      	IN   R30,0x0
0001ee 70e1      	ANDI R30,LOW(0x1)
0001ef 2f1e      	MOV  R17,R30
                 ;                if (a != 0x01) {
0001f0 3011      	CPI  R17,1
0001f1 f019      	BREQ _0x18
                 ;                    return keypad[i][j];
0001f2 940e 09ca 	CALL SUBOPT_0x0
0001f4 c006      	RJMP _0x212000A
                 ;                }
                 ;            }
                 _0x18:
                 ;        }
                 _0x17:
0001f5 5f0f      	SUBI R16,-1
0001f6 cfde      	RJMP _0x11
                 _0x12:
                 ;    }
0001f7 5f3f      	SUBI R19,-1
0001f8 cfca      	RJMP _0xB
                 _0xC:
                 ;    return -1;
0001f9 efef      	LDI  R30,LOW(65535)
0001fa efff      	LDI  R31,HIGH(65535)
                 _0x212000A:
0001fb 940e 0b1d 	CALL __LOADLOCR4
0001fd 9624      	ADIW R28,4
0001fe 9508      	RET
                 ;}
                 ; .FEND
                 ;
                 ;
                 ;void init_glcd(int bias, int vlcd) {
                 _init_glcd:
                 ; .FSTART _init_glcd
                 ;    GLCDINIT_t glcd_init_data;
                 ;    glcd_init_data.font=font5x7;
0001ff 93ba      	ST   -Y,R27
000200 93aa      	ST   -Y,R26
000201 9728      	SBIW R28,8
                 ;	bias -> Y+10
                 ;	vlcd -> Y+8
                 ;	glcd_init_data -> Y+0
000202 e8ec      	LDI  R30,LOW(_font5x7*2)
000203 e0f0      	LDI  R31,HIGH(_font5x7*2)
000204 83e8      	ST   Y,R30
000205 83f9      	STD  Y+1,R31
                 ;    glcd_init_data.temp_coef=140;
000206 81ee      	LDD  R30,Y+6
000207 7fec      	ANDI R30,LOW(0xFC)
000208 83ee      	STD  Y+6,R30
                 ;    glcd_init_data.bias=bias;
000209 85ea      	LDD  R30,Y+10
00020a 70e7      	ANDI R30,LOW(0x7)
00020b 0fee      	LSL  R30
00020c 0fee      	LSL  R30
00020d 2e0e      	MOV  R0,R30
00020e 81ee      	LDD  R30,Y+6
00020f 7ee3      	ANDI R30,LOW(0xE3)
000210 29e0      	OR   R30,R0
000211 83ee      	STD  Y+6,R30
                 ;    glcd_init_data.vlcd=vlcd;
000212 85e8      	LDD  R30,Y+8
000213 77ef      	ANDI R30,0x7F
000214 2e0e      	MOV  R0,R30
000215 81ef      	LDD  R30,Y+7
000216 78e0      	ANDI R30,LOW(0x80)
000217 29e0      	OR   R30,R0
000218 83ef      	STD  Y+7,R30
                 ;    glcd_init(&glcd_init_data);
000219 01de      	MOVW R26,R28
00021a d24b      	RCALL _glcd_init
                 ;}
00021b 962c      	ADIW R28,12
00021c 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;void init_lcd() {
                 _init_lcd:
                 ; .FSTART _init_lcd
                 ;    lcd_init(16);
00021d e1a0      	LDI  R26,LOW(16)
00021e 940e 08eb 	CALL _lcd_init
                 ;    lcd_clear();
000220 940e 08b8 	CALL _lcd_clear
                 ;}
000222 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;void adjustSpeed(int speed) {
                 _adjustSpeed:
                 ; .FSTART _adjustSpeed
                 ;    OCR0 = 255 - speed;
000223 93ba      	ST   -Y,R27
000224 93aa      	ST   -Y,R26
                 ;	speed -> Y+0
000225 81a8      	LD   R26,Y
000226 efef      	LDI  R30,LOW(255)
000227 1bea      	SUB  R30,R26
000228 bfe1      	OUT  0x31,R30
                 ;}
000229 9622      	ADIW R28,2
00022a 9508      	RET
                 ; .FEND
                 ;
                 ;void quay_nguoc_DC() {
                 _quay_nguoc_DC:
                 ; .FSTART _quay_nguoc_DC
                 ;    PORTB.5 = 1;
00022b 9ac5      	SBI  0x18,5
                 ;}
00022c 9508      	RET
                 ; .FEND
                 ;
                 ;void quay_DC() {
                 _quay_DC:
                 ; .FSTART _quay_DC
                 ;    adjustSpeed(120);
00022d e7a8      	LDI  R26,LOW(120)
00022e e0b0      	LDI  R27,0
00022f dff3      	RCALL _adjustSpeed
                 ;}
000230 9508      	RET
                 ; .FEND
                 ;
                 ;void dung_DC() {
                 _dung_DC:
                 ; .FSTART _dung_DC
                 ;    adjustSpeed(0);
000231 e0a0      	LDI  R26,LOW(0)
000232 e0b0      	LDI  R27,0
000233 dfef      	RCALL _adjustSpeed
                 ;    PORTB.5 = 0;
000234 98c5      	CBI  0x18,5
                 ;}
000235 9508      	RET
                 ; .FEND
                 ;
                 ;void init_timer() {
                 _init_timer:
                 ; .FSTART _init_timer
                 ;    // khoi tao timer 0 cho dong co
                 ;    ASSR=0<<AS0;
000236 e0e0      	LDI  R30,LOW(0)
000237 bfe0      	OUT  0x30,R30
                 ;    TCCR0=(1<<WGM00) | (1<<COM01) | (1<<COM00) | (0<<WGM01) | (1<<CS02) | (0<<CS01) | (0<<CS00);
000238 e7e4      	LDI  R30,LOW(116)
000239 bfe3      	OUT  0x33,R30
                 ;    TCNT0=0x00;
00023a e0e0      	LDI  R30,LOW(0)
00023b bfe2      	OUT  0x32,R30
                 ;    adjustSpeed(0);
00023c e0a0      	LDI  R26,LOW(0)
00023d e0b0      	LDI  R27,0
00023e dfe4      	RCALL _adjustSpeed
                 ;
                 ;    // Timer 1 (0.1 ms) cho den va servo
                 ;    TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<COM1C1) | (0<<COM1C0) | (0<<WGM11) | (0<<WGM10);
00023f e0e0      	LDI  R30,LOW(0)
000240 bdef      	OUT  0x2F,R30
                 ;    TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (1<<CS10);
000241 e0e1      	LDI  R30,LOW(1)
000242 bdee      	OUT  0x2E,R30
                 ;    TCNT1H=0xFC;
000243 efec      	LDI  R30,LOW(252)
000244 bded      	OUT  0x2D,R30
                 ;    TCNT1L=0xE0;
000245 eee0      	LDI  R30,LOW(224)
000246 bdec      	OUT  0x2C,R30
                 ;    TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (1<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
000247 e0e4      	LDI  R30,LOW(4)
000248 bfe7      	OUT  0x37,R30
                 ;    ETIMSK=(0<<TICIE3) | (0<<OCIE3A) | (0<<OCIE3B) | (0<<TOIE3) | (0<<OCIE3C) | (0<<OCIE1C);
000249 e0e0      	LDI  R30,LOW(0)
00024a 93e0 007d 	STS  125,R30
                 ;    #asm("sei")
00024c 9478      	sei
                 ;}
00024d 9508      	RET
                 ; .FEND
                 ;#include <delay.h>
                 ;#include <stdlib.h>
                 ;#include <glcd.h>
                 ;#include <alcd.h>
                 ;#define servo_1 PORTC.7
                 ;
                 ;int dem = 0, vi_tri = 10;
                 ;char what[16];
                 ;int i, k;
                 ;// dieu khien cac tang trong thang may
                 ;bool order[9] = {false, false, false, false, false, false, false, false, false};
                 ;
                 ;
                 ;// dieu khien trang thai len / xuong
                 ;bool len = true;
                 ;int currentLevel = 0;
                 ;
                 ;// Timer1 overflow interrupt service routine (delay 0.1 ms)
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
                 ; 0000 001D {
                 _timer1_ovf_isr:
                 ; .FSTART _timer1_ovf_isr
00024e 920a      	ST   -Y,R0
00024f 921a      	ST   -Y,R1
000250 92fa      	ST   -Y,R15
000251 936a      	ST   -Y,R22
000252 937a      	ST   -Y,R23
000253 938a      	ST   -Y,R24
000254 939a      	ST   -Y,R25
000255 93aa      	ST   -Y,R26
000256 93ba      	ST   -Y,R27
000257 93ea      	ST   -Y,R30
000258 93fa      	ST   -Y,R31
000259 b7ef      	IN   R30,SREG
00025a 93ea      	ST   -Y,R30
                 ; 0000 001E     int input;
                 ; 0000 001F     // Reinitialize Timer1 value
                 ; 0000 0020     TCNT1H=0xFCE0 >> 8;
00025b 931a      	ST   -Y,R17
00025c 930a      	ST   -Y,R16
                 ;	input -> R16,R17
00025d efec      	LDI  R30,LOW(252)
00025e bded      	OUT  0x2D,R30
                 ; 0000 0021     TCNT1L=0xFCE0 & 0xff;
00025f eee0      	LDI  R30,LOW(224)
000260 bdec      	OUT  0x2C,R30
                 ; 0000 0022 
                 ; 0000 0023     // servo
                 ; 0000 0024     dem++;
000261 01f2      	MOVW R30,R4
000262 9631      	ADIW R30,1
000263 012f      	MOVW R4,R30
                 ; 0000 0025     if(dem >= 200)
000264 ece8      	LDI  R30,LOW(200)
000265 e0f0      	LDI  R31,HIGH(200)
000266 164e      	CP   R4,R30
000267 065f      	CPC  R5,R31
000268 f014      	BRLT _0x1D
                 ; 0000 0026         dem = 0;
000269 2444      	CLR  R4
00026a 2455      	CLR  R5
                 ; 0000 0027     if (dem < vi_tri)
                 _0x1D:
                +
00026b 1446     +CP R4 , R6
00026c 0457     +CPC R5 , R7
                 	__CPWRR 4,5,6,7
00026d f414      	BRGE _0x1E
                 ; 0000 0028         servo_1 = 1;
00026e 9aaf      	SBI  0x15,7
                 ; 0000 0029     else
00026f c001      	RJMP _0x21
                 _0x1E:
                 ; 0000 002A         servo_1 = 0;
000270 98af      	CBI  0x15,7
                 ; 0000 002B 
                 ; 0000 002C     // ~ delay 199 ms ban phim ma tran
                 ; 0000 002D     if (dem == 199) {
                 _0x21:
000271 ece7      	LDI  R30,LOW(199)
000272 e0f0      	LDI  R31,HIGH(199)
000273 15e4      	CP   R30,R4
000274 05f5      	CPC  R31,R5
000275 f469      	BRNE _0x24
                 ; 0000 002E         input = read();
000276 df49      	RCALL _read
000277 018f      	MOVW R16,R30
                 ; 0000 002F         if (input != -1)
000278 efef      	LDI  R30,LOW(65535)
000279 efff      	LDI  R31,HIGH(65535)
00027a 17e0      	CP   R30,R16
00027b 07f1      	CPC  R31,R17
00027c f031      	BREQ _0x25
                 ; 0000 0030             order[input] = true;
00027d e7af      	LDI  R26,LOW(_order)
00027e e0b5      	LDI  R27,HIGH(_order)
00027f 0fa0      	ADD  R26,R16
000280 1fb1      	ADC  R27,R17
000281 e0e1      	LDI  R30,LOW(1)
000282 93ec      	ST   X,R30
                 ; 0000 0031     }
                 _0x25:
                 ; 0000 0032 }
                 _0x24:
000283 9109      	LD   R16,Y+
000284 9119      	LD   R17,Y+
000285 91e9      	LD   R30,Y+
000286 bfef      	OUT  SREG,R30
000287 91f9      	LD   R31,Y+
000288 91e9      	LD   R30,Y+
000289 91b9      	LD   R27,Y+
00028a 91a9      	LD   R26,Y+
00028b 9199      	LD   R25,Y+
00028c 9189      	LD   R24,Y+
00028d 9179      	LD   R23,Y+
00028e 9169      	LD   R22,Y+
00028f 90f9      	LD   R15,Y+
000290 9019      	LD   R1,Y+
000291 9009      	LD   R0,Y+
000292 9518      	RETI
                 ; .FEND
                 ;// led 7 doan
                 ;// void khoi_tao_led_7_doan(){
                 ;//     DDRF = 0xFF;
                 ;//     DDRD = 0xFF;
                 ;//     DDRA.7 = 1;
                 ;
                 ;// }
                 ;// void hienThiLed7Doan(int i, unsigned int j){
                 ;//     if(i==0){
                 ;//         PORTF = 0x80 + j;
                 ;//     PORTD = 0xF9;
                 ;//     PORTA = 0x7F;
                 ;//     }
                 ;//     if(i==1){
                 ;//     PORTF = 0x86 + j;
                 ;//     PORTD = 0xFF;
                 ;//     PORTA = 0x7F;
                 ;//     }
                 ;//     if(i==2){
                 ;//     PORTF = 0x84 + j;
                 ;//     PORTD = 0xF1;
                 ;
                 ;//     PORTA = 0xFF;
                 ;//     }
                 ;//     if(i==3){
                 ;//     PORTF = 0x84 + j;
                 ;//     PORTD = 0xF5;
                 ;//     PORTE = 0x00;
                 ;//     PORTA = 0x7F;
                 ;//     }
                 ;//     if(i==4){
                 ;//     PORTF = 0x82 + j;
                 ;//     PORTD = 0xF7;
                 ;//     PORTA = 0x7F;
                 ;//     }
                 ;//     if(i==5){
                 ;//     PORTF = 0xA0 + j;
                 ;//     PORTD = 0xF5;
                 ;//     PORTA = 0x7F;
                 ;//     }if(i==6){
                 ;//     PORTF = 0xA0 + j;
                 ;//     PORTD = 0xF1;
                 ;//     PORTA = 0x7F;
                 ;//     }
                 ;//     if(i==7){
                 ;//     PORTF = 0x84 + j;
                 ;//     PORTD = 0xFF;
                 ;//     PORTA = 0x7F;
                 ;//     }
                 ;
                 ;//     if(i==8){
                 ;//     PORTF = 0x80 + j;
                 ;//     PORTD = 0xF1;
                 ;//     PORTA = 0x7F;
                 ;//     }
                 ;//     if(i==9){
                 ;//     PORTF = 0x80 + j;
                 ;//     PORTD = 0xF5;
                 ;//     PORTA = 0x7F;
                 ;//     }if(i==10){
                 ;//     PORTF = 0x26 + j;
                 ;//     PORTD = 0xFF;
                 ;//     PORTA = 0xFF;
                 ;//     }
                 ;
                 ;//     delay_ms(1);
                 ;// }
                 ;
                 ;void thang_may() {
                 ; 0000 0077 void thang_may() {
                 _thang_may:
                 ; .FSTART _thang_may
                 ; 0000 0078     // neu ko co tang nao dc bam thi thoi ko lam gi ca
                 ; 0000 0079     for (i = 0; i <= 8; i++){
000293 2488      	CLR  R8
000294 2499      	CLR  R9
                 _0x27:
000295 940e 09d9 	CALL SUBOPT_0x1
000297 f064      	BRLT _0x28
                 ; 0000 007A         if (order[i] == true){
000298 940e 09de 	CALL SUBOPT_0x2
00029a 30a1      	CPI  R26,LOW(0x1)
00029b f041      	BREQ _0x28
                 ; 0000 007B             break;
                 ; 0000 007C         }
                 ; 0000 007D         if (i == 8){
00029c 940e 09d9 	CALL SUBOPT_0x1
00029e f409      	BRNE _0x2A
                 ; 0000 007E             return;
00029f 9508      	RET
                 ; 0000 007F         }
                 ; 0000 0080     }
                 _0x2A:
0002a0 01f4      	MOVW R30,R8
0002a1 9631      	ADIW R30,1
0002a2 014f      	MOVW R8,R30
0002a3 cff1      	RJMP _0x27
                 _0x28:
                 ; 0000 0081     // thiet lap trang thai len/xuong
                 ; 0000 0082     if (len) {
0002a4 20dd      	TST  R13
0002a5 f0b9      	BREQ _0x2B
                 ; 0000 0083         for (i = currentLevel; i <= 8; i++) {
0002a6 940e 09e4 	CALL SUBOPT_0x3
                 _0x2D:
0002a8 940e 09d9 	CALL SUBOPT_0x1
0002aa f094      	BRLT _0x2E
                 ; 0000 0084             // neu len tang 8 roi ma ko co yeu cau thi chuyen che do cho di xuong
                 ; 0000 0085             if (i == 8 && order[i] == false) {
0002ab 940e 09d9 	CALL SUBOPT_0x1
0002ad f421      	BRNE _0x30
0002ae 940e 09de 	CALL SUBOPT_0x2
0002b0 30a0      	CPI  R26,LOW(0x0)
0002b1 f009      	BREQ _0x31
                 _0x30:
0002b2 c002      	RJMP _0x2F
                 _0x31:
                 ; 0000 0086                 len = false;
0002b3 24dd      	CLR  R13
                 ; 0000 0087             }
                 ; 0000 0088             else if (order[i] == true) {
0002b4 c004      	RJMP _0x32
                 _0x2F:
0002b5 940e 09de 	CALL SUBOPT_0x2
0002b7 30a1      	CPI  R26,LOW(0x1)
0002b8 f021      	BREQ _0x2E
                 ; 0000 0089                 break;
                 ; 0000 008A             }
                 ; 0000 008B         }
                 _0x32:
0002b9 01f4      	MOVW R30,R8
0002ba 9631      	ADIW R30,1
0002bb 014f      	MOVW R8,R30
0002bc cfeb      	RJMP _0x2D
                 _0x2E:
                 ; 0000 008C     }
                 ; 0000 008D     if (!len) {
                 _0x2B:
0002bd 20dd      	TST  R13
0002be f4d1      	BRNE _0x34
                 ; 0000 008E         for (i = currentLevel; i >= 0; i--) {
0002bf 940e 09e4 	CALL SUBOPT_0x3
                 _0x36:
0002c1 2400      	CLR  R0
0002c2 1480      	CP   R8,R0
0002c3 0490      	CPC  R9,R0
0002c4 f0a4      	BRLT _0x37
                 ; 0000 008F             // tuong tu voi doan di len. neu da o tang 0
                 ; 0000 0090             if (i == 0 && order[i] == false) {
0002c5 2400      	CLR  R0
0002c6 1408      	CP   R0,R8
0002c7 0409      	CPC  R0,R9
0002c8 f421      	BRNE _0x39
0002c9 940e 09de 	CALL SUBOPT_0x2
0002cb 30a0      	CPI  R26,LOW(0x0)
0002cc f009      	BREQ _0x3A
                 _0x39:
0002cd c003      	RJMP _0x38
                 _0x3A:
                 ; 0000 0091                 len = true;
0002ce e0e1      	LDI  R30,LOW(1)
0002cf 2ede      	MOV  R13,R30
                 ; 0000 0092                 return;
0002d0 9508      	RET
                 ; 0000 0093             }
                 ; 0000 0094             else if (order[i] == true) {
                 _0x38:
0002d1 940e 09de 	CALL SUBOPT_0x2
0002d3 30a1      	CPI  R26,LOW(0x1)
0002d4 f021      	BREQ _0x37
                 ; 0000 0095                 break;
                 ; 0000 0096             }
                 ; 0000 0097         }
0002d5 01f4      	MOVW R30,R8
0002d6 9731      	SBIW R30,1
0002d7 014f      	MOVW R8,R30
0002d8 cfe8      	RJMP _0x36
                 _0x37:
                 ; 0000 0098     }
                 ; 0000 0099 
                 ; 0000 009A     // trong truong hop co tang dc bam, mo servo 1 goc 90 do trong 2s
                 ; 0000 009B     vi_tri = 15;
                 _0x34:
0002d9 940e 09e9 	CALL SUBOPT_0x4
                 ; 0000 009C     delay_ms(2000);
                 ; 0000 009D     vi_tri = 10;
                 ; 0000 009E 
                 ; 0000 009F     if (len)
0002db 20dd      	TST  R13
0002dc f011      	BREQ _0x3D
                 ; 0000 00A0         quay_DC();
0002dd df4f      	RCALL _quay_DC
                 ; 0000 00A1     else
0002de c001      	RJMP _0x3E
                 _0x3D:
                 ; 0000 00A2         quay_nguoc_DC();
0002df df4b      	RCALL _quay_nguoc_DC
                 ; 0000 00A3 
                 ; 0000 00A4     while (order[currentLevel] == false) {
                 _0x3E:
                 _0x3F:
0002e0 940e 09f4 	CALL SUBOPT_0x5
0002e2 58e1      	SUBI R30,LOW(-_order)
0002e3 4ffa      	SBCI R31,HIGH(-_order)
0002e4 81e0      	LD   R30,Z
0002e5 30e0      	CPI  R30,0
0002e6 f009      	BREQ PC+2
0002e7 c072      	RJMP _0x41
                 ; 0000 00A5         k = 0;
0002e8 24aa      	CLR  R10
0002e9 24bb      	CLR  R11
                 ; 0000 00A6         glcd_clear();
0002ea d222      	RCALL _glcd_clear
                 ; 0000 00A7         glcd_outtextxy(5, 25, "Next:");
0002eb e0e5      	LDI  R30,LOW(5)
0002ec 93ea      	ST   -Y,R30
0002ed e1e9      	LDI  R30,LOW(25)
0002ee 93ea      	ST   -Y,R30
                +
0002ef e0a0     +LDI R26 , LOW ( _0x42 + ( 0 ) )
0002f0 e0b5     +LDI R27 , HIGH ( _0x42 + ( 0 ) )
                 	__POINTW2MN _0x42,0
0002f1 940e 085b 	CALL _glcd_outtextxy
                 ; 0000 00A8 
                 ; 0000 00A9         lcd_clear();
0002f3 940e 08b8 	CALL _lcd_clear
                 ; 0000 00AA         lcd_gotoxy(0, 1);
0002f5 e0e0      	LDI  R30,LOW(0)
0002f6 93ea      	ST   -Y,R30
0002f7 e0a1      	LDI  R26,LOW(1)
0002f8 940e 08a9 	CALL _lcd_gotoxy
                 ; 0000 00AB         lcd_puts("Next: ");
                +
0002fa e0a6     +LDI R26 , LOW ( _0x42 + ( 6 ) )
0002fb e0b5     +LDI R27 , HIGH ( _0x42 + ( 6 ) )
                 	__POINTW2MN _0x42,6
0002fc 940e 08df 	CALL _lcd_puts
                 ; 0000 00AC         if (len){
0002fe 20dd      	TST  R13
0002ff f111      	BREQ _0x43
                 ; 0000 00AD             currentLevel++;
000300 e8a8      	LDI  R26,LOW(_currentLevel)
000301 e0b5      	LDI  R27,HIGH(_currentLevel)
000302 940e 09f9 	CALL SUBOPT_0x6
                 ; 0000 00AE             for(i = currentLevel; i<=8; i++){
000304 940e 09e4 	CALL SUBOPT_0x3
                 _0x45:
000306 940e 09d9 	CALL SUBOPT_0x1
000308 f04c      	BRLT _0x46
                 ; 0000 00AF                 if(order[i]){
000309 940e 09ff 	CALL SUBOPT_0x7
00030b f011      	BREQ _0x47
                 ; 0000 00B0                     itoa(i,what);
00030c 940e 0a06 	CALL SUBOPT_0x8
                 ; 0000 00B1                     glcd_outtextxy(35+6*k, 25, what);
                 ; 0000 00B2                     k++;
                 ; 0000 00B3 
                 ; 0000 00B4                     lcd_putchar(i+'0');
                 ; 0000 00B5                 }
                 ; 0000 00B6             }
                 _0x47:
00030e 01f4      	MOVW R30,R8
00030f 9631      	ADIW R30,1
000310 014f      	MOVW R8,R30
000311 cff4      	RJMP _0x45
                 _0x46:
                 ; 0000 00B7             for(i = currentLevel-1; i>=0; i--){
000312 940e 0a1f 	CALL SUBOPT_0x9
                 _0x49:
000314 2400      	CLR  R0
000315 1480      	CP   R8,R0
000316 0490      	CPC  R9,R0
000317 f04c      	BRLT _0x4A
                 ; 0000 00B8                 if(order[i]){
000318 940e 09ff 	CALL SUBOPT_0x7
00031a f011      	BREQ _0x4B
                 ; 0000 00B9                     itoa(i,what);
00031b 940e 0a06 	CALL SUBOPT_0x8
                 ; 0000 00BA                     glcd_outtextxy(35+6*k, 25, what);
                 ; 0000 00BB                     k++;
                 ; 0000 00BC 
                 ; 0000 00BD                     lcd_putchar(i+'0');
                 ; 0000 00BE                 }
                 ; 0000 00BF             }
                 _0x4B:
00031d 01f4      	MOVW R30,R8
00031e 9731      	SBIW R30,1
00031f 014f      	MOVW R8,R30
000320 cff3      	RJMP _0x49
                 _0x4A:
                 ; 0000 00C0 
                 ; 0000 00C1         } else {
000321 c024      	RJMP _0x4C
                 _0x43:
                 ; 0000 00C2             currentLevel--;
000322 e8a8      	LDI  R26,LOW(_currentLevel)
000323 e0b5      	LDI  R27,HIGH(_currentLevel)
000324 91ed      	LD   R30,X+
000325 91fd      	LD   R31,X+
000326 9731      	SBIW R30,1
000327 93fe      	ST   -X,R31
000328 93ee      	ST   -X,R30
                 ; 0000 00C3             for(i = currentLevel; i>=0; i--){
000329 940e 09e4 	CALL SUBOPT_0x3
                 _0x4E:
00032b 2400      	CLR  R0
00032c 1480      	CP   R8,R0
00032d 0490      	CPC  R9,R0
00032e f04c      	BRLT _0x4F
                 ; 0000 00C4                 if(order[i]){
00032f 940e 09ff 	CALL SUBOPT_0x7
000331 f011      	BREQ _0x50
                 ; 0000 00C5                     itoa(i,what);
000332 940e 0a06 	CALL SUBOPT_0x8
                 ; 0000 00C6                     glcd_outtextxy(35+6*k, 25, what);
                 ; 0000 00C7                     k++;
                 ; 0000 00C8 
                 ; 0000 00C9                     lcd_putchar(i+'0');
                 ; 0000 00CA                 }
                 ; 0000 00CB             }
                 _0x50:
000334 01f4      	MOVW R30,R8
000335 9731      	SBIW R30,1
000336 014f      	MOVW R8,R30
000337 cff3      	RJMP _0x4E
                 _0x4F:
                 ; 0000 00CC             for(i = currentLevel+1; i<=8; i++){
000338 940e 0a23 	CALL SUBOPT_0xA
                 _0x52:
00033a 940e 09d9 	CALL SUBOPT_0x1
00033c f04c      	BRLT _0x53
                 ; 0000 00CD                 if(order[i]){
00033d 940e 09ff 	CALL SUBOPT_0x7
00033f f011      	BREQ _0x54
                 ; 0000 00CE                     itoa(i,what);
000340 940e 0a06 	CALL SUBOPT_0x8
                 ; 0000 00CF                     glcd_outtextxy(35+6*k, 25, what);
                 ; 0000 00D0                     k++;
                 ; 0000 00D1 
                 ; 0000 00D2                     lcd_putchar(i+'0');
                 ; 0000 00D3                 }
                 ; 0000 00D4             }
                 _0x54:
000342 01f4      	MOVW R30,R8
000343 9631      	ADIW R30,1
000344 014f      	MOVW R8,R30
000345 cff4      	RJMP _0x52
                 _0x53:
                 ; 0000 00D5         }
                 _0x4C:
                 ; 0000 00D6         //glcd_clear();
                 ; 0000 00D7         itoa(currentLevel, what);
000346 940e 0a27 	CALL SUBOPT_0xB
                 ; 0000 00D8         //glcd_outtextxy(5, 20, "Dang di chuyen ...");
                 ; 0000 00D9         glcd_outtextxy(5, 15, "Current:");
                +
000348 e0ad     +LDI R26 , LOW ( _0x42 + ( 13 ) )
000349 e0b5     +LDI R27 , HIGH ( _0x42 + ( 13 ) )
                 	__POINTW2MN _0x42,13
00034a 940e 0a33 	CALL SUBOPT_0xC
                 ; 0000 00DA         glcd_outtextxy(55, 15, what);
                 ; 0000 00DB 
                 ; 0000 00DC 
                 ; 0000 00DD         lcd_gotoxy(0, 0);
00034c e0e0      	LDI  R30,LOW(0)
00034d 93ea      	ST   -Y,R30
00034e e0a0      	LDI  R26,LOW(0)
00034f 940e 08a9 	CALL _lcd_gotoxy
                 ; 0000 00DE         lcd_puts("Current: ");
                +
000351 e1a6     +LDI R26 , LOW ( _0x42 + ( 22 ) )
000352 e0b5     +LDI R27 , HIGH ( _0x42 + ( 22 ) )
                 	__POINTW2MN _0x42,22
000353 940e 0a3d 	CALL SUBOPT_0xD
                 ; 0000 00DF         lcd_putchar(currentLevel+'0');
                 ; 0000 00E0         //hienThiLed7Doan(currentLevel, 0b00000001);
                 ; 0000 00E1         delay_ms(1000);
000355 eea8      	LDI  R26,LOW(1000)
000356 e0b3      	LDI  R27,HIGH(1000)
000357 940e 0acd 	CALL _delay_ms
                 ; 0000 00E2     }
000359 cf86      	RJMP _0x3F
                 _0x41:
                 ; 0000 00E3     //hien thi nokia
                 ; 0000 00E4     //glcd_clear();
                 ; 0000 00E5     //itoa(currentLevel, what);
                 ; 0000 00E6     //glcd_outtextxy(5, 20, "Den tang");
                 ; 0000 00E7     //glcd_outtextxy(60, 20, what);
                 ; 0000 00E8     glcd_clear();
00035a d1b2      	RCALL _glcd_clear
                 ; 0000 00E9     itoa(currentLevel, what);
00035b 940e 0a27 	CALL SUBOPT_0xB
                 ; 0000 00EA     glcd_outtextxy(5, 15, "Current:");
                +
00035d e2a0     +LDI R26 , LOW ( _0x42 + ( 32 ) )
00035e e0b5     +LDI R27 , HIGH ( _0x42 + ( 32 ) )
                 	__POINTW2MN _0x42,32
00035f 940e 0a33 	CALL SUBOPT_0xC
                 ; 0000 00EB     glcd_outtextxy(55, 15, what);
                 ; 0000 00EC     glcd_outtextxy(5, 25, "Next:");
000361 e0e5      	LDI  R30,LOW(5)
000362 93ea      	ST   -Y,R30
000363 e1e9      	LDI  R30,LOW(25)
000364 93ea      	ST   -Y,R30
                +
000365 e2a9     +LDI R26 , LOW ( _0x42 + ( 41 ) )
000366 e0b5     +LDI R27 , HIGH ( _0x42 + ( 41 ) )
                 	__POINTW2MN _0x42,41
000367 940e 085b 	CALL _glcd_outtextxy
                 ; 0000 00ED     k=0;
000369 24aa      	CLR  R10
00036a 24bb      	CLR  R11
                 ; 0000 00EE 
                 ; 0000 00EF     lcd_clear();
00036b 940e 08b8 	CALL _lcd_clear
                 ; 0000 00F0     lcd_gotoxy(0, 0);
00036d e0e0      	LDI  R30,LOW(0)
00036e 93ea      	ST   -Y,R30
00036f e0a0      	LDI  R26,LOW(0)
000370 940e 08a9 	CALL _lcd_gotoxy
                 ; 0000 00F1     lcd_puts("Current: ");
                +
000372 e2af     +LDI R26 , LOW ( _0x42 + ( 47 ) )
000373 e0b5     +LDI R27 , HIGH ( _0x42 + ( 47 ) )
                 	__POINTW2MN _0x42,47
000374 940e 0a3d 	CALL SUBOPT_0xD
                 ; 0000 00F2     lcd_putchar(currentLevel+'0');
                 ; 0000 00F3     lcd_gotoxy(0, 1);
000376 e0e0      	LDI  R30,LOW(0)
000377 93ea      	ST   -Y,R30
000378 e0a1      	LDI  R26,LOW(1)
000379 940e 08a9 	CALL _lcd_gotoxy
                 ; 0000 00F4     lcd_puts("Next: ");
                +
00037b e3a9     +LDI R26 , LOW ( _0x42 + ( 57 ) )
00037c e0b5     +LDI R27 , HIGH ( _0x42 + ( 57 ) )
                 	__POINTW2MN _0x42,57
00037d 940e 08df 	CALL _lcd_puts
                 ; 0000 00F5     if (len){
00037f 20dd      	TST  R13
000380 f0f1      	BREQ _0x55
                 ; 0000 00F6         for(i = currentLevel+1; i<=8; i++){
000381 940e 0a23 	CALL SUBOPT_0xA
                 _0x57:
000383 940e 09d9 	CALL SUBOPT_0x1
000385 f04c      	BRLT _0x58
                 ; 0000 00F7             if(order[i]){
000386 940e 09ff 	CALL SUBOPT_0x7
000388 f011      	BREQ _0x59
                 ; 0000 00F8                 itoa(i,what);
000389 940e 0a06 	CALL SUBOPT_0x8
                 ; 0000 00F9                 glcd_outtextxy(35+6*k, 25, what);
                 ; 0000 00FA                 k++;
                 ; 0000 00FB 
                 ; 0000 00FC                 lcd_putchar(i+'0');
                 ; 0000 00FD             }
                 ; 0000 00FE             }
                 _0x59:
00038b 01f4      	MOVW R30,R8
00038c 9631      	ADIW R30,1
00038d 014f      	MOVW R8,R30
00038e cff4      	RJMP _0x57
                 _0x58:
                 ; 0000 00FF         for(i = currentLevel-1; i>=0; i--){
00038f 940e 0a1f 	CALL SUBOPT_0x9
                 _0x5B:
000391 2400      	CLR  R0
000392 1480      	CP   R8,R0
000393 0490      	CPC  R9,R0
000394 f04c      	BRLT _0x5C
                 ; 0000 0100             if(order[i]){
000395 940e 09ff 	CALL SUBOPT_0x7
000397 f011      	BREQ _0x5D
                 ; 0000 0101                 itoa(i,what);
000398 940e 0a06 	CALL SUBOPT_0x8
                 ; 0000 0102                 glcd_outtextxy(35+6*k, 25, what);
                 ; 0000 0103                 k++;
                 ; 0000 0104 
                 ; 0000 0105                 lcd_putchar(i+'0');
                 ; 0000 0106             }
                 ; 0000 0107         }
                 _0x5D:
00039a 01f4      	MOVW R30,R8
00039b 9731      	SBIW R30,1
00039c 014f      	MOVW R8,R30
00039d cff3      	RJMP _0x5B
                 _0x5C:
                 ; 0000 0108 
                 ; 0000 0109     } else {
00039e c01d      	RJMP _0x5E
                 _0x55:
                 ; 0000 010A         for(i = currentLevel-1; i>=0; i--){
00039f 940e 0a1f 	CALL SUBOPT_0x9
                 _0x60:
0003a1 2400      	CLR  R0
0003a2 1480      	CP   R8,R0
0003a3 0490      	CPC  R9,R0
0003a4 f04c      	BRLT _0x61
                 ; 0000 010B             if(order[i]){
0003a5 940e 09ff 	CALL SUBOPT_0x7
0003a7 f011      	BREQ _0x62
                 ; 0000 010C                 itoa(i,what);
0003a8 940e 0a06 	CALL SUBOPT_0x8
                 ; 0000 010D                 glcd_outtextxy(35+6*k, 25, what);
                 ; 0000 010E                 k++;
                 ; 0000 010F 
                 ; 0000 0110                 lcd_putchar(i+'0');
                 ; 0000 0111             }
                 ; 0000 0112         }
                 _0x62:
0003aa 01f4      	MOVW R30,R8
0003ab 9731      	SBIW R30,1
0003ac 014f      	MOVW R8,R30
0003ad cff3      	RJMP _0x60
                 _0x61:
                 ; 0000 0113         for(i = currentLevel+1; i<=8; i++){
0003ae 940e 0a23 	CALL SUBOPT_0xA
                 _0x64:
0003b0 940e 09d9 	CALL SUBOPT_0x1
0003b2 f04c      	BRLT _0x65
                 ; 0000 0114             if(order[i]){
0003b3 940e 09ff 	CALL SUBOPT_0x7
0003b5 f011      	BREQ _0x66
                 ; 0000 0115                 itoa(i,what);
0003b6 940e 0a06 	CALL SUBOPT_0x8
                 ; 0000 0116                 glcd_outtextxy(35+6*k, 25, what);
                 ; 0000 0117                 k++;
                 ; 0000 0118 
                 ; 0000 0119                 lcd_putchar(i+'0');
                 ; 0000 011A             }
                 ; 0000 011B         }
                 _0x66:
0003b8 01f4      	MOVW R30,R8
0003b9 9631      	ADIW R30,1
0003ba 014f      	MOVW R8,R30
0003bb cff4      	RJMP _0x64
                 _0x65:
                 ; 0000 011C     }
                 _0x5E:
                 ; 0000 011D 
                 ; 0000 011E 
                 ; 0000 011F     order[currentLevel] = false;
0003bc 91a0 0588 	LDS  R26,_currentLevel
0003be 91b0 0589 	LDS  R27,_currentLevel+1
0003c0 58a1      	SUBI R26,LOW(-_order)
0003c1 4fba      	SBCI R27,HIGH(-_order)
0003c2 e0e0      	LDI  R30,LOW(0)
0003c3 93ec      	ST   X,R30
                 ; 0000 0120     dung_DC();
0003c4 de6c      	RCALL _dung_DC
                 ; 0000 0121     vi_tri = 15;
0003c5 940e 09e9 	CALL SUBOPT_0x4
                 ; 0000 0122     delay_ms(2000);
                 ; 0000 0123     vi_tri = 10;
                 ; 0000 0124 
                 ; 0000 0125 }
0003c7 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x42:
000500           	.BYTE 0x40
                 ;
                 ;void main(void)
                 ; 0000 0128 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0129     //khoi_tao_led_7_doan();
                 ; 0000 012A     init_glcd(4, 66);
0003c8 e0e4      	LDI  R30,LOW(4)
0003c9 e0f0      	LDI  R31,HIGH(4)
0003ca 93fa      	ST   -Y,R31
0003cb 93ea      	ST   -Y,R30
0003cc e4a2      	LDI  R26,LOW(66)
0003cd e0b0      	LDI  R27,0
0003ce de30      	RCALL _init_glcd
                 ; 0000 012B     init_lcd();
0003cf de4d      	RCALL _init_lcd
                 ; 0000 012C     init_register();
0003d0 dde6      	RCALL _init_register
                 ; 0000 012D     init_timer();
0003d1 de64      	RCALL _init_timer
                 ; 0000 012E     itoa(currentLevel, what);
0003d2 940e 09f4 	CALL SUBOPT_0x5
0003d4 93fa      	ST   -Y,R31
0003d5 93ea      	ST   -Y,R30
0003d6 e6af      	LDI  R26,LOW(_what)
0003d7 e0b5      	LDI  R27,HIGH(_what)
0003d8 940e 091b 	CALL _itoa
                 ; 0000 012F     glcd_outtextxy(30, 20, what);
0003da e1ee      	LDI  R30,LOW(30)
0003db 93ea      	ST   -Y,R30
0003dc e1e4      	LDI  R30,LOW(20)
0003dd 93ea      	ST   -Y,R30
0003de e6af      	LDI  R26,LOW(_what)
0003df e0b5      	LDI  R27,HIGH(_what)
0003e0 940e 085b 	CALL _glcd_outtextxy
                 ; 0000 0130 
                 ; 0000 0131     while (1)
                 _0x67:
                 ; 0000 0132     {
                 ; 0000 0133     // Please write your application code here
                 ; 0000 0134         thang_may();
0003e2 deb0      	RCALL _thang_may
                 ; 0000 0135     }
0003e3 cffe      	RJMP _0x67
                 ; 0000 0136 }
                 _0x6A:
0003e4 cfff      	RJMP _0x6A
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _pcd8544_delay_G100:
                 ; .FSTART _pcd8544_delay_G100
0003e5 9508      	RET
                 ; .FEND
                 _pcd8544_wrbus_G100:
                 ; .FSTART _pcd8544_wrbus_G100
0003e6 93aa      	ST   -Y,R26
0003e7 931a      	ST   -Y,R17
0003e8 91e0 0065 	LDS  R30,101
0003ea 7eef      	ANDI R30,0xEF
0003eb 93e0 0065 	STS  101,R30
0003ed e018      	LDI  R17,LOW(8)
                 _0x2000004:
0003ee dff6      	RCALL _pcd8544_delay_G100
0003ef 81e9      	LDD  R30,Y+1
0003f0 78e0      	ANDI R30,LOW(0x80)
0003f1 f021      	BREQ _0x2000006
0003f2 91e0 0065 	LDS  R30,101
0003f4 60e2      	ORI  R30,2
0003f5 c003      	RJMP _0x20000A0
                 _0x2000006:
0003f6 91e0 0065 	LDS  R30,101
0003f8 7fed      	ANDI R30,0xFD
                 _0x20000A0:
0003f9 93e0 0065 	STS  101,R30
0003fb 81e9      	LDD  R30,Y+1
0003fc 0fee      	LSL  R30
0003fd 83e9      	STD  Y+1,R30
0003fe dfe6      	RCALL _pcd8544_delay_G100
0003ff 91e0 0065 	LDS  R30,101
000401 60e4      	ORI  R30,4
000402 93e0 0065 	STS  101,R30
000404 dfe0      	RCALL _pcd8544_delay_G100
000405 91e0 0065 	LDS  R30,101
000407 7feb      	ANDI R30,0xFB
000408 93e0 0065 	STS  101,R30
00040a 5011      	SUBI R17,LOW(1)
00040b f711      	BRNE _0x2000004
00040c 91e0 0065 	LDS  R30,101
00040e 61e0      	ORI  R30,0x10
00040f 93e0 0065 	STS  101,R30
000411 8118      	LDD  R17,Y+0
000412 940c 0962 	JMP  _0x2120003
                 ; .FEND
                 _pcd8544_wrcmd:
                 ; .FSTART _pcd8544_wrcmd
000414 93aa      	ST   -Y,R26
000415 91e0 0065 	LDS  R30,101
000417 7fee      	ANDI R30,0xFE
000418 93e0 0065 	STS  101,R30
00041a 81a8      	LD   R26,Y
00041b dfca      	RCALL _pcd8544_wrbus_G100
00041c 940c 0919 	JMP  _0x2120005
                 ; .FEND
                 _pcd8544_wrdata_G100:
                 ; .FSTART _pcd8544_wrdata_G100
00041e 93aa      	ST   -Y,R26
00041f 91e0 0065 	LDS  R30,101
000421 60e1      	ORI  R30,1
000422 93e0 0065 	STS  101,R30
000424 81a8      	LD   R26,Y
000425 dfc0      	RCALL _pcd8544_wrbus_G100
000426 940c 0919 	JMP  _0x2120005
                 ; .FEND
                 _pcd8544_setaddr_G100:
                 ; .FSTART _pcd8544_setaddr_G100
000428 93aa      	ST   -Y,R26
000429 931a      	ST   -Y,R17
00042a 81e9      	LDD  R30,Y+1
00042b 95e6      	LSR  R30
00042c 95e6      	LSR  R30
00042d 95e6      	LSR  R30
00042e 2f1e      	MOV  R17,R30
00042f e5e4      	LDI  R30,LOW(84)
000430 9fe1      	MUL  R30,R17
000431 01f0      	MOVW R30,R0
000432 01df      	MOVW R26,R30
000433 81ea      	LDD  R30,Y+2
000434 e0f0      	LDI  R31,0
000435 0fea      	ADD  R30,R26
000436 1ffb      	ADC  R31,R27
000437 93e0 058a 	STS  _gfx_addr_G100,R30
000439 93f0 058b 	STS  _gfx_addr_G100+1,R31
00043b 2fe1      	MOV  R30,R17
00043c 8118      	LDD  R17,Y+0
00043d 940c 09a9 	JMP  _0x2120002
                 ; .FEND
                 _pcd8544_gotoxy:
                 ; .FSTART _pcd8544_gotoxy
00043f 93aa      	ST   -Y,R26
000440 81e9      	LDD  R30,Y+1
000441 68e0      	ORI  R30,0x80
000442 2fae      	MOV  R26,R30
000443 dfd0      	RCALL _pcd8544_wrcmd
000444 81e9      	LDD  R30,Y+1
000445 93ea      	ST   -Y,R30
000446 81a9      	LDD  R26,Y+1
000447 dfe0      	RCALL _pcd8544_setaddr_G100
000448 64e0      	ORI  R30,0x40
000449 2fae      	MOV  R26,R30
00044a dfc9      	RCALL _pcd8544_wrcmd
00044b 940c 0962 	JMP  _0x2120003
                 ; .FEND
                 _pcd8544_rdbyte:
                 ; .FSTART _pcd8544_rdbyte
00044d 93aa      	ST   -Y,R26
00044e 81e9      	LDD  R30,Y+1
00044f 93ea      	ST   -Y,R30
000450 81a9      	LDD  R26,Y+1
000451 dfed      	RCALL _pcd8544_gotoxy
000452 91e0 058a 	LDS  R30,_gfx_addr_G100
000454 91f0 058b 	LDS  R31,_gfx_addr_G100+1
000456 57e4      	SUBI R30,LOW(-_gfx_buffer_G100)
000457 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G100)
000458 81e0      	LD   R30,Z
000459 940c 0962 	JMP  _0x2120003
                 ; .FEND
                 _pcd8544_wrbyte:
                 ; .FSTART _pcd8544_wrbyte
00045b 93aa      	ST   -Y,R26
00045c 940e 0a44 	CALL SUBOPT_0xE
00045e 9731      	SBIW R30,1
00045f 57e4      	SUBI R30,LOW(-_gfx_buffer_G100)
000460 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G100)
000461 81a8      	LD   R26,Y
000462 83a0      	STD  Z+0,R26
000463 dfba      	RCALL _pcd8544_wrdata_G100
000464 940c 0919 	JMP  _0x2120005
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
000466 93ba      	ST   -Y,R27
000467 93aa      	ST   -Y,R26
000468 940e 0b16 	CALL __SAVELOCR4
00046a 91e0 0064 	LDS  R30,100
00046c 61e0      	ORI  R30,0x10
00046d 940e 0a47 	CALL SUBOPT_0xF
00046f 61e0      	ORI  R30,0x10
000470 93e0 0065 	STS  101,R30
000472 91e0 0064 	LDS  R30,100
000474 60e4      	ORI  R30,4
000475 940e 0a47 	CALL SUBOPT_0xF
000477 7feb      	ANDI R30,0xFB
000478 93e0 0065 	STS  101,R30
00047a 91e0 0064 	LDS  R30,100
00047c 60e2      	ORI  R30,2
00047d 93e0 0064 	STS  100,R30
00047f 91e0 0064 	LDS  R30,100
000481 60e1      	ORI  R30,1
000482 93e0 0064 	STS  100,R30
000484 91e0 0064 	LDS  R30,100
000486 60e8      	ORI  R30,8
000487 940e 0a47 	CALL SUBOPT_0xF
000489 7fe7      	ANDI R30,0XF7
00048a 93e0 0065 	STS  101,R30
00048c e0aa      	LDI  R26,LOW(10)
00048d e0b0      	LDI  R27,0
00048e 940e 0acd 	CALL _delay_ms
000490 91e0 0065 	LDS  R30,101
000492 60e8      	ORI  R30,8
000493 93e0 0065 	STS  101,R30
000495 81ec      	LDD  R30,Y+4
000496 81fd      	LDD  R31,Y+4+1
000497 9730      	SBIW R30,0
000498 f121      	BREQ _0x2000008
000499 81e6      	LDD  R30,Z+6
00049a 70e3      	ANDI R30,LOW(0x3)
00049b 2f1e      	MOV  R17,R30
00049c 81ec      	LDD  R30,Y+4
00049d 81fd      	LDD  R31,Y+4+1
00049e 81e6      	LDD  R30,Z+6
00049f 95e6      	LSR  R30
0004a0 95e6      	LSR  R30
0004a1 70e7      	ANDI R30,LOW(0x7)
0004a2 2f0e      	MOV  R16,R30
0004a3 81ec      	LDD  R30,Y+4
0004a4 81fd      	LDD  R31,Y+4+1
0004a5 81e7      	LDD  R30,Z+7
0004a6 77ef      	ANDI R30,0x7F
0004a7 2f3e      	MOV  R19,R30
0004a8 81ac      	LDD  R26,Y+4
0004a9 81bd      	LDD  R27,Y+4+1
0004aa 940e 0aef 	CALL __GETW1P
                +
0004ac 93e0 0544+STS _glcd_state + ( 4 ) , R30
0004ae 93f0 0545+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
0004b0 9612      	ADIW R26,2
0004b1 940e 0aef 	CALL __GETW1P
                +
0004b3 93e0 0559+STS _glcd_state + ( 25 ) , R30
0004b5 93f0 055a+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
0004b7 81ac      	LDD  R26,Y+4
0004b8 81bd      	LDD  R27,Y+4+1
0004b9 9614      	ADIW R26,4
0004ba 940e 0aef 	CALL __GETW1P
0004bc c00d      	RJMP _0x20000A1
                 _0x2000008:
0004bd e010      	LDI  R17,LOW(0)
0004be e003      	LDI  R16,LOW(3)
0004bf e332      	LDI  R19,LOW(50)
0004c0 e0e0      	LDI  R30,LOW(0)
0004c1 e0f0      	LDI  R31,HIGH(0)
                +
0004c2 93e0 0544+STS _glcd_state + ( 4 ) , R30
0004c4 93f0 0545+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
                +
0004c6 93e0 0559+STS _glcd_state + ( 25 ) , R30
0004c8 93f0 055a+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
                 _0x20000A1:
                +
0004ca 93e0 055b+STS _glcd_state + ( 27 ) , R30
0004cc 93f0 055c+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
0004ce e2a1      	LDI  R26,LOW(33)
0004cf df44      	RCALL _pcd8544_wrcmd
0004d0 2fe1      	MOV  R30,R17
0004d1 60e4      	ORI  R30,4
0004d2 2fae      	MOV  R26,R30
0004d3 df40      	RCALL _pcd8544_wrcmd
0004d4 2fe0      	MOV  R30,R16
0004d5 61e0      	ORI  R30,0x10
0004d6 2fae      	MOV  R26,R30
0004d7 df3c      	RCALL _pcd8544_wrcmd
0004d8 2fe3      	MOV  R30,R19
0004d9 68e0      	ORI  R30,0x80
0004da 2fae      	MOV  R26,R30
0004db df38      	RCALL _pcd8544_wrcmd
0004dc e2a0      	LDI  R26,LOW(32)
0004dd df36      	RCALL _pcd8544_wrcmd
0004de e0a1      	LDI  R26,LOW(1)
0004df d022      	RCALL _glcd_display
0004e0 e0e1      	LDI  R30,LOW(1)
0004e1 93e0 0540 	STS  _glcd_state,R30
0004e3 e0e0      	LDI  R30,LOW(0)
                +
0004e4 93e0 0541+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
0004e6 e0e1      	LDI  R30,LOW(1)
                +
0004e7 93e0 0546+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
0004e9 93e0 0547+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
0004eb 93e0 0548+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
0004ed efef      	LDI  R30,LOW(255)
                +
0004ee 93e0 0549+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
0004f0 e0e1      	LDI  R30,LOW(1)
                +
0004f1 93e0 0550+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
0004f3 e5e1     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
0004f4 e0f5     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
0004f5 93fa      	ST   -Y,R31
0004f6 93ea      	ST   -Y,R30
0004f7 efef      	LDI  R30,LOW(255)
0004f8 93ea      	ST   -Y,R30
0004f9 e0a8      	LDI  R26,LOW(8)
0004fa e0b0      	LDI  R27,0
0004fb 940e 0949 	CALL _memset
0004fd d00f      	RCALL _glcd_clear
0004fe e0e1      	LDI  R30,LOW(1)
0004ff 940e 0b1d 	CALL __LOADLOCR4
000501 c060      	RJMP _0x2120009
                 ; .FEND
                 _glcd_display:
                 ; .FSTART _glcd_display
000502 93aa      	ST   -Y,R26
000503 81e8      	LD   R30,Y
000504 30e0      	CPI  R30,0
000505 f011      	BREQ _0x200000A
000506 e0ec      	LDI  R30,LOW(12)
000507 c001      	RJMP _0x200000B
                 _0x200000A:
000508 e0e8      	LDI  R30,LOW(8)
                 _0x200000B:
000509 2fae      	MOV  R26,R30
00050a df09      	RCALL _pcd8544_wrcmd
00050b 940c 0919 	JMP  _0x2120005
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
00050d 940e 0b16 	CALL __SAVELOCR4
00050f e030      	LDI  R19,0
                +
000510 91e0 0541+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000512 30e0      	CPI  R30,0
000513 f009      	BREQ _0x200000D
000514 ef3f      	LDI  R19,LOW(255)
                 _0x200000D:
000515 e0e0      	LDI  R30,LOW(0)
000516 93ea      	ST   -Y,R30
000517 e0a0      	LDI  R26,LOW(0)
000518 df26      	RCALL _pcd8544_gotoxy
                +
000519 ef08     +LDI R16 , LOW ( 504 )
00051a e011     +LDI R17 , HIGH ( 504 )
                 	__GETWRN 16,17,504
                 _0x200000E:
00051b 01f8      	MOVW R30,R16
                +
00051c 5001     +SUBI R16 , LOW ( 1 )
00051d 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
00051e 9730      	SBIW R30,0
00051f f019      	BREQ _0x2000010
000520 2fa3      	MOV  R26,R19
000521 df39      	RCALL _pcd8544_wrbyte
000522 cff8      	RJMP _0x200000E
                 _0x2000010:
000523 e0e0      	LDI  R30,LOW(0)
000524 93ea      	ST   -Y,R30
000525 e0a0      	LDI  R26,LOW(0)
000526 d344      	RCALL _glcd_moveto
000527 940e 0b1d 	CALL __LOADLOCR4
000529 940c 09c8 	JMP  _0x2120001
                 ; .FEND
                 _pcd8544_wrmasked_G100:
                 ; .FSTART _pcd8544_wrmasked_G100
00052b 93aa      	ST   -Y,R26
00052c 931a      	ST   -Y,R17
00052d 81ed      	LDD  R30,Y+5
00052e 93ea      	ST   -Y,R30
00052f 81ad      	LDD  R26,Y+5
000530 df1c      	RCALL _pcd8544_rdbyte
000531 2f1e      	MOV  R17,R30
000532 81e9      	LDD  R30,Y+1
000533 30e7      	CPI  R30,LOW(0x7)
000534 f011      	BREQ _0x2000020
000535 30e8      	CPI  R30,LOW(0x8)
000536 f439      	BRNE _0x2000021
                 _0x2000020:
000537 81eb      	LDD  R30,Y+3
000538 93ea      	ST   -Y,R30
000539 81aa      	LDD  R26,Y+2
00053a 940e 0964 	CALL _glcd_mappixcolor1bit
00053c 83eb      	STD  Y+3,R30
00053d c008      	RJMP _0x2000022
                 _0x2000021:
00053e 30e3      	CPI  R30,LOW(0x3)
00053f f421      	BRNE _0x2000024
000540 81eb      	LDD  R30,Y+3
000541 95e0      	COM  R30
000542 83eb      	STD  Y+3,R30
000543 c002      	RJMP _0x2000025
                 _0x2000024:
000544 30e0      	CPI  R30,0
000545 f421      	BRNE _0x2000026
                 _0x2000025:
                 _0x2000022:
000546 81ea      	LDD  R30,Y+2
000547 95e0      	COM  R30
000548 231e      	AND  R17,R30
000549 c002      	RJMP _0x2000027
                 _0x2000026:
00054a 30e2      	CPI  R30,LOW(0x2)
00054b f429      	BRNE _0x2000028
                 _0x2000027:
00054c 81ea      	LDD  R30,Y+2
00054d 81ab      	LDD  R26,Y+3
00054e 23ea      	AND  R30,R26
00054f 2b1e      	OR   R17,R30
000550 c00e      	RJMP _0x200001E
                 _0x2000028:
000551 30e1      	CPI  R30,LOW(0x1)
000552 f429      	BRNE _0x2000029
000553 81ea      	LDD  R30,Y+2
000554 81ab      	LDD  R26,Y+3
000555 23ea      	AND  R30,R26
000556 271e      	EOR  R17,R30
000557 c007      	RJMP _0x200001E
                 _0x2000029:
000558 30e4      	CPI  R30,LOW(0x4)
000559 f429      	BRNE _0x200001E
00055a 81ea      	LDD  R30,Y+2
00055b 95e0      	COM  R30
00055c 81ab      	LDD  R26,Y+3
00055d 2bea      	OR   R30,R26
00055e 231e      	AND  R17,R30
                 _0x200001E:
00055f 2fa1      	MOV  R26,R17
000560 defa      	RCALL _pcd8544_wrbyte
000561 8118      	LDD  R17,Y+0
                 _0x2120009:
000562 9626      	ADIW R28,6
000563 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
000564 93aa      	ST   -Y,R26
000565 9723      	SBIW R28,3
000566 940e 0b14 	CALL __SAVELOCR6
000568 89a8      	LDD  R26,Y+16
000569 35a4      	CPI  R26,LOW(0x54)
00056a f448      	BRSH _0x200002C
00056b 85af      	LDD  R26,Y+15
00056c 33a0      	CPI  R26,LOW(0x30)
00056d f430      	BRSH _0x200002C
00056e 85ae      	LDD  R26,Y+14
00056f 30a0      	CPI  R26,LOW(0x0)
000570 f019      	BREQ _0x200002C
000571 85ad      	LDD  R26,Y+13
000572 30a0      	CPI  R26,LOW(0x0)
000573 f409      	BRNE _0x200002B
                 _0x200002C:
000574 c1d5      	RJMP _0x2120008
                 _0x200002B:
000575 85ee      	LDD  R30,Y+14
000576 87e8      	STD  Y+8,R30
000577 89a8      	LDD  R26,Y+16
000578 27bb      	CLR  R27
000579 85ee      	LDD  R30,Y+14
00057a e0f0      	LDI  R31,0
00057b 0fae      	ADD  R26,R30
00057c 1fbf      	ADC  R27,R31
00057d 35a5      	CPI  R26,LOW(0x55)
00057e e0e0      	LDI  R30,HIGH(0x55)
00057f 07be      	CPC  R27,R30
000580 f020      	BRLO _0x200002E
000581 89a8      	LDD  R26,Y+16
000582 e5e4      	LDI  R30,LOW(84)
000583 1bea      	SUB  R30,R26
000584 87ee      	STD  Y+14,R30
                 _0x200002E:
000585 852d      	LDD  R18,Y+13
000586 85af      	LDD  R26,Y+15
000587 27bb      	CLR  R27
000588 85ed      	LDD  R30,Y+13
000589 e0f0      	LDI  R31,0
00058a 0fae      	ADD  R26,R30
00058b 1fbf      	ADC  R27,R31
00058c 97d1      	SBIW R26,49
00058d f020      	BRLO _0x200002F
00058e 85af      	LDD  R26,Y+15
00058f e3e0      	LDI  R30,LOW(48)
000590 1bea      	SUB  R30,R26
000591 87ed      	STD  Y+13,R30
                 _0x200002F:
000592 85a9      	LDD  R26,Y+9
000593 30a6      	CPI  R26,LOW(0x6)
000594 f009      	BREQ PC+2
000595 c05b      	RJMP _0x2000030
000596 85ec      	LDD  R30,Y+12
000597 30e1      	CPI  R30,LOW(0x1)
000598 f409      	BRNE _0x2000034
000599 c1b0      	RJMP _0x2120008
                 _0x2000034:
00059a 30e3      	CPI  R30,LOW(0x3)
00059b f439      	BRNE _0x2000037
                +
00059c 91e0 055b+LDS R30 , _glcd_state + ( 27 )
00059e 91f0 055c+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
0005a0 9730      	SBIW R30,0
0005a1 f409      	BRNE _0x2000036
0005a2 c1a7      	RJMP _0x2120008
                 _0x2000036:
                 _0x2000037:
0005a3 8508      	LDD  R16,Y+8
0005a4 85ed      	LDD  R30,Y+13
0005a5 95e6      	LSR  R30
0005a6 95e6      	LSR  R30
0005a7 95e6      	LSR  R30
0005a8 2f3e      	MOV  R19,R30
0005a9 2fe2      	MOV  R30,R18
0005aa 70e7      	ANDI R30,LOW(0x7)
0005ab f419      	BRNE _0x2000039
0005ac 85ad      	LDD  R26,Y+13
0005ad 172a      	CP   R18,R26
0005ae f0e9      	BREQ _0x2000038
                 _0x2000039:
0005af 2fa0      	MOV  R26,R16
0005b0 27bb      	CLR  R27
0005b1 2fe3      	MOV  R30,R19
0005b2 e0f0      	LDI  R31,0
0005b3 940e 0ae7 	CALL __MULW12U
0005b5 85aa      	LDD  R26,Y+10
0005b6 85bb      	LDD  R27,Y+10+1
0005b7 940e 0a4c 	CALL SUBOPT_0x10
0005b9 9526      	LSR  R18
0005ba 9526      	LSR  R18
0005bb 9526      	LSR  R18
0005bc 2f53      	MOV  R21,R19
                 _0x200003B:
0005bd 935f      	PUSH R21
0005be 5f5f      	SUBI R21,-1
0005bf 2fe2      	MOV  R30,R18
0005c0 91af      	POP  R26
0005c1 17ea      	CP   R30,R26
0005c2 f048      	BRLO _0x200003D
0005c3 2f10      	MOV  R17,R16
                 _0x200003E:
0005c4 2fe1      	MOV  R30,R17
0005c5 5011      	SUBI R17,1
0005c6 30e0      	CPI  R30,0
0005c7 f019      	BREQ _0x2000040
0005c8 940e 0a51 	CALL SUBOPT_0x11
0005ca cff9      	RJMP _0x200003E
                 _0x2000040:
0005cb cff1      	RJMP _0x200003B
                 _0x200003D:
                 _0x2000038:
0005cc 85ae      	LDD  R26,Y+14
0005cd 170a      	CP   R16,R26
0005ce f111      	BREQ _0x2000041
0005cf 85ee      	LDD  R30,Y+14
0005d0 85aa      	LDD  R26,Y+10
0005d1 85bb      	LDD  R27,Y+10+1
0005d2 e0f0      	LDI  R31,0
0005d3 940e 0a4c 	CALL SUBOPT_0x10
0005d5 85ed      	LDD  R30,Y+13
0005d6 70e7      	ANDI R30,LOW(0x7)
0005d7 f009      	BREQ _0x2000042
0005d8 5f3f      	SUBI R19,-LOW(1)
                 _0x2000042:
0005d9 e020      	LDI  R18,LOW(0)
                 _0x2000043:
0005da 932f      	PUSH R18
0005db 5f2f      	SUBI R18,-1
0005dc 2fe3      	MOV  R30,R19
0005dd 91af      	POP  R26
0005de 17ae      	CP   R26,R30
0005df f488      	BRSH _0x2000045
0005e0 851e      	LDD  R17,Y+14
                 _0x2000046:
0005e1 931f      	PUSH R17
0005e2 5f1f      	SUBI R17,-1
0005e3 2fe0      	MOV  R30,R16
0005e4 91af      	POP  R26
0005e5 17ae      	CP   R26,R30
0005e6 f418      	BRSH _0x2000048
0005e7 940e 0a51 	CALL SUBOPT_0x11
0005e9 cff7      	RJMP _0x2000046
                 _0x2000048:
0005ea 85ee      	LDD  R30,Y+14
0005eb 81ae      	LDD  R26,Y+6
0005ec 81bf      	LDD  R27,Y+6+1
0005ed e0f0      	LDI  R31,0
0005ee 940e 0a4c 	CALL SUBOPT_0x10
0005f0 cfe9      	RJMP _0x2000043
                 _0x2000045:
                 _0x2000041:
                 _0x2000030:
0005f1 85ef      	LDD  R30,Y+15
0005f2 70e7      	ANDI R30,LOW(0x7)
0005f3 2f3e      	MOV  R19,R30
                 _0x2000049:
0005f4 85ed      	LDD  R30,Y+13
0005f5 30e0      	CPI  R30,0
0005f6 f409      	BRNE PC+2
0005f7 c152      	RJMP _0x200004B
0005f8 85ea      	LDD  R30,Y+10
0005f9 85fb      	LDD  R31,Y+10+1
0005fa 83ee      	STD  Y+6,R30
0005fb 83ff      	STD  Y+6+1,R31
0005fc e010      	LDI  R17,LOW(0)
0005fd 8908      	LDD  R16,Y+16
0005fe 3030      	CPI  R19,0
0005ff f009      	BREQ PC+2
000600 c066      	RJMP _0x200004C
000601 85ad      	LDD  R26,Y+13
000602 30a8      	CPI  R26,LOW(0x8)
000603 f408      	BRSH PC+2
000604 c05d      	RJMP _0x200004D
000605 85e9      	LDD  R30,Y+9
000606 30e0      	CPI  R30,0
000607 f011      	BREQ _0x2000052
000608 30e3      	CPI  R30,LOW(0x3)
000609 f409      	BRNE _0x2000053
                 _0x2000052:
00060a c002      	RJMP _0x2000054
                 _0x2000053:
00060b 30e7      	CPI  R30,LOW(0x7)
00060c f409      	BRNE _0x2000055
                 _0x2000054:
00060d c002      	RJMP _0x2000056
                 _0x2000055:
00060e 30e8      	CPI  R30,LOW(0x8)
00060f f409      	BRNE _0x2000057
                 _0x2000056:
000610 c002      	RJMP _0x2000058
                 _0x2000057:
000611 30e9      	CPI  R30,LOW(0x9)
000612 f409      	BRNE _0x2000059
                 _0x2000058:
000613 c002      	RJMP _0x200005A
                 _0x2000059:
000614 30ea      	CPI  R30,LOW(0xA)
000615 f421      	BRNE _0x200005B
                 _0x200005A:
000616 930a      	ST   -Y,R16
000617 89a8      	LDD  R26,Y+16
000618 de26      	RCALL _pcd8544_gotoxy
000619 c004      	RJMP _0x2000050
                 _0x200005B:
00061a 30e6      	CPI  R30,LOW(0x6)
00061b f411      	BRNE _0x2000050
00061c 940e 0a5e 	CALL SUBOPT_0x12
                 _0x2000050:
                 _0x200005D:
00061e 931f      	PUSH R17
00061f 5f1f      	SUBI R17,-1
000620 85ee      	LDD  R30,Y+14
000621 91af      	POP  R26
000622 17ae      	CP   R26,R30
000623 f5b8      	BRSH _0x200005F
000624 85a9      	LDD  R26,Y+9
000625 30a6      	CPI  R26,LOW(0x6)
000626 f469      	BRNE _0x2000060
000627 940e 0a62 	CALL SUBOPT_0x13
000629 93fa      	ST   -Y,R31
00062a 93ea      	ST   -Y,R30
00062b 940e 0a44 	CALL SUBOPT_0xE
00062d 9731      	SBIW R30,1
00062e 57e4      	SUBI R30,LOW(-_gfx_buffer_G100)
00062f 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G100)
000630 81a0      	LD   R26,Z
000631 940e 09ab 	CALL _glcd_writemem
000633 c026      	RJMP _0x2000061
                 _0x2000060:
000634 85e9      	LDD  R30,Y+9
000635 30e9      	CPI  R30,LOW(0x9)
000636 f411      	BRNE _0x2000065
000637 e050      	LDI  R21,LOW(0)
000638 c00e      	RJMP _0x2000066
                 _0x2000065:
000639 30ea      	CPI  R30,LOW(0xA)
00063a f411      	BRNE _0x2000064
00063b ef5f      	LDI  R21,LOW(255)
00063c c00a      	RJMP _0x2000066
                 _0x2000064:
00063d 940e 0a62 	CALL SUBOPT_0x13
00063f 940e 0a6b 	CALL SUBOPT_0x14
000641 2f5e      	MOV  R21,R30
000642 85e9      	LDD  R30,Y+9
000643 30e7      	CPI  R30,LOW(0x7)
000644 f011      	BREQ _0x200006D
000645 30e8      	CPI  R30,LOW(0x8)
000646 f421      	BRNE _0x200006E
                 _0x200006D:
                 _0x2000066:
000647 940e 0a71 	CALL SUBOPT_0x15
000649 2f5e      	MOV  R21,R30
00064a c006      	RJMP _0x200006F
                 _0x200006E:
00064b 30e3      	CPI  R30,LOW(0x3)
00064c f411      	BRNE _0x2000071
00064d 9550      	COM  R21
00064e c002      	RJMP _0x2000072
                 _0x2000071:
00064f 30e0      	CPI  R30,0
000650 f419      	BRNE _0x2000074
                 _0x2000072:
                 _0x200006F:
000651 2fa5      	MOV  R26,R21
000652 ddcb      	RCALL _pcd8544_wrdata_G100
000653 c006      	RJMP _0x200006B
                 _0x2000074:
000654 940e 0a75 	CALL SUBOPT_0x16
000656 efef      	LDI  R30,LOW(255)
000657 93ea      	ST   -Y,R30
000658 85ad      	LDD  R26,Y+13
000659 ded1      	RCALL _pcd8544_wrmasked_G100
                 _0x200006B:
                 _0x2000061:
00065a cfc3      	RJMP _0x200005D
                 _0x200005F:
00065b 85ef      	LDD  R30,Y+15
00065c 5fe8      	SUBI R30,-LOW(8)
00065d 87ef      	STD  Y+15,R30
00065e 85ed      	LDD  R30,Y+13
00065f 50e8      	SUBI R30,LOW(8)
000660 87ed      	STD  Y+13,R30
000661 c0df      	RJMP _0x2000075
                 _0x200004D:
000662 855d      	LDD  R21,Y+13
000663 e020      	LDI  R18,LOW(0)
000664 e0e0      	LDI  R30,LOW(0)
000665 87ed      	STD  Y+13,R30
000666 c081      	RJMP _0x2000076
                 _0x200004C:
000667 2fe3      	MOV  R30,R19
000668 85ad      	LDD  R26,Y+13
000669 0fae      	ADD  R26,R30
00066a 30a9      	CPI  R26,LOW(0x9)
00066b f420      	BRSH _0x2000077
00066c 852d      	LDD  R18,Y+13
00066d e0e0      	LDI  R30,LOW(0)
00066e 87ed      	STD  Y+13,R30
00066f c003      	RJMP _0x2000078
                 _0x2000077:
000670 e0e8      	LDI  R30,LOW(8)
000671 1be3      	SUB  R30,R19
000672 2f2e      	MOV  R18,R30
                 _0x2000078:
000673 933a      	ST   -Y,R19
000674 2fa2      	MOV  R26,R18
000675 940e 0959 	CALL _glcd_getmask
000677 2f4e      	MOV  R20,R30
000678 85e9      	LDD  R30,Y+9
000679 30e6      	CPI  R30,LOW(0x6)
00067a f529      	BRNE _0x200007C
00067b 940e 0a5e 	CALL SUBOPT_0x12
                 _0x200007D:
00067d 931f      	PUSH R17
00067e 5f1f      	SUBI R17,-1
00067f 85ee      	LDD  R30,Y+14
000680 91af      	POP  R26
000681 17ae      	CP   R26,R30
000682 f4e0      	BRSH _0x200007F
000683 940e 0a44 	CALL SUBOPT_0xE
000685 9731      	SBIW R30,1
000686 57e4      	SUBI R30,LOW(-_gfx_buffer_G100)
000687 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G100)
000688 81e0      	LD   R30,Z
000689 23e4      	AND  R30,R20
00068a 2fae      	MOV  R26,R30
00068b 2fe3      	MOV  R30,R19
00068c 940e 0adf 	CALL __LSRB12
00068e 940e 0a7b 	CALL SUBOPT_0x17
000690 2fe3      	MOV  R30,R19
000691 2fa4      	MOV  R26,R20
000692 940e 0adf 	CALL __LSRB12
000694 95e0      	COM  R30
000695 21e1      	AND  R30,R1
000696 2b5e      	OR   R21,R30
000697 940e 0a62 	CALL SUBOPT_0x13
000699 93fa      	ST   -Y,R31
00069a 93ea      	ST   -Y,R30
00069b 2fa5      	MOV  R26,R21
00069c 940e 09ab 	CALL _glcd_writemem
00069e cfde      	RJMP _0x200007D
                 _0x200007F:
00069f c02c      	RJMP _0x200007B
                 _0x200007C:
0006a0 30e9      	CPI  R30,LOW(0x9)
0006a1 f411      	BRNE _0x2000080
0006a2 e050      	LDI  R21,LOW(0)
0006a3 c003      	RJMP _0x2000081
                 _0x2000080:
0006a4 30ea      	CPI  R30,LOW(0xA)
0006a5 f4a9      	BRNE _0x2000087
0006a6 ef5f      	LDI  R21,LOW(255)
                 _0x2000081:
0006a7 940e 0a71 	CALL SUBOPT_0x15
0006a9 2fae      	MOV  R26,R30
0006aa 2fe3      	MOV  R30,R19
0006ab 940e 0ad7 	CALL __LSLB12
0006ad 2f5e      	MOV  R21,R30
                 _0x2000084:
0006ae 931f      	PUSH R17
0006af 5f1f      	SUBI R17,-1
0006b0 85ee      	LDD  R30,Y+14
0006b1 91af      	POP  R26
0006b2 17ae      	CP   R26,R30
0006b3 f430      	BRSH _0x2000086
0006b4 940e 0a75 	CALL SUBOPT_0x16
0006b6 934a      	ST   -Y,R20
0006b7 e0a0      	LDI  R26,LOW(0)
0006b8 de72      	RCALL _pcd8544_wrmasked_G100
0006b9 cff4      	RJMP _0x2000084
                 _0x2000086:
0006ba c011      	RJMP _0x200007B
                 _0x2000087:
                 _0x2000088:
0006bb 931f      	PUSH R17
0006bc 5f1f      	SUBI R17,-1
0006bd 85ee      	LDD  R30,Y+14
0006be 91af      	POP  R26
0006bf 17ae      	CP   R26,R30
0006c0 f458      	BRSH _0x200008A
0006c1 940e 0a86 	CALL SUBOPT_0x18
0006c3 2fae      	MOV  R26,R30
0006c4 2fe3      	MOV  R30,R19
0006c5 940e 0ad7 	CALL __LSLB12
0006c7 93ea      	ST   -Y,R30
0006c8 934a      	ST   -Y,R20
0006c9 85ad      	LDD  R26,Y+13
0006ca de60      	RCALL _pcd8544_wrmasked_G100
0006cb cfef      	RJMP _0x2000088
                 _0x200008A:
                 _0x200007B:
0006cc 85ed      	LDD  R30,Y+13
0006cd 30e0      	CPI  R30,0
0006ce f409      	BRNE _0x200008B
0006cf c07a      	RJMP _0x200004B
                 _0x200008B:
0006d0 85ad      	LDD  R26,Y+13
0006d1 30a8      	CPI  R26,LOW(0x8)
0006d2 f428      	BRSH _0x200008C
0006d3 85ed      	LDD  R30,Y+13
0006d4 1be2      	SUB  R30,R18
0006d5 2f5e      	MOV  R21,R30
0006d6 e0e0      	LDI  R30,LOW(0)
0006d7 c003      	RJMP _0x20000A2
                 _0x200008C:
0006d8 2f53      	MOV  R21,R19
0006d9 85ed      	LDD  R30,Y+13
0006da 50e8      	SUBI R30,LOW(8)
                 _0x20000A2:
0006db 87ed      	STD  Y+13,R30
0006dc e010      	LDI  R17,LOW(0)
0006dd 85ef      	LDD  R30,Y+15
0006de 5fe8      	SUBI R30,-LOW(8)
0006df 87ef      	STD  Y+15,R30
0006e0 e0e8      	LDI  R30,LOW(8)
0006e1 1be3      	SUB  R30,R19
0006e2 2f2e      	MOV  R18,R30
0006e3 8908      	LDD  R16,Y+16
0006e4 85ea      	LDD  R30,Y+10
0006e5 85fb      	LDD  R31,Y+10+1
0006e6 83ee      	STD  Y+6,R30
0006e7 83ff      	STD  Y+6+1,R31
                 _0x2000076:
0006e8 2fe5      	MOV  R30,R21
0006e9 e0f0      	LDI  R31,0
0006ea 59e0      	SUBI R30,LOW(-__glcd_mask*2)
0006eb 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
0006ec 9144      	LPM  R20,Z
0006ed 85e9      	LDD  R30,Y+9
0006ee 30e6      	CPI  R30,LOW(0x6)
0006ef f529      	BRNE _0x2000091
0006f0 940e 0a5e 	CALL SUBOPT_0x12
                 _0x2000092:
0006f2 931f      	PUSH R17
0006f3 5f1f      	SUBI R17,-1
0006f4 85ee      	LDD  R30,Y+14
0006f5 91af      	POP  R26
0006f6 17ae      	CP   R26,R30
0006f7 f4e0      	BRSH _0x2000094
0006f8 940e 0a44 	CALL SUBOPT_0xE
0006fa 9731      	SBIW R30,1
0006fb 57e4      	SUBI R30,LOW(-_gfx_buffer_G100)
0006fc 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G100)
0006fd 81e0      	LD   R30,Z
0006fe 23e4      	AND  R30,R20
0006ff 2fae      	MOV  R26,R30
000700 2fe2      	MOV  R30,R18
000701 940e 0ad7 	CALL __LSLB12
000703 940e 0a7b 	CALL SUBOPT_0x17
000705 2fe2      	MOV  R30,R18
000706 2fa4      	MOV  R26,R20
000707 940e 0ad7 	CALL __LSLB12
000709 95e0      	COM  R30
00070a 21e1      	AND  R30,R1
00070b 2b5e      	OR   R21,R30
00070c 940e 0a62 	CALL SUBOPT_0x13
00070e 93fa      	ST   -Y,R31
00070f 93ea      	ST   -Y,R30
000710 2fa5      	MOV  R26,R21
000711 940e 09ab 	CALL _glcd_writemem
000713 cfde      	RJMP _0x2000092
                 _0x2000094:
000714 c02c      	RJMP _0x2000090
                 _0x2000091:
000715 30e9      	CPI  R30,LOW(0x9)
000716 f411      	BRNE _0x2000095
000717 e050      	LDI  R21,LOW(0)
000718 c003      	RJMP _0x2000096
                 _0x2000095:
000719 30ea      	CPI  R30,LOW(0xA)
00071a f4a9      	BRNE _0x200009C
00071b ef5f      	LDI  R21,LOW(255)
                 _0x2000096:
00071c 940e 0a71 	CALL SUBOPT_0x15
00071e 2fae      	MOV  R26,R30
00071f 2fe2      	MOV  R30,R18
000720 940e 0adf 	CALL __LSRB12
000722 2f5e      	MOV  R21,R30
                 _0x2000099:
000723 931f      	PUSH R17
000724 5f1f      	SUBI R17,-1
000725 85ee      	LDD  R30,Y+14
000726 91af      	POP  R26
000727 17ae      	CP   R26,R30
000728 f430      	BRSH _0x200009B
000729 940e 0a75 	CALL SUBOPT_0x16
00072b 934a      	ST   -Y,R20
00072c e0a0      	LDI  R26,LOW(0)
00072d ddfd      	RCALL _pcd8544_wrmasked_G100
00072e cff4      	RJMP _0x2000099
                 _0x200009B:
00072f c011      	RJMP _0x2000090
                 _0x200009C:
                 _0x200009D:
000730 931f      	PUSH R17
000731 5f1f      	SUBI R17,-1
000732 85ee      	LDD  R30,Y+14
000733 91af      	POP  R26
000734 17ae      	CP   R26,R30
000735 f458      	BRSH _0x200009F
000736 940e 0a86 	CALL SUBOPT_0x18
000738 2fae      	MOV  R26,R30
000739 2fe2      	MOV  R30,R18
00073a 940e 0adf 	CALL __LSRB12
00073c 93ea      	ST   -Y,R30
00073d 934a      	ST   -Y,R20
00073e 85ad      	LDD  R26,Y+13
00073f ddeb      	RCALL _pcd8544_wrmasked_G100
000740 cfef      	RJMP _0x200009D
                 _0x200009F:
                 _0x2000090:
                 _0x2000075:
000741 85e8      	LDD  R30,Y+8
000742 85aa      	LDD  R26,Y+10
000743 85bb      	LDD  R27,Y+10+1
000744 e0f0      	LDI  R31,0
000745 0fea      	ADD  R30,R26
000746 1ffb      	ADC  R31,R27
000747 87ea      	STD  Y+10,R30
000748 87fb      	STD  Y+10+1,R31
000749 ceaa      	RJMP _0x2000049
                 _0x200004B:
                 _0x2120008:
00074a 940e 0b1b 	CALL __LOADLOCR6
00074c 9661      	ADIW R28,17
00074d 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
00074e 940e 0a93 	CALL SUBOPT_0x19
000750 f024      	BRLT _0x2020003
000751 e0e0      	LDI  R30,LOW(0)
000752 e0f0      	LDI  R31,HIGH(0)
000753 940c 0962 	JMP  _0x2120003
                 _0x2020003:
000755 81a8      	LD   R26,Y
000756 81b9      	LDD  R27,Y+1
000757 35a4      	CPI  R26,LOW(0x54)
000758 e0e0      	LDI  R30,HIGH(0x54)
000759 07be      	CPC  R27,R30
00075a f024      	BRLT _0x2020004
00075b e5e3      	LDI  R30,LOW(83)
00075c e0f0      	LDI  R31,HIGH(83)
00075d 940c 0962 	JMP  _0x2120003
                 _0x2020004:
00075f 81e8      	LD   R30,Y
000760 81f9      	LDD  R31,Y+1
000761 940c 0962 	JMP  _0x2120003
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
000763 940e 0a93 	CALL SUBOPT_0x19
000765 f024      	BRLT _0x2020005
000766 e0e0      	LDI  R30,LOW(0)
000767 e0f0      	LDI  R31,HIGH(0)
000768 940c 0962 	JMP  _0x2120003
                 _0x2020005:
00076a 81a8      	LD   R26,Y
00076b 81b9      	LDD  R27,Y+1
00076c 97d0      	SBIW R26,48
00076d f024      	BRLT _0x2020006
00076e e2ef      	LDI  R30,LOW(47)
00076f e0f0      	LDI  R31,HIGH(47)
000770 940c 0962 	JMP  _0x2120003
                 _0x2020006:
000772 81e8      	LD   R30,Y
000773 81f9      	LDD  R31,Y+1
000774 940c 0962 	JMP  _0x2120003
                 ; .FEND
                 _glcd_getcharw_G101:
                 ; .FSTART _glcd_getcharw_G101
000776 93ba      	ST   -Y,R27
000777 93aa      	ST   -Y,R26
000778 9723      	SBIW R28,3
000779 940e 0a9a 	CALL SUBOPT_0x1A
00077b 018f      	MOVW R16,R30
00077c 2e00      	MOV  R0,R16
00077d 2a01      	OR   R0,R17
00077e f419      	BRNE _0x202000B
00077f e0e0      	LDI  R30,LOW(0)
000780 e0f0      	LDI  R31,HIGH(0)
000781 c05f      	RJMP _0x2120007
                 _0x202000B:
000782 940e 0aa1 	CALL SUBOPT_0x1B
000784 820f      	STD  Y+7,R0
000785 940e 0aa1 	CALL SUBOPT_0x1B
000787 820e      	STD  Y+6,R0
000788 940e 0aa1 	CALL SUBOPT_0x1B
00078a 8608      	STD  Y+8,R0
00078b 85eb      	LDD  R30,Y+11
00078c 85a8      	LDD  R26,Y+8
00078d 17ea      	CP   R30,R26
00078e f418      	BRSH _0x202000C
00078f e0e0      	LDI  R30,LOW(0)
000790 e0f0      	LDI  R31,HIGH(0)
000791 c04f      	RJMP _0x2120007
                 _0x202000C:
000792 01f8      	MOVW R30,R16
                +
000793 5f0f     +SUBI R16 , LOW ( - 1 )
000794 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000795 9154      	LPM  R21,Z
000796 85a8      	LDD  R26,Y+8
000797 27bb      	CLR  R27
000798 27ee      	CLR  R30
000799 0fa5      	ADD  R26,R21
00079a 1fbe      	ADC  R27,R30
00079b 85eb      	LDD  R30,Y+11
00079c e0f0      	LDI  R31,0
00079d 17ea      	CP   R30,R26
00079e 07fb      	CPC  R31,R27
00079f f018      	BRLO _0x202000D
0007a0 e0e0      	LDI  R30,LOW(0)
0007a1 e0f0      	LDI  R31,HIGH(0)
0007a2 c03e      	RJMP _0x2120007
                 _0x202000D:
0007a3 81ee      	LDD  R30,Y+6
0007a4 95e6      	LSR  R30
0007a5 95e6      	LSR  R30
0007a6 95e6      	LSR  R30
0007a7 2f4e      	MOV  R20,R30
0007a8 81ee      	LDD  R30,Y+6
0007a9 70e7      	ANDI R30,LOW(0x7)
0007aa f009      	BREQ _0x202000E
0007ab 5f4f      	SUBI R20,-LOW(1)
                 _0x202000E:
0007ac 81ef      	LDD  R30,Y+7
0007ad 30e0      	CPI  R30,0
0007ae f0a1      	BREQ _0x202000F
0007af 85a9      	LDD  R26,Y+9
0007b0 85ba      	LDD  R27,Y+9+1
0007b1 93ec      	ST   X,R30
0007b2 85a8      	LDD  R26,Y+8
0007b3 85eb      	LDD  R30,Y+11
0007b4 1bea      	SUB  R30,R26
0007b5 e0f0      	LDI  R31,0
0007b6 01df      	MOVW R26,R30
0007b7 81ef      	LDD  R30,Y+7
0007b8 e0f0      	LDI  R31,0
0007b9 940e 0ae7 	CALL __MULW12U
0007bb 01df      	MOVW R26,R30
0007bc 2fe4      	MOV  R30,R20
0007bd e0f0      	LDI  R31,0
0007be 940e 0ae7 	CALL __MULW12U
0007c0 0fe0      	ADD  R30,R16
0007c1 1ff1      	ADC  R31,R17
0007c2 c01e      	RJMP _0x2120007
                 _0x202000F:
0007c3 0198      	MOVW R18,R16
0007c4 2fe5      	MOV  R30,R21
0007c5 e0f0      	LDI  R31,0
                +
0007c6 0f0e     +ADD R16 , R30
0007c7 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2020010:
0007c8 85a8      	LDD  R26,Y+8
0007c9 5faf      	SUBI R26,-LOW(1)
0007ca 87a8      	STD  Y+8,R26
0007cb 50a1      	SUBI R26,LOW(1)
0007cc 85eb      	LDD  R30,Y+11
0007cd 17ae      	CP   R26,R30
0007ce f460      	BRSH _0x2020012
0007cf 01f9      	MOVW R30,R18
                +
0007d0 5f2f     +SUBI R18 , LOW ( - 1 )
0007d1 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0007d2 91a4      	LPM  R26,Z
0007d3 e0b0      	LDI  R27,0
0007d4 2fe4      	MOV  R30,R20
0007d5 e0f0      	LDI  R31,0
0007d6 940e 0ae7 	CALL __MULW12U
                +
0007d8 0f0e     +ADD R16 , R30
0007d9 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
0007da cfed      	RJMP _0x2020010
                 _0x2020012:
0007db 01f9      	MOVW R30,R18
0007dc 91e4      	LPM  R30,Z
0007dd 85a9      	LDD  R26,Y+9
0007de 85ba      	LDD  R27,Y+9+1
0007df 93ec      	ST   X,R30
0007e0 01f8      	MOVW R30,R16
                 _0x2120007:
0007e1 940e 0b1b 	CALL __LOADLOCR6
0007e3 962c      	ADIW R28,12
0007e4 9508      	RET
                 ; .FEND
                 _glcd_new_line_G101:
                 ; .FSTART _glcd_new_line_G101
0007e5 e0e0      	LDI  R30,LOW(0)
                +
0007e6 93e0 0542+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
0007e8 91a0 0543+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
0007ea 27bb      	CLR  R27
0007eb 940e 0aa6 	CALL SUBOPT_0x1C
0007ed e0f0      	LDI  R31,0
0007ee 0fae      	ADD  R26,R30
0007ef 1fbf      	ADC  R27,R31
                +
0007f0 91e0 0547+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
0007f2 e0f0      	LDI  R31,0
0007f3 0fae      	ADD  R26,R30
0007f4 1fbf      	ADC  R27,R31
0007f5 df6d      	RCALL _glcd_clipy
                +
0007f6 93e0 0543+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
0007f8 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
0007f9 93aa      	ST   -Y,R26
0007fa 9721      	SBIW R28,1
0007fb 940e 0a9a 	CALL SUBOPT_0x1A
0007fd 9730      	SBIW R30,0
0007fe f409      	BRNE PC+2
0007ff c055      	RJMP _0x202001F
000800 81af      	LDD  R26,Y+7
000801 30aa      	CPI  R26,LOW(0xA)
000802 f409      	BRNE _0x2020020
000803 c04f      	RJMP _0x2020021
                 _0x2020020:
000804 81ef      	LDD  R30,Y+7
000805 93ea      	ST   -Y,R30
000806 01de      	MOVW R26,R28
000807 9617      	ADIW R26,7
000808 df6d      	RCALL _glcd_getcharw_G101
000809 01af      	MOVW R20,R30
00080a 9730      	SBIW R30,0
00080b f409      	BRNE _0x2020022
00080c c04a      	RJMP _0x2120006
                 _0x2020022:
                +
00080d 91e0 0546+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
00080f 81ae      	LDD  R26,Y+6
000810 0fea      	ADD  R30,R26
000811 2f3e      	MOV  R19,R30
                +
000812 91a0 0542+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
000814 27bb      	CLR  R27
000815 e0f0      	LDI  R31,0
000816 0fea      	ADD  R30,R26
000817 1ffb      	ADC  R31,R27
000818 018f      	MOVW R16,R30
                +
000819 3505     +CPI R16 , LOW ( 85 )
00081a e0e0     +LDI R30 , HIGH ( 85 )
00081b 071e     +CPC R17 , R30
                 	__CPWRN 16,17,85
00081c f018      	BRLO _0x2020023
00081d 2f03      	MOV  R16,R19
00081e 2711      	CLR  R17
00081f dfc5      	RCALL _glcd_new_line_G101
                 _0x2020023:
                +
000820 91e0 0542+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000822 93ea      	ST   -Y,R30
                +
000823 91e0 0543+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000825 93ea      	ST   -Y,R30
000826 85e8      	LDD  R30,Y+8
000827 93ea      	ST   -Y,R30
000828 940e 0aa6 	CALL SUBOPT_0x1C
00082a 93ea      	ST   -Y,R30
00082b e0e1      	LDI  R30,LOW(1)
00082c 93ea      	ST   -Y,R30
00082d 935a      	ST   -Y,R21
00082e 934a      	ST   -Y,R20
00082f e0a7      	LDI  R26,LOW(7)
000830 dd33      	RCALL _glcd_block
                +
000831 91e0 0542+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000833 81ae      	LDD  R26,Y+6
000834 0fea      	ADD  R30,R26
000835 93ea      	ST   -Y,R30
                +
000836 91e0 0543+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000838 93ea      	ST   -Y,R30
                +
000839 91e0 0546+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
00083b 93ea      	ST   -Y,R30
00083c 940e 0aa6 	CALL SUBOPT_0x1C
00083e 940e 0aad 	CALL SUBOPT_0x1D
                +
000840 91e0 0542+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000842 93ea      	ST   -Y,R30
                +
000843 91a0 0543+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000845 940e 0aa6 	CALL SUBOPT_0x1C
000847 0fea      	ADD  R30,R26
000848 93ea      	ST   -Y,R30
000849 933a      	ST   -Y,R19
                +
00084a 91e0 0547+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
00084c 940e 0aad 	CALL SUBOPT_0x1D
00084e e5e4      	LDI  R30,LOW(84)
00084f e0f0      	LDI  R31,HIGH(84)
000850 17e0      	CP   R30,R16
000851 07f1      	CPC  R31,R17
000852 f411      	BRNE _0x2020024
                 _0x2020021:
000853 df91      	RCALL _glcd_new_line_G101
000854 c002      	RJMP _0x2120006
                 _0x2020024:
                 _0x202001F:
                +
000855 9300 0542+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
                 _0x2120006:
000857 940e 0b1b 	CALL __LOADLOCR6
000859 9628      	ADIW R28,8
00085a 9508      	RET
                 ; .FEND
                 _glcd_outtextxy:
                 ; .FSTART _glcd_outtextxy
00085b 93ba      	ST   -Y,R27
00085c 93aa      	ST   -Y,R26
00085d 931a      	ST   -Y,R17
00085e 81ec      	LDD  R30,Y+4
00085f 93ea      	ST   -Y,R30
000860 81ac      	LDD  R26,Y+4
000861 d009      	RCALL _glcd_moveto
                 _0x2020025:
000862 940e 0ab7 	CALL SUBOPT_0x1E
000864 f019      	BREQ _0x2020027
000865 2fa1      	MOV  R26,R17
000866 df92      	RCALL _glcd_putchar
000867 cffa      	RJMP _0x2020025
                 _0x2020027:
000868 8118      	LDD  R17,Y+0
000869 940c 0957 	JMP  _0x2120004
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
00086b 93aa      	ST   -Y,R26
00086c 81a9      	LDD  R26,Y+1
00086d 27bb      	CLR  R27
00086e dedf      	RCALL _glcd_clipx
                +
00086f 93e0 0542+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000871 81a8      	LD   R26,Y
000872 27bb      	CLR  R27
000873 deef      	RCALL _glcd_clipy
                +
000874 93e0 0543+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000876 940c 0962 	JMP  _0x2120003
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G103:
                 ; .FSTART __lcd_write_nibble_G103
000878 93aa      	ST   -Y,R26
000879 81e8      	LD   R30,Y
00087a 71e0      	ANDI R30,LOW(0x10)
00087b f011      	BREQ _0x2060004
00087c 9adb      	SBI  0x1B,3
00087d c001      	RJMP _0x2060005
                 _0x2060004:
00087e 98db      	CBI  0x1B,3
                 _0x2060005:
00087f 81e8      	LD   R30,Y
000880 72e0      	ANDI R30,LOW(0x20)
000881 f011      	BREQ _0x2060006
000882 9adc      	SBI  0x1B,4
000883 c001      	RJMP _0x2060007
                 _0x2060006:
000884 98dc      	CBI  0x1B,4
                 _0x2060007:
000885 81e8      	LD   R30,Y
000886 74e0      	ANDI R30,LOW(0x40)
000887 f011      	BREQ _0x2060008
000888 9add      	SBI  0x1B,5
000889 c001      	RJMP _0x2060009
                 _0x2060008:
00088a 98dd      	CBI  0x1B,5
                 _0x2060009:
00088b 81e8      	LD   R30,Y
00088c 78e0      	ANDI R30,LOW(0x80)
00088d f011      	BREQ _0x206000A
00088e 9ade      	SBI  0x1B,6
00088f c001      	RJMP _0x206000B
                 _0x206000A:
000890 98de      	CBI  0x1B,6
                 _0x206000B:
                +
000891 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000892 958a     +DEC R24
000893 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000894 9ada      	SBI  0x1B,2
                +
000895 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000896 958a     +DEC R24
000897 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000898 98da      	CBI  0x1B,2
                +
000899 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00089a 958a     +DEC R24
00089b f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00089c c07c      	RJMP _0x2120005
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
00089d 93aa      	ST   -Y,R26
00089e 81a8      	LD   R26,Y
00089f dfd8      	RCALL __lcd_write_nibble_G103
0008a0 81e8          ld    r30,y
0008a1 95e2          swap  r30
0008a2 83e8          st    y,r30
0008a3 81a8      	LD   R26,Y
0008a4 dfd3      	RCALL __lcd_write_nibble_G103
                +
0008a5 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0008a6 958a     +DEC R24
0008a7 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0008a8 c070      	RJMP _0x2120005
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0008a9 93aa      	ST   -Y,R26
0008aa 81e8      	LD   R30,Y
0008ab e0f0      	LDI  R31,0
0008ac 57ec      	SUBI R30,LOW(-__base_y_G103)
0008ad 4ff8      	SBCI R31,HIGH(-__base_y_G103)
0008ae 81e0      	LD   R30,Z
0008af 81a9      	LDD  R26,Y+1
0008b0 0fae      	ADD  R26,R30
0008b1 dfeb      	RCALL __lcd_write_data
0008b2 80c9      	LDD  R12,Y+1
0008b3 81e8      	LD   R30,Y
0008b4 93e0 0788 	STS  __lcd_y,R30
0008b6 940c 0962 	JMP  _0x2120003
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0008b8 e0a2      	LDI  R26,LOW(2)
0008b9 940e 0abf 	CALL SUBOPT_0x1F
0008bb e0ac      	LDI  R26,LOW(12)
0008bc dfe0      	RCALL __lcd_write_data
0008bd e0a1      	LDI  R26,LOW(1)
0008be 940e 0abf 	CALL SUBOPT_0x1F
0008c0 e0e0      	LDI  R30,LOW(0)
0008c1 93e0 0788 	STS  __lcd_y,R30
0008c3 2ece      	MOV  R12,R30
0008c4 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0008c5 93aa      	ST   -Y,R26
0008c6 81a8      	LD   R26,Y
0008c7 30aa      	CPI  R26,LOW(0xA)
0008c8 f021      	BREQ _0x2060011
0008c9 91e0 0789 	LDS  R30,__lcd_maxx
0008cb 16ce      	CP   R12,R30
0008cc f060      	BRLO _0x2060010
                 _0x2060011:
0008cd e0e0      	LDI  R30,LOW(0)
0008ce 93ea      	ST   -Y,R30
0008cf 91a0 0788 	LDS  R26,__lcd_y
0008d1 5faf      	SUBI R26,-LOW(1)
0008d2 93a0 0788 	STS  __lcd_y,R26
0008d4 dfd4      	RCALL _lcd_gotoxy
0008d5 81a8      	LD   R26,Y
0008d6 30aa      	CPI  R26,LOW(0xA)
0008d7 f409      	BRNE _0x2060013
0008d8 c040      	RJMP _0x2120005
                 _0x2060013:
                 _0x2060010:
0008d9 94c3      	INC  R12
0008da 9ad8      	SBI  0x1B,0
0008db 81a8      	LD   R26,Y
0008dc dfc0      	RCALL __lcd_write_data
0008dd 98d8      	CBI  0x1B,0
0008de c03a      	RJMP _0x2120005
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0008df 93ba      	ST   -Y,R27
0008e0 93aa      	ST   -Y,R26
0008e1 931a      	ST   -Y,R17
                 _0x2060014:
0008e2 940e 0ab7 	CALL SUBOPT_0x1E
0008e4 f019      	BREQ _0x2060016
0008e5 2fa1      	MOV  R26,R17
0008e6 dfde      	RCALL _lcd_putchar
0008e7 cffa      	RJMP _0x2060014
                 _0x2060016:
0008e8 8118      	LDD  R17,Y+0
0008e9 940c 09a9 	JMP  _0x2120002
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0008eb 93aa      	ST   -Y,R26
0008ec 9ad3      	SBI  0x1A,3
0008ed 9ad4      	SBI  0x1A,4
0008ee 9ad5      	SBI  0x1A,5
0008ef 9ad6      	SBI  0x1A,6
0008f0 9ad2      	SBI  0x1A,2
0008f1 9ad0      	SBI  0x1A,0
0008f2 9ad1      	SBI  0x1A,1
0008f3 98da      	CBI  0x1B,2
0008f4 98d8      	CBI  0x1B,0
0008f5 98d9      	CBI  0x1B,1
0008f6 81e8      	LD   R30,Y
0008f7 93e0 0789 	STS  __lcd_maxx,R30
0008f9 58e0      	SUBI R30,-LOW(128)
                +
0008fa 93e0 0786+STS __base_y_G103 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G103,2
0008fc 81e8      	LD   R30,Y
0008fd 54e0      	SUBI R30,-LOW(192)
                +
0008fe 93e0 0787+STS __base_y_G103 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G103,3
000900 e1a4      	LDI  R26,LOW(20)
000901 e0b0      	LDI  R27,0
000902 940e 0acd 	CALL _delay_ms
000904 940e 0ac5 	CALL SUBOPT_0x20
000906 940e 0ac5 	CALL SUBOPT_0x20
000908 940e 0ac5 	CALL SUBOPT_0x20
00090a e2a0      	LDI  R26,LOW(32)
00090b df6c      	RCALL __lcd_write_nibble_G103
                +
00090c ec88     +LDI R24 , LOW ( 200 )
00090d e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00090e 9701     +SBIW R24 , 1
00090f f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000910 e2a8      	LDI  R26,LOW(40)
000911 df8b      	RCALL __lcd_write_data
000912 e0a4      	LDI  R26,LOW(4)
000913 df89      	RCALL __lcd_write_data
000914 e8a5      	LDI  R26,LOW(133)
000915 df87      	RCALL __lcd_write_data
000916 e0a6      	LDI  R26,LOW(6)
000917 df85      	RCALL __lcd_write_data
000918 df9f      	RCALL _lcd_clear
                 _0x2120005:
000919 9621      	ADIW R28,1
00091a 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _itoa:
                 ; .FSTART _itoa
00091b 93ba      	ST   -Y,R27
00091c 93aa      	ST   -Y,R26
00091d 91a9          ld   r26,y+
00091e 91b9          ld   r27,y+
00091f 91e9          ld   r30,y+
000920 91f9          ld   r31,y+
000921 9630          adiw r30,0
000922 f42a          brpl __itoa0
000923 95e0          com  r30
000924 95f0          com  r31
000925 9631          adiw r30,1
000926 e26d          ldi  r22,'-'
000927 936d          st   x+,r22
                 __itoa0:
000928 94e8          clt
000929 e180          ldi  r24,low(10000)
00092a e297          ldi  r25,high(10000)
00092b d00d          rcall __itoa1
00092c ee88          ldi  r24,low(1000)
00092d e093          ldi  r25,high(1000)
00092e d00a          rcall __itoa1
00092f e684          ldi  r24,100
000930 2799          clr  r25
000931 d007          rcall __itoa1
000932 e08a          ldi  r24,10
000933 d005          rcall __itoa1
000934 2f6e          mov  r22,r30
000935 d010          rcall __itoa5
000936 2766          clr  r22
000937 936c          st   x,r22
000938 9508          ret
                 
                 __itoa1:
000939 2766          clr	 r22
                 __itoa2:
00093a 17e8          cp   r30,r24
00093b 07f9          cpc  r31,r25
00093c f020          brlo __itoa3
00093d 9563          inc  r22
00093e 1be8          sub  r30,r24
00093f 0bf9          sbc  r31,r25
000940 f7c9          brne __itoa2
                 __itoa3:
000941 2366          tst  r22
000942 f411          brne __itoa4
000943 f016          brts __itoa5
000944 9508          ret
                 __itoa4:
000945 9468          set
                 __itoa5:
000946 5d60          subi r22,-0x30
000947 936d          st   x+,r22
000948 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
000949 93ba      	ST   -Y,R27
00094a 93aa      	ST   -Y,R26
00094b 81b9          ldd  r27,y+1
00094c 81a8          ld   r26,y
00094d 9610          adiw r26,0
00094e f031          breq memset1
00094f 81fc          ldd  r31,y+4
000950 81eb          ldd  r30,y+3
000951 816a          ldd  r22,y+2
                 memset0:
000952 9361          st   z+,r22
000953 9711          sbiw r26,1
000954 f7e9          brne memset0
                 memset1:
000955 81eb          ldd  r30,y+3
000956 81fc          ldd  r31,y+4
                 _0x2120004:
000957 9625      	ADIW R28,5
000958 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
000959 93aa      	ST   -Y,R26
00095a 81e8      	LD   R30,Y
00095b e0f0      	LDI  R31,0
00095c 59e0      	SUBI R30,LOW(-__glcd_mask*2)
00095d 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
00095e 91a4      	LPM  R26,Z
00095f 81e9      	LDD  R30,Y+1
000960 940e 0ad7 	CALL __LSLB12
                 _0x2120003:
000962 9622      	ADIW R28,2
000963 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
000964 93aa      	ST   -Y,R26
000965 931a      	ST   -Y,R17
000966 81e9      	LDD  R30,Y+1
000967 30e7      	CPI  R30,LOW(0x7)
000968 f011      	BREQ _0x20C0007
000969 30ea      	CPI  R30,LOW(0xA)
00096a f419      	BRNE _0x20C0008
                 _0x20C0007:
00096b 9110 0540 	LDS  R17,_glcd_state
00096d c009      	RJMP _0x20C0009
                 _0x20C0008:
00096e 30e9      	CPI  R30,LOW(0x9)
00096f f419      	BRNE _0x20C000B
                +
000970 9110 0541+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
000972 c004      	RJMP _0x20C0009
                 _0x20C000B:
000973 30e8      	CPI  R30,LOW(0x8)
000974 f4a1      	BRNE _0x20C0005
                +
000975 9110 0550+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x20C0009:
                +
000977 91e0 0541+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000979 30e0      	CPI  R30,0
00097a f049      	BREQ _0x20C000E
00097b 3010      	CPI  R17,0
00097c f019      	BREQ _0x20C000F
00097d efef      	LDI  R30,LOW(255)
00097e 8118      	LDD  R17,Y+0
00097f c029      	RJMP _0x2120002
                 _0x20C000F:
000980 81ea      	LDD  R30,Y+2
000981 95e0      	COM  R30
000982 8118      	LDD  R17,Y+0
000983 c025      	RJMP _0x2120002
                 _0x20C000E:
000984 3010      	CPI  R17,0
000985 f419      	BRNE _0x20C0011
000986 e0e0      	LDI  R30,LOW(0)
000987 8118      	LDD  R17,Y+0
000988 c020      	RJMP _0x2120002
                 _0x20C0011:
                 _0x20C0005:
000989 81ea      	LDD  R30,Y+2
00098a 8118      	LDD  R17,Y+0
00098b c01d      	RJMP _0x2120002
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
00098c 93ba      	ST   -Y,R27
00098d 93aa      	ST   -Y,R26
00098e 81ea      	LDD  R30,Y+2
00098f 30e1      	CPI  R30,LOW(0x1)
000990 f421      	BRNE _0x20C0015
000991 81e8      	LD   R30,Y
000992 81f9      	LDD  R31,Y+1
000993 91e4      	LPM  R30,Z
000994 c014      	RJMP _0x2120002
                 _0x20C0015:
000995 30e2      	CPI  R30,LOW(0x2)
000996 f429      	BRNE _0x20C0016
000997 81a8      	LD   R26,Y
000998 81b9      	LDD  R27,Y+1
000999 940e 0af3 	CALL __EEPROMRDB
00099b c00d      	RJMP _0x2120002
                 _0x20C0016:
00099c 30e3      	CPI  R30,LOW(0x3)
00099d f441      	BRNE _0x20C0018
00099e 81a8      	LD   R26,Y
00099f 81b9      	LDD  R27,Y+1
                +
0009a0 91e0 0559+LDS R30 , _glcd_state + ( 25 )
0009a2 91f0 055a+LDS R31 , _glcd_state + ( 25 ) + 1
0009a4 9509     +ICALL
                 	__CALL1MN _glcd_state,25
0009a5 c003      	RJMP _0x2120002
                 _0x20C0018:
0009a6 81a8      	LD   R26,Y
0009a7 81b9      	LDD  R27,Y+1
0009a8 91ec      	LD   R30,X
                 _0x2120002:
0009a9 9623      	ADIW R28,3
0009aa 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
0009ab 93aa      	ST   -Y,R26
0009ac 81eb      	LDD  R30,Y+3
0009ad 30e0      	CPI  R30,0
0009ae f429      	BRNE _0x20C001C
0009af 81e8      	LD   R30,Y
0009b0 81a9      	LDD  R26,Y+1
0009b1 81ba      	LDD  R27,Y+1+1
0009b2 93ec      	ST   X,R30
0009b3 c014      	RJMP _0x20C001B
                 _0x20C001C:
0009b4 30e2      	CPI  R30,LOW(0x2)
0009b5 f431      	BRNE _0x20C001D
0009b6 81e8      	LD   R30,Y
0009b7 81a9      	LDD  R26,Y+1
0009b8 81ba      	LDD  R27,Y+1+1
0009b9 940e 0aff 	CALL __EEPROMWRB
0009bb c00c      	RJMP _0x20C001B
                 _0x20C001D:
0009bc 30e3      	CPI  R30,LOW(0x3)
0009bd f451      	BRNE _0x20C001B
0009be 81e9      	LDD  R30,Y+1
0009bf 81fa      	LDD  R31,Y+1+1
0009c0 93fa      	ST   -Y,R31
0009c1 93ea      	ST   -Y,R30
0009c2 81aa      	LDD  R26,Y+2
                +
0009c3 91e0 055b+LDS R30 , _glcd_state + ( 27 )
0009c5 91f0 055c+LDS R31 , _glcd_state + ( 27 ) + 1
0009c7 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x20C001B:
                 _0x2120001:
0009c8 9624      	ADIW R28,4
0009c9 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _glcd_state:
000540           	.BYTE 0x1D
                 _keypad:
00055d           	.BYTE 0x12
                 _what:
00056f           	.BYTE 0x10
                 _order:
00057f           	.BYTE 0x9
                 _currentLevel:
000588           	.BYTE 0x2
                 _gfx_addr_G100:
00058a           	.BYTE 0x2
                 _gfx_buffer_G100:
00058c           	.BYTE 0x1F8
                 __base_y_G103:
000784           	.BYTE 0x4
                 __lcd_y:
000788           	.BYTE 0x1
                 __lcd_maxx:
000789           	.BYTE 0x1
                 __seed_G104:
00078a           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x0:
0009ca e0a6      	LDI  R26,LOW(6)
0009cb 9f0a      	MUL  R16,R26
0009cc 01f0      	MOVW R30,R0
0009cd 5ae3      	SUBI R30,LOW(-_keypad)
0009ce 4ffa      	SBCI R31,HIGH(-_keypad)
0009cf 01df      	MOVW R26,R30
0009d0 2fe3      	MOV  R30,R19
0009d1 e0f0      	LDI  R31,0
0009d2 0fee      	LSL  R30
0009d3 1fff      	ROL  R31
0009d4 0fae      	ADD  R26,R30
0009d5 1fbf      	ADC  R27,R31
0009d6 940e 0aef 	CALL __GETW1P
0009d8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x1:
0009d9 e0e8      	LDI  R30,LOW(8)
0009da e0f0      	LDI  R31,HIGH(8)
0009db 15e8      	CP   R30,R8
0009dc 05f9      	CPC  R31,R9
0009dd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2:
0009de e7af      	LDI  R26,LOW(_order)
0009df e0b5      	LDI  R27,HIGH(_order)
0009e0 0da8      	ADD  R26,R8
0009e1 1db9      	ADC  R27,R9
0009e2 91ac      	LD   R26,X
0009e3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
                +
0009e4 9080 0588+LDS R8 , 0 + ( _currentLevel )
0009e6 9090 0589+LDS R9 , 0 + ( _currentLevel ) + 1
                 	__GETWRMN 8,9,0,_currentLevel
0009e8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4:
0009e9 e0ef      	LDI  R30,LOW(15)
0009ea e0f0      	LDI  R31,HIGH(15)
0009eb 013f      	MOVW R6,R30
0009ec eda0      	LDI  R26,LOW(2000)
0009ed e0b7      	LDI  R27,HIGH(2000)
0009ee 940e 0acd 	CALL _delay_ms
0009f0 e0ea      	LDI  R30,LOW(10)
0009f1 e0f0      	LDI  R31,HIGH(10)
0009f2 013f      	MOVW R6,R30
0009f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x5:
0009f4 91e0 0588 	LDS  R30,_currentLevel
0009f6 91f0 0589 	LDS  R31,_currentLevel+1
0009f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x6:
0009f9 91ed      	LD   R30,X+
0009fa 91fd      	LD   R31,X+
0009fb 9631      	ADIW R30,1
0009fc 93fe      	ST   -X,R31
0009fd 93ee      	ST   -X,R30
0009fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x7:
0009ff e7af      	LDI  R26,LOW(_order)
000a00 e0b5      	LDI  R27,HIGH(_order)
000a01 0da8      	ADD  R26,R8
000a02 1db9      	ADC  R27,R9
000a03 91ec      	LD   R30,X
000a04 30e0      	CPI  R30,0
000a05 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:158 WORDS
                 SUBOPT_0x8:
000a06 929a      	ST   -Y,R9
000a07 928a      	ST   -Y,R8
000a08 e6af      	LDI  R26,LOW(_what)
000a09 e0b5      	LDI  R27,HIGH(_what)
000a0a 940e 091b 	CALL _itoa
000a0c 2dea      	MOV  R30,R10
000a0d e0a6      	LDI  R26,LOW(6)
000a0e 02ea      	MULS R30,R26
000a0f 01f0      	MOVW R30,R0
000a10 5ded      	SUBI R30,-LOW(35)
000a11 93ea      	ST   -Y,R30
000a12 e1e9      	LDI  R30,LOW(25)
000a13 93ea      	ST   -Y,R30
000a14 e6af      	LDI  R26,LOW(_what)
000a15 e0b5      	LDI  R27,HIGH(_what)
000a16 940e 085b 	CALL _glcd_outtextxy
000a18 01f5      	MOVW R30,R10
000a19 9631      	ADIW R30,1
000a1a 015f      	MOVW R10,R30
000a1b 2da8      	MOV  R26,R8
000a1c 5da0      	SUBI R26,-LOW(48)
000a1d 940c 08c5 	JMP  _lcd_putchar
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
000a1f dfd4      	RCALL SUBOPT_0x5
000a20 9731      	SBIW R30,1
000a21 014f      	MOVW R8,R30
000a22 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
000a23 dfd0      	RCALL SUBOPT_0x5
000a24 9631      	ADIW R30,1
000a25 014f      	MOVW R8,R30
000a26 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xB:
000a27 dfcc      	RCALL SUBOPT_0x5
000a28 93fa      	ST   -Y,R31
000a29 93ea      	ST   -Y,R30
000a2a e6af      	LDI  R26,LOW(_what)
000a2b e0b5      	LDI  R27,HIGH(_what)
000a2c 940e 091b 	CALL _itoa
000a2e e0e5      	LDI  R30,LOW(5)
000a2f 93ea      	ST   -Y,R30
000a30 e0ef      	LDI  R30,LOW(15)
000a31 93ea      	ST   -Y,R30
000a32 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xC:
000a33 940e 085b 	CALL _glcd_outtextxy
000a35 e3e7      	LDI  R30,LOW(55)
000a36 93ea      	ST   -Y,R30
000a37 e0ef      	LDI  R30,LOW(15)
000a38 93ea      	ST   -Y,R30
000a39 e6af      	LDI  R26,LOW(_what)
000a3a e0b5      	LDI  R27,HIGH(_what)
000a3b 940c 085b 	JMP  _glcd_outtextxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xD:
000a3d 940e 08df 	CALL _lcd_puts
000a3f 91a0 0588 	LDS  R26,_currentLevel
000a41 5da0      	SUBI R26,-LOW(48)
000a42 940c 08c5 	JMP  _lcd_putchar
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE:
000a44 e8aa      	LDI  R26,LOW(_gfx_addr_G100)
000a45 e0b5      	LDI  R27,HIGH(_gfx_addr_G100)
000a46 cfb2      	RJMP SUBOPT_0x6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
000a47 93e0 0064 	STS  100,R30
000a49 91e0 0065 	LDS  R30,101
000a4b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
000a4c 0fea      	ADD  R30,R26
000a4d 1ffb      	ADC  R31,R27
000a4e 83ee      	STD  Y+6,R30
000a4f 83ff      	STD  Y+6+1,R31
000a50 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x11:
000a51 85ec      	LDD  R30,Y+12
000a52 93ea      	ST   -Y,R30
000a53 81ef      	LDD  R30,Y+7
000a54 85f8      	LDD  R31,Y+7+1
000a55 9631      	ADIW R30,1
000a56 83ef      	STD  Y+7,R30
000a57 87f8      	STD  Y+7+1,R31
000a58 9731      	SBIW R30,1
000a59 93fa      	ST   -Y,R31
000a5a 93ea      	ST   -Y,R30
000a5b e0a0      	LDI  R26,LOW(0)
000a5c 940c 09ab 	JMP  _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
000a5e 930a      	ST   -Y,R16
000a5f 89a8      	LDD  R26,Y+16
000a60 940c 0428 	JMP  _pcd8544_setaddr_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x13:
000a62 85ec      	LDD  R30,Y+12
000a63 93ea      	ST   -Y,R30
000a64 81ef      	LDD  R30,Y+7
000a65 85f8      	LDD  R31,Y+7+1
000a66 9631      	ADIW R30,1
000a67 83ef      	STD  Y+7,R30
000a68 87f8      	STD  Y+7+1,R31
000a69 9731      	SBIW R30,1
000a6a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x14:
000a6b 2766      	CLR  R22
000a6c 2777      	CLR  R23
000a6d 01df      	MOVW R26,R30
000a6e 01cb      	MOVW R24,R22
000a6f 940c 098c 	JMP  _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15:
000a71 935a      	ST   -Y,R21
000a72 85aa      	LDD  R26,Y+10
000a73 940c 0964 	JMP  _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x16:
000a75 930a      	ST   -Y,R16
000a76 9503      	INC  R16
000a77 89e8      	LDD  R30,Y+16
000a78 93ea      	ST   -Y,R30
000a79 935a      	ST   -Y,R21
000a7a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x17:
000a7b 2f5e      	MOV  R21,R30
000a7c 85ec      	LDD  R30,Y+12
000a7d 93ea      	ST   -Y,R30
000a7e 81af      	LDD  R26,Y+7
000a7f 85b8      	LDD  R27,Y+7+1
000a80 2788      	CLR  R24
000a81 2799      	CLR  R25
000a82 940e 098c 	CALL _glcd_readmem
000a84 2e1e      	MOV  R1,R30
000a85 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x18:
000a86 930a      	ST   -Y,R16
000a87 9503      	INC  R16
000a88 89e8      	LDD  R30,Y+16
000a89 93ea      	ST   -Y,R30
000a8a 85ee      	LDD  R30,Y+14
000a8b 93ea      	ST   -Y,R30
000a8c 85e9      	LDD  R30,Y+9
000a8d 85fa      	LDD  R31,Y+9+1
000a8e 9631      	ADIW R30,1
000a8f 87e9      	STD  Y+9,R30
000a90 87fa      	STD  Y+9+1,R31
000a91 9731      	SBIW R30,1
000a92 cfd8      	RJMP SUBOPT_0x14
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19:
000a93 93ba      	ST   -Y,R27
000a94 93aa      	ST   -Y,R26
000a95 81a8      	LD   R26,Y
000a96 81b9      	LDD  R27,Y+1
000a97 940e 0b10 	CALL __CPW02
000a99 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A:
000a9a 940e 0b14 	CALL __SAVELOCR6
                +
000a9c 91e0 0544+LDS R30 , _glcd_state + ( 4 )
000a9e 91f0 0545+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000aa0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1B:
000aa1 01f8      	MOVW R30,R16
                +
000aa2 5f0f     +SUBI R16 , LOW ( - 1 )
000aa3 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000aa4 9004      	LPM  R0,Z
000aa5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1C:
                +
000aa6 91e0 0544+LDS R30 , _glcd_state + ( 4 )
000aa8 91f0 0545+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000aaa 9631      	ADIW R30,1
000aab 91e4      	LPM  R30,Z
000aac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1D:
000aad 93ea      	ST   -Y,R30
000aae e0e0      	LDI  R30,LOW(0)
000aaf 93ea      	ST   -Y,R30
000ab0 e0e0      	LDI  R30,LOW(0)
000ab1 e0f0      	LDI  R31,HIGH(0)
000ab2 93fa      	ST   -Y,R31
000ab3 93ea      	ST   -Y,R30
000ab4 e0a9      	LDI  R26,LOW(9)
000ab5 940c 0564 	JMP  _glcd_block
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1E:
000ab7 81a9      	LDD  R26,Y+1
000ab8 81ba      	LDD  R27,Y+1+1
000ab9 91ed      	LD   R30,X+
000aba 83a9      	STD  Y+1,R26
000abb 83ba      	STD  Y+1+1,R27
000abc 2f1e      	MOV  R17,R30
000abd 30e0      	CPI  R30,0
000abe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F:
000abf 940e 089d 	CALL __lcd_write_data
000ac1 e0a3      	LDI  R26,LOW(3)
000ac2 e0b0      	LDI  R27,0
000ac3 940c 0acd 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x20:
000ac5 e3a0      	LDI  R26,LOW(48)
000ac6 940e 0878 	CALL __lcd_write_nibble_G103
                +
000ac8 ec88     +LDI R24 , LOW ( 200 )
000ac9 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000aca 9701     +SBIW R24 , 1
000acb f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000acc 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000acd 9610      	adiw r26,0
000ace f039      	breq __delay_ms1
                 __delay_ms0:
                +
000acf ed80     +LDI R24 , LOW ( 0x7D0 )
000ad0 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000ad1 9701     +SBIW R24 , 1
000ad2 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000ad3 95a8      	wdr
000ad4 9711      	sbiw r26,1
000ad5 f7c9      	brne __delay_ms0
                 __delay_ms1:
000ad6 9508      	ret
                 
                 __LSLB12:
000ad7 23ee      	TST  R30
000ad8 2e0e      	MOV  R0,R30
000ad9 2fea      	MOV  R30,R26
000ada f019      	BREQ __LSLB12R
                 __LSLB12L:
000adb 0fee      	LSL  R30
000adc 940a      	DEC  R0
000add f7e9      	BRNE __LSLB12L
                 __LSLB12R:
000ade 9508      	RET
                 
                 __LSRB12:
000adf 23ee      	TST  R30
000ae0 2e0e      	MOV  R0,R30
000ae1 2fea      	MOV  R30,R26
000ae2 f019      	BREQ __LSRB12R
                 __LSRB12L:
000ae3 95e6      	LSR  R30
000ae4 940a      	DEC  R0
000ae5 f7e9      	BRNE __LSRB12L
                 __LSRB12R:
000ae6 9508      	RET
                 
                 __MULW12U:
000ae7 9ffa      	MUL  R31,R26
000ae8 2df0      	MOV  R31,R0
000ae9 9feb      	MUL  R30,R27
000aea 0df0      	ADD  R31,R0
000aeb 9fea      	MUL  R30,R26
000aec 2de0      	MOV  R30,R0
000aed 0df1      	ADD  R31,R1
000aee 9508      	RET
                 
                 __GETW1P:
000aef 91ed      	LD   R30,X+
000af0 91fc      	LD   R31,X
000af1 9711      	SBIW R26,1
000af2 9508      	RET
                 
                 __EEPROMRDB:
000af3 99e1      	SBIC EECR,EEWE
000af4 cffe      	RJMP __EEPROMRDB
000af5 93ff      	PUSH R31
000af6 b7ff      	IN   R31,SREG
000af7 94f8      	CLI
000af8 bbae      	OUT  EEARL,R26
000af9 bbbf      	OUT  EEARH,R27
000afa 9ae0      	SBI  EECR,EERE
000afb b3ed      	IN   R30,EEDR
000afc bfff      	OUT  SREG,R31
000afd 91ff      	POP  R31
000afe 9508      	RET
                 
                 __EEPROMWRB:
000aff 9be1      	SBIS EECR,EEWE
000b00 c002      	RJMP __EEPROMWRB1
000b01 95a8      	WDR
000b02 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
000b03 b79f      	IN   R25,SREG
000b04 94f8      	CLI
000b05 bbae      	OUT  EEARL,R26
000b06 bbbf      	OUT  EEARH,R27
000b07 9ae0      	SBI  EECR,EERE
000b08 b38d      	IN   R24,EEDR
000b09 17e8      	CP   R30,R24
000b0a f019      	BREQ __EEPROMWRB0
000b0b bbed      	OUT  EEDR,R30
000b0c 9ae2      	SBI  EECR,EEMWE
000b0d 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
000b0e bf9f      	OUT  SREG,R25
000b0f 9508      	RET
                 
                 __CPW02:
000b10 2400      	CLR  R0
000b11 160a      	CP   R0,R26
000b12 060b      	CPC  R0,R27
000b13 9508      	RET
                 
                 __SAVELOCR6:
000b14 935a      	ST   -Y,R21
                 __SAVELOCR5:
000b15 934a      	ST   -Y,R20
                 __SAVELOCR4:
000b16 933a      	ST   -Y,R19
                 __SAVELOCR3:
000b17 932a      	ST   -Y,R18
                 __SAVELOCR2:
000b18 931a      	ST   -Y,R17
000b19 930a      	ST   -Y,R16
000b1a 9508      	RET
                 
                 __LOADLOCR6:
000b1b 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000b1c 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000b1d 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000b1e 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000b1f 8119      	LDD  R17,Y+1
000b20 8108      	LD   R16,Y
000b21 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128A register use summary:
r0 :  47 r1 :   7 r2 :   0 r3 :   0 r4 :   6 r5 :   4 r6 :   3 r7 :   1 
r8 :  37 r9 :  12 r10:   5 r11:   2 r12:   4 r13:   7 r14:   0 r15:   2 
r16:  49 r17:  82 r18:  26 r19:  35 r20:  18 r21:  32 r22:  18 r23:   3 
r24:  34 r25:  15 r26: 299 r27:  97 r28:  19 r29:   1 r30: 759 r31: 136 
x  :  25 y  : 429 z  :  26 
Registers used: 32 out of 35 (91.4%)

ATmega128A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  16 add   :  23 
adiw  :  33 and   :   8 andi  :  26 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  55 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   7 
brlt  :  16 brmi  :   0 brne  :  75 brpl  :   1 brsh  :  18 brtc  :   0 
brts  :   1 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  : 166 
cbi   :  11 cbr   :   0 clc   :   0 clh   :   0 cli   :   3 cln   :   0 
clr   :  35 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   9 
cp    :  31 cpc   :  18 cpi   :  82 cpse  :   0 dec   :   7 des   :   0 
elpm  :   0 eor   :   1 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 
ijmp  :   0 in    :   8 inc   :   4 jmp   :  64 ld    :  68 ldd   : 193 
ldi   : 262 lds   :  53 lpm   :  23 lsl   :   5 lsr   :  15 mov   :  88 
movw  :  55 mul   :   5 muls  :   1 mulsu :   0 neg   :   0 nop   :   0 
or    :   7 ori   :  16 out   :  26 pop   :  11 push  :  11 rcall :  75 
ret   :  59 reti  :   1 rjmp  : 114 rol   :   1 ror   :   0 sbc   :   1 
sbci  :  15 sbi   :  22 sbic  :   1 sbis  :   1 sbiw  :  34 sbr   :   0 
sbrc  :   0 sbrs  :   0 sec   :   0 seh   :   0 sei   :   1 sen   :   0 
ser   :   0 ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    : 167 std   :  37 sts   :  50 sub   :   8 subi  :  44 
swap  :   1 tst   :   8 wdr   :   2 
Instructions used: 65 out of 117 (55.6%)

ATmega128A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001644   5058    642   5700  131072   4.3%
[.dseg] 0x000100 0x00078e      0    654    654    4096  16.0%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 14 warnings
