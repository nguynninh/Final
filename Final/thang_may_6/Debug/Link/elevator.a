;/*
; * elevator.c
; *
; * Created: 12/29/2022 10:30:54 PM
; * Author: Who
; */
;
;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <hardware.c>
;#include <delay.h>
;#include <glcd.h>
;#include <font5x7.h>
;#include <alcd.h>
;
;int keypad[3][3] = {0,1,2,3,4,5,6,7,8};

	.DSEG
;
;void init_register() {
; 0000 0009 void init_register() {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
;    // ban phim ma tran
;    DDRF = 0b11101010;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;    // DC
;    DDRB.4 = 1;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;    // servo
;    DDRC.7 = 1;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;    //for servo inverse (nhung ko xuat xung PWM, can than cai USB drive)
;    DDRB.5 = 1;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;    ADCSRA=0x83;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;}
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;
;// NOTE: DUNG CO CHE TAY VAO CAI LDR OR YOU WILL NEVER SEE IT COMING
;int read() {
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;    char a, i, j;
;    for(j = 0; j < 3; j++ ){
;PCODE: $0000001D VOL: 0
;	a -> R17
;	i -> R16
;	j -> R19
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;        if (j == 0) PORTF = 0b11111101;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;        if (j == 1) PORTF = 0b11110111;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;        if (j == 2) PORTF = 0b11011111;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;        for(i = 0; i < 3; i++){
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;            if (i == 0){
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;                a = PINF&0x04;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;                if(a != 0x04) {
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;                    return keypad[i][j];
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;                }
;            }
;PCODE: $00000055 VOL: 0
;            if (i == 1){
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;                a = PINF&0x10;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;                if (a != 0x10) {
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;                    return keypad[i][j];
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;                }
;            }
;PCODE: $0000006C VOL: 0
;            if (i == 2){
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;                a = PINF&0x01;
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;                if (a != 0x01) {
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;                    return keypad[i][j];
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;                }
;            }
;PCODE: $00000083 VOL: 0
;        }
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;    }
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;    return -1;
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;}
;PCODE: $00000093 VOL: 0
;
;
;void init_glcd(int bias, int vlcd) {
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;    GLCDINIT_t glcd_init_data;
;    glcd_init_data.font=font5x7;
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;	bias -> Y+10
;	vlcd -> Y+8
;	glcd_init_data -> Y+0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;    glcd_init_data.temp_coef=140;
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;    glcd_init_data.bias=bias;
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;    glcd_init_data.vlcd=vlcd;
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;    glcd_init(&glcd_init_data);
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;}
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;
;
;void init_lcd() {
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;    lcd_init(16);
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;    lcd_clear();
;PCODE: $000000B8 VOL: 0
;}
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;
;
;void adjustSpeed(int speed) {
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;    OCR0 = 255 - speed;
;PCODE: $000000BD VOL: 0
;	speed -> Y+0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;}
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;
;void quay_nguoc_DC() {
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;    PORTB.5 = 1;
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;}
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;
;void quay_DC() {
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;    adjustSpeed(120);
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;}
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;
;void dung_DC() {
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;    adjustSpeed(0);
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;    PORTB.5 = 0;
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;}
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;
;void init_timer() {
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;    // khoi tao timer 0 cho dong co
;    ASSR=0<<AS0;
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;    TCCR0=(1<<WGM00) | (1<<COM01) | (1<<COM00) | (0<<WGM01) | (1<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;    TCNT0=0x00;
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;    adjustSpeed(0);
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;
;    // Timer 1 (0.1 ms) cho den va servo
;    TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<COM1C1) | (0<<COM1C0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;    TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (1<<CS10);
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;    TCNT1H=0xFC;
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;    TCNT1L=0xE0;
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;    TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (1<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;    ETIMSK=(0<<TICIE3) | (0<<OCIE3A) | (0<<OCIE3B) | (0<<TOIE3) | (0<<OCIE3C) | (0<<OCIE1C);
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;    #asm("sei")
;PCODE: $000000F2 VOL: 0
	sei
;PCODE: $000000F3 VOL: 0
;}
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;#include <delay.h>
;#include <stdlib.h>
;#include <glcd.h>
;#include <alcd.h>
;#define servo_1 PORTC.7
;
;int dem = 0, vi_tri = 10;
;char what[16];
;int i, k;
;// dieu khien cac tang trong thang may
;bool order[9] = {false, false, false, false, false, false, false, false, false};
;
;
;// dieu khien trang thai len / xuong
;bool len = true;
;int currentLevel = 0;
;
;// Timer1 overflow interrupt service routine (delay 0.1 ms)
;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
; 0000 001D {
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 001E     int input;
; 0000 001F     // Reinitialize Timer1 value
; 0000 0020     TCNT1H=0xFCE0 >> 8;
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;	input -> R16,R17
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
; 0000 0021     TCNT1L=0xFCE0 & 0xff;
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0000 0022 
; 0000 0023     // servo
; 0000 0024     dem++;
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0000 0025     if(dem >= 200)
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
; 0000 0026         dem = 0;
;PCODE: $00000104 VOL: 0
; 0000 0027     if (dem < vi_tri)
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 0028         servo_1 = 1;
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0000 0029     else
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0000 002A         servo_1 = 0;
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
; 0000 002B 
; 0000 002C     // ~ delay 199 ms ban phim ma tran
; 0000 002D     if (dem == 199) {
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
; 0000 002E         input = read();
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0000 002F         if (input != -1)
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
; 0000 0030             order[input] = true;
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
; 0000 0031     }
;PCODE: $0000011C VOL: 0
; 0000 0032 }
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;// led 7 doan
;// void khoi_tao_led_7_doan(){
;//     DDRF = 0xFF;
;//     DDRD = 0xFF;
;//     DDRA.7 = 1;
;
;// }
;// void hienThiLed7Doan(int i, unsigned int j){
;//     if(i==0){
;//         PORTF = 0x80 + j;
;//     PORTD = 0xF9;
;//     PORTA = 0x7F;
;//     }
;//     if(i==1){
;//     PORTF = 0x86 + j;
;//     PORTD = 0xFF;
;//     PORTA = 0x7F;
;//     }
;//     if(i==2){
;//     PORTF = 0x84 + j;
;//     PORTD = 0xF1;
;
;//     PORTA = 0xFF;
;//     }
;//     if(i==3){
;//     PORTF = 0x84 + j;
;//     PORTD = 0xF5;
;//     PORTE = 0x00;
;//     PORTA = 0x7F;
;//     }
;//     if(i==4){
;//     PORTF = 0x82 + j;
;//     PORTD = 0xF7;
;//     PORTA = 0x7F;
;//     }
;//     if(i==5){
;//     PORTF = 0xA0 + j;
;//     PORTD = 0xF5;
;//     PORTA = 0x7F;
;//     }if(i==6){
;//     PORTF = 0xA0 + j;
;//     PORTD = 0xF1;
;//     PORTA = 0x7F;
;//     }
;//     if(i==7){
;//     PORTF = 0x84 + j;
;//     PORTD = 0xFF;
;//     PORTA = 0x7F;
;//     }
;
;//     if(i==8){
;//     PORTF = 0x80 + j;
;//     PORTD = 0xF1;
;//     PORTA = 0x7F;
;//     }
;//     if(i==9){
;//     PORTF = 0x80 + j;
;//     PORTD = 0xF5;
;//     PORTA = 0x7F;
;//     }if(i==10){
;//     PORTF = 0x26 + j;
;//     PORTD = 0xFF;
;//     PORTA = 0xFF;
;//     }
;
;//     delay_ms(1);
;// }
;
;void thang_may() {
; 0000 0077 void thang_may() {
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0000 0078     // neu ko co tang nao dc bam thi thoi ko lam gi ca
; 0000 0079     for (i = 0; i <= 8; i++){
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0000 007A         if (order[i] == true){
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
; 0000 007B             break;
;PCODE: $00000132 VOL: 0
; 0000 007C         }
; 0000 007D         if (i == 8){
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
; 0000 007E             return;
;PCODE: $00000137 VOL: 0
; 0000 007F         }
; 0000 0080     }
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0000 0081     // thiet lap trang thai len/xuong
; 0000 0082     if (len) {
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
; 0000 0083         for (i = currentLevel; i <= 8; i++) {
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0000 0084             // neu len tang 8 roi ma ko co yeu cau thi chuyen che do cho di xuong
; 0000 0085             if (i == 8 && order[i] == false) {
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0000 0086                 len = false;
;PCODE: $00000157 VOL: 0
; 0000 0087             }
; 0000 0088             else if (order[i] == true) {
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
; 0000 0089                 break;
;PCODE: $0000015F VOL: 0
; 0000 008A             }
; 0000 008B         }
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
; 0000 008C     }
; 0000 008D     if (!len) {
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0000 008E         for (i = currentLevel; i >= 0; i--) {
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
; 0000 008F             // tuong tu voi doan di len. neu da o tang 0
; 0000 0090             if (i == 0 && order[i] == false) {
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
; 0000 0091                 len = true;
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
; 0000 0092                 return;
;PCODE: $00000181 VOL: 0
; 0000 0093             }
; 0000 0094             else if (order[i] == true) {
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
; 0000 0095                 break;
;PCODE: $00000188 VOL: 0
; 0000 0096             }
; 0000 0097         }
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
; 0000 0098     }
; 0000 0099 
; 0000 009A     // trong truong hop co tang dc bam, mo servo 1 goc 90 do trong 2s
; 0000 009B     vi_tri = 15;
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
; 0000 009C     delay_ms(2000);
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
; 0000 009D     vi_tri = 10;
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
; 0000 009E 
; 0000 009F     if (len)
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
; 0000 00A0         quay_DC();
;PCODE: $0000019A VOL: 0
; 0000 00A1     else
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
; 0000 00A2         quay_nguoc_DC();
;PCODE: $0000019D VOL: 0
; 0000 00A3 
; 0000 00A4     while (order[currentLevel] == false) {
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
; 0000 00A5         k = 0;
;PCODE: $000001A5 VOL: 0
; 0000 00A6         glcd_clear();
;PCODE: $000001A6 VOL: 0
; 0000 00A7         glcd_outtextxy(5, 25, "Next:");
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
; 0000 00A8 
; 0000 00A9         lcd_clear();
;PCODE: $000001AE VOL: 0
; 0000 00AA         lcd_gotoxy(0, 1);
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
; 0000 00AB         lcd_puts("Next: ");
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
; 0000 00AC         if (len){
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
; 0000 00AD             currentLevel++;
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
; 0000 00AE             for(i = currentLevel; i<=8; i++){
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
; 0000 00AF                 if(order[i]){
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
; 0000 00B0                     itoa(i,what);
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
; 0000 00B1                     glcd_outtextxy(35+6*k, 25, what);
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
; 0000 00B2                     k++;
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
; 0000 00B3 
; 0000 00B4                     lcd_putchar(i+'0');
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
; 0000 00B5                 }
; 0000 00B6             }
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
; 0000 00B7             for(i = currentLevel-1; i>=0; i--){
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
; 0000 00B8                 if(order[i]){
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
; 0000 00B9                     itoa(i,what);
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
; 0000 00BA                     glcd_outtextxy(35+6*k, 25, what);
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
; 0000 00BB                     k++;
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
; 0000 00BC 
; 0000 00BD                     lcd_putchar(i+'0');
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
; 0000 00BE                 }
; 0000 00BF             }
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
; 0000 00C0 
; 0000 00C1         } else {
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
; 0000 00C2             currentLevel--;
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
; 0000 00C3             for(i = currentLevel; i>=0; i--){
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
; 0000 00C4                 if(order[i]){
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
; 0000 00C5                     itoa(i,what);
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
; 0000 00C6                     glcd_outtextxy(35+6*k, 25, what);
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
; 0000 00C7                     k++;
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
; 0000 00C8 
; 0000 00C9                     lcd_putchar(i+'0');
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
; 0000 00CA                 }
; 0000 00CB             }
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
; 0000 00CC             for(i = currentLevel+1; i<=8; i++){
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
; 0000 00CD                 if(order[i]){
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
; 0000 00CE                     itoa(i,what);
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
; 0000 00CF                     glcd_outtextxy(35+6*k, 25, what);
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
; 0000 00D0                     k++;
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
; 0000 00D1 
; 0000 00D2                     lcd_putchar(i+'0');
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
; 0000 00D3                 }
; 0000 00D4             }
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
; 0000 00D5         }
;PCODE: $00000262 VOL: 0
; 0000 00D6         //glcd_clear();
; 0000 00D7         itoa(currentLevel, what);
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
; 0000 00D8         //glcd_outtextxy(5, 20, "Dang di chuyen ...");
; 0000 00D9         glcd_outtextxy(5, 15, "Current:");
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
; 0000 00DA         glcd_outtextxy(55, 15, what);
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
; 0000 00DB 
; 0000 00DC 
; 0000 00DD         lcd_gotoxy(0, 0);
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
; 0000 00DE         lcd_puts("Current: ");
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
; 0000 00DF         lcd_putchar(currentLevel+'0');
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
; 0000 00E0         //hienThiLed7Doan(currentLevel, 0b00000001);
; 0000 00E1         delay_ms(1000);
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
; 0000 00E2     }
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
; 0000 00E3     //hien thi nokia
; 0000 00E4     //glcd_clear();
; 0000 00E5     //itoa(currentLevel, what);
; 0000 00E6     //glcd_outtextxy(5, 20, "Den tang");
; 0000 00E7     //glcd_outtextxy(60, 20, what);
; 0000 00E8     glcd_clear();
;PCODE: $00000282 VOL: 0
; 0000 00E9     itoa(currentLevel, what);
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
; 0000 00EA     glcd_outtextxy(5, 15, "Current:");
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
; 0000 00EB     glcd_outtextxy(55, 15, what);
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
; 0000 00EC     glcd_outtextxy(5, 25, "Next:");
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
; 0000 00ED     k=0;
;PCODE: $0000029B VOL: 0
; 0000 00EE 
; 0000 00EF     lcd_clear();
;PCODE: $0000029C VOL: 0
; 0000 00F0     lcd_gotoxy(0, 0);
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
; 0000 00F1     lcd_puts("Current: ");
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
; 0000 00F2     lcd_putchar(currentLevel+'0');
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
; 0000 00F3     lcd_gotoxy(0, 1);
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
; 0000 00F4     lcd_puts("Next: ");
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
; 0000 00F5     if (len){
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
; 0000 00F6         for(i = currentLevel+1; i<=8; i++){
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
; 0000 00F7             if(order[i]){
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
; 0000 00F8                 itoa(i,what);
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
; 0000 00F9                 glcd_outtextxy(35+6*k, 25, what);
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
; 0000 00FA                 k++;
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
; 0000 00FB 
; 0000 00FC                 lcd_putchar(i+'0');
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
; 0000 00FD             }
; 0000 00FE             }
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
; 0000 00FF         for(i = currentLevel-1; i>=0; i--){
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
; 0000 0100             if(order[i]){
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
; 0000 0101                 itoa(i,what);
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
; 0000 0102                 glcd_outtextxy(35+6*k, 25, what);
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
; 0000 0103                 k++;
;PCODE: $000002F4 VOL: 0
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
; 0000 0104 
; 0000 0105                 lcd_putchar(i+'0');
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
; 0000 0106             }
; 0000 0107         }
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
; 0000 0108 
; 0000 0109     } else {
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
; 0000 010A         for(i = currentLevel-1; i>=0; i--){
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
; 0000 010B             if(order[i]){
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
; 0000 010C                 itoa(i,what);
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
; 0000 010D                 glcd_outtextxy(35+6*k, 25, what);
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
; 0000 010E                 k++;
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
; 0000 010F 
; 0000 0110                 lcd_putchar(i+'0');
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
; 0000 0111             }
; 0000 0112         }
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
; 0000 0113         for(i = currentLevel+1; i<=8; i++){
;PCODE: $0000032B VOL: 0
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
;PCODE: $00000330 VOL: 0
;PCODE: $00000331 VOL: 0
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
; 0000 0114             if(order[i]){
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
; 0000 0115                 itoa(i,what);
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
; 0000 0116                 glcd_outtextxy(35+6*k, 25, what);
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
;PCODE: $00000346 VOL: 0
; 0000 0117                 k++;
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 0
;PCODE: $00000349 VOL: 0
; 0000 0118 
; 0000 0119                 lcd_putchar(i+'0');
;PCODE: $0000034A VOL: 0
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
; 0000 011A             }
; 0000 011B         }
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
; 0000 011C     }
;PCODE: $00000354 VOL: 0
; 0000 011D 
; 0000 011E 
; 0000 011F     order[currentLevel] = false;
;PCODE: $00000355 VOL: 0
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
; 0000 0120     dung_DC();
;PCODE: $00000359 VOL: 0
; 0000 0121     vi_tri = 15;
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
; 0000 0122     delay_ms(2000);
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
; 0000 0123     vi_tri = 10;
;PCODE: $0000035E VOL: 0
;PCODE: $0000035F VOL: 0
; 0000 0124 
; 0000 0125 }
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0

	.DSEG
_0x42:
	.BYTE 0x40
;
;void main(void)
; 0000 0128 {

	.CSEG
;PCODE: $00000362 VOL: 0
; 0000 0129     //khoi_tao_led_7_doan();
; 0000 012A     init_glcd(4, 66);
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
;PCODE: $00000366 VOL: 0
;PCODE: $00000367 VOL: 0
; 0000 012B     init_lcd();
;PCODE: $00000368 VOL: 0
; 0000 012C     init_register();
;PCODE: $00000369 VOL: 0
; 0000 012D     init_timer();
;PCODE: $0000036A VOL: 0
; 0000 012E     itoa(currentLevel, what);
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
; 0000 012F     glcd_outtextxy(30, 20, what);
;PCODE: $0000036F VOL: 0
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
; 0000 0130 
; 0000 0131     while (1)
;PCODE: $00000375 VOL: 0
; 0000 0132     {
; 0000 0133     // Please write your application code here
; 0000 0134         thang_may();
;PCODE: $00000376 VOL: 0
; 0000 0135     }
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
; 0000 0136 }
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
;PCODE: $0000037B VOL: 0
